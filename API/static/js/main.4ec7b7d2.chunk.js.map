{"version":3,"sources":["views/Quiz.js","components/quiz/issues.js","components/quiz/historic.js","views/Home.js","components/Toolbar.js","views/Tree.js","components/Nav.js","App.js","reportWebVitals.js","index.js"],"names":["Quiz","props","changeData","nextIssueId","decision","history","issue","state","tree","criteres","find","critere","ID_Critere","decisions","filter","ID_Critere_entrant","oldIssue","currentIssue","setState","currentDecisions","step","manageHistoric","alert","backOut","issueId","index","historic","indexOf","el","length","console","log","condition","historicElement","concat","url","window","location","protocol","hostname","root","require","resolve","__dirname","this","axios","get","then","response","data","entree","catch","error","className","React","Component","Issues","Libelle","action","map","i","ID_Critere_sortant","type","name","value","ID_Decision","onClick","checkbox","$","val","icon","faChevronRight","Historic","back","element","bind","Home","Toolbar","onDragStart","event","nodeType","dataTransfer","setData","effectAllowed","draggable","Tree","useState","nextId","setNextId","editedElement","setEditedElement","id","label","position","x","y","source","target","arrowHeadType","elements","setElements","reactFlowWrapper","useRef","reactFlowInstance","setReactFlowInstance","getId","each","currentId","toString","ref","style","height","backgroundColor","onElementsRemove","elementsToRemove","els","removeElements","onConnect","params","addEdge","deleteKeyCode","onLoad","_reactFlowInstance","onDrop","preventDefault","getData","checkExist","reactFlowBounds","current","getBoundingClientRect","newNode","es","createNode","project","clientX","left","clientY","top","parseInt","onDragOver","dropEffect","onElementClick","text","css","append","openEdition","onPaneClick","newValue","children","forEach","remove","closeEdition","Nav","to","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ec7b7d2.chunk.js","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Issues from '../components/quiz/issues';\r\nimport Historic from '../components/quiz/historic';\r\n\r\nexport class Quiz extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tree : null,\r\n            currentIssue: null,\r\n            currentDecisions: [],\r\n            historic: [],\r\n            step: 0,\r\n        };\r\n        // this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    changeData = (nextIssueId, decision = null, history = true) => {\r\n        // next issue ID in element\r\n        if(nextIssueId != 0){\r\n            let issue = this.state.tree.criteres.find(critere => critere.ID_Critere === nextIssueId);\r\n            let decisions =  this.state.tree.decisions.filter(decision => decision.ID_Critere_entrant === issue.ID_Critere);\r\n            let oldIssue = this.state.currentIssue;\r\n            this.setState({\r\n                currentIssue: issue,\r\n                currentDecisions: decisions,\r\n                step: this.state.step + 1\r\n            }, () => {if(history){this.manageHistoric(decision, oldIssue)}});\r\n        }else {\r\n            alert(\"fini\");\r\n        }\r\n    }\r\n\r\n    backOut = (issueId) => {\r\n        this.changeData(issueId, null, false);\r\n        let index =  this.state.historic.indexOf(this.state.historic.find(el => el.issue.ID_Critere === issueId));\r\n        this.state.historic.length = index + 1;\r\n        this.state.historic[index].decision = null;\r\n        this.setState({step: index + 1}, () =>  console.log(this.state));\r\n    }\r\n\r\n    manageHistoric = (decision = null, oldIssue) => {\r\n            let condition = this.state.historic.find(el => el.issue.ID_Critere === oldIssue.ID_Critere);\r\n            if(condition){condition.decision = decision;}\r\n            let historicElement = {\r\n                issue: this.state.currentIssue,\r\n                decision: null\r\n            }\r\n            this.setState({historic: this.state.historic.concat(historicElement)});\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        var path = require('path');\r\n        let root = path.resolve(__dirname);\r\n        console.log(root);\r\n\r\n        if(!this.state.tree){\r\n            axios.get(url + '/test/MATUI/API/Controllers/lireArbre.php')\r\n            .then(response => {\r\n                this.setState({tree: response.data});\r\n                this.changeData(response.data.entree[0].ID_Critere);\r\n            })\r\n            .catch(error => console.log(error))\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Quiz\">\r\n                <Issues issue={this.state.currentIssue} \r\n                    decisions={this.state.currentDecisions} \r\n                    changeData={this.changeData}\r\n                    step={this.state.step}\r\n                />\r\n                <Historic historic={this.state.historic} \r\n                    backOut={this.backOut}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Quiz;\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\nfunction Issues(props) {\r\n\r\n    function next(){\r\n        let checkbox = $('input:checked').val();\r\n        let decision = props.decisions.find(decision => decision.ID_Critere_sortant === checkbox)\r\n        props.changeData(checkbox, decision);\r\n    }\r\n\r\n    if(props.issue && props.decisions){\r\n        return (\r\n            <div className=\"Issues\">\r\n                <h3>{props.issue.Libelle}</h3>\r\n                <p className=\"step\">Question {props.step}</p>\r\n                <form action=\"#\">\r\n                {props.decisions.map((decision, i) => {     \r\n                    if(decision.ID_Critere_sortant == null){\r\n                        // 0 == end node\r\n                        decision.ID_Critere_sortant = 0;\r\n                    }\r\n                    return (\r\n                        <div key={decision.ID_Decision}>\r\n                            <input type=\"radio\" name=\"radio-group\" value={decision.ID_Critere_sortant}/>\r\n                            <label>{decision.Libelle}</label>\r\n                        </div>\r\n                    ) \r\n                })}\r\n                </form>    \r\n                <button onClick={next}>Next<FontAwesomeIcon className=\"icon\" icon={faChevronRight} /></button>      \r\n            </div>\r\n        );\r\n    } else {\r\n        return <p>loading...</p>\r\n    }\r\n}\r\n\r\nexport default Issues;\r\n","import React from 'react';\r\n\r\nfunction Historic(props) {\r\n\r\n    function back(element){\r\n        props.backOut(element.issue.ID_Critere);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Historic\">\r\n            <h3>Progression</h3>\r\n            <ul>\r\n            {props.historic.map((element, i) => {   \r\n                console.log(props.historic)  \r\n                    return (\r\n                        <li onClick={back.bind(this, element)} key={i}>\r\n                                <p>{element.issue.Libelle}</p>\r\n                                <p>{element.decision ? element.decision.Libelle : \"\"}</p>\r\n                            \r\n                        </li>\r\n                    ) \r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Historic;\r\n","import React from 'react';\r\n\r\nfunction Home() {\r\n    return (\r\n        <div className=\"Home\">\r\n            <h1>Home page</h1>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nfunction Toolbar() {\r\n    const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData('application/reactflow', nodeType);\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  };\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n      <div className=\"dndnode input\" onDragStart={(event) => onDragStart(event, 'input')} draggable>\r\n        Input Node\r\n      </div>\r\n      <div className=\"dndnode\" onDragStart={(event) => onDragStart(event, 'default')} draggable>\r\n        Default Node\r\n      </div>\r\n      <div className=\"dndnode output\" onDragStart={(event) => onDragStart(event, 'output')} draggable>\r\n        Output Node\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React, {useState, useRef} from 'react';\r\nimport $ from 'jquery';\r\nimport ReactFlow,{ removeElements, addEdge, ReactFlowProps, Controls,ReactFlowProvider  } from 'react-flow-renderer';\r\n\r\nimport Toolbar from '../components/Toolbar';\r\nimport { createPortal } from 'react-dom';\r\n\r\nfunction Tree() {\r\n\r\n    const initialElements = [\r\n        {\r\n            id: '1',\r\n            type: 'input',\r\n            data: { label: 'Start Node' },\r\n            position: { x: 250, y: 25 },\r\n        },\r\n        {\r\n            id: '2',\r\n            type: 'default',\r\n            data: { label: 'Node' },\r\n            position: { x: 100, y: 125 },\r\n        },\r\n        {\r\n            id: '3',\r\n            type: 'output', \r\n            data: { label: 'End Node' },\r\n            position: { x: 250, y: 250 },\r\n        },\r\n        {\r\n            id: 'e1-2',\r\n            source: '1',\r\n            target: '2',\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: 'edge label',\r\n        },\r\n        {\r\n            id: 'e2-3',\r\n            source: '2',\r\n            target: '3',\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: 'edge label',\r\n          },\r\n      ];\r\n\r\n    const [nextId, setNextId] = useState(\"0\");\r\n    const [editedElement, setEditedElement] = useState(null);\r\n    const [elements, setElements] = useState(initialElements);\r\n    const reactFlowWrapper = useRef(null);\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\r\n    const onConnect = (params) => setElements((els) => addEdge({ ...params, \r\n        arrowHeadType: 'arrowclosed', label: 'edge label', type: 'smoothstep'}, els));\r\n    const onLoad = (_reactFlowInstance) => setReactFlowInstance(_reactFlowInstance);\r\n\r\n\r\n    // HOOKS REACT-FLOW\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = (event) => {\r\n        event.preventDefault();\r\n\r\n        //check if input/output already exists\r\n        const type = event.dataTransfer.getData('application/reactflow');\r\n        if(type == \"input\" || type == \"output\"){\r\n            if(checkExist(type)){\r\n                return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \" + type)\r\n            } \r\n        }\r\n        \r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n        createNode(type, position);\r\n        setNextId((parseInt(nextId) + 1).toString());\r\n    };\r\n\r\n    const onElementClick = (event, element) =>{\r\n        event.preventDefault();\r\n        openEdition(element);\r\n    }\r\n\r\n    const onPaneClick = (event) => {\r\n        event.preventDefault();\r\n        closeEdition();\r\n    }\r\n\r\n\r\n    // FUNCTIONS\r\n\r\n    // set next ID\r\n    (function setId(){\r\n        $(\".react-flow__node\").each(function( index ) {\r\n            let currentId = $(this).data(\"id\");\r\n            if(currentId >= nextId){\r\n                setNextId((currentId + 1).toString());\r\n            }\r\n        });\r\n    })();\r\n\r\n    function getId(){\r\n        return nextId;\r\n    }\r\n\r\n    // add input in selected node\r\n    function openEdition(element){\r\n        if(!editedElement){\r\n            let el = $(\"div\").find(`[data-id='${element.id}']`)\r\n            let text = el.text()\r\n            el.css(\"font-size\", 0);\r\n            el.append(`<input type=\"text\" id=\"label\" name=\"label\" value=\"${text}\"/>`);\r\n            setEditedElement(el)\r\n        }\r\n    }\r\n\r\n    // remove input in selected node and save label\r\n    function closeEdition(){\r\n        if(editedElement){\r\n            let newValue = editedElement.children(\"input\").val();\r\n            elements.forEach(element => {\r\n                if(element.id == editedElement.data(\"id\")){\r\n                    element.data.label = newValue;\r\n                }\r\n            });\r\n            editedElement.children(\"input\").remove();\r\n            editedElement.css(\"font-size\", \"12px\");\r\n            setEditedElement(null)\r\n        }\r\n    }\r\n\r\n    function createNode(type, position) {\r\n        let newNode = {\r\n            id: getId(),\r\n            type,\r\n            position,\r\n            data: { label: `${type} node` },\r\n        };\r\n        setElements((es) => es.concat(newNode));\r\n    }\r\n\r\n    // check if a node type already exists\r\n    function checkExist(type){\r\n        for (let i = 0; i < elements.length; i++) {\r\n            if(elements[i].type == type){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // DEBUG\r\n\r\n    function printNodes(){\r\n        console.log(elements);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tree\">\r\n            <ReactFlowProvider>        \r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <h1>Tree</h1>\r\n                    <div style={{ height: 600, backgroundColor: 'lightgrey' }}>\r\n                        <ReactFlow  elements={elements}\r\n                            onElementsRemove={onElementsRemove}\r\n                            onConnect={onConnect}\r\n                            deleteKeyCode={46}\r\n                            onLoad={onLoad}\r\n                            onDrop={onDrop}\r\n                            onDragOver={onDragOver}\r\n                            onElementClick={onElementClick}\r\n                            onPaneClick={onPaneClick} />\r\n                    </div>\r\n                    <button onClick={() => printNodes()}>print nodes</button>\r\n                    <Toolbar/>\r\n                </div>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tree;\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Nav() {\r\n    return (\r\n        <div className=\"Navigation\">\r\n            <nav>\r\n                <ul>\r\n                    <Link to=\"/\"><li>Home</li></Link>\r\n                    <Link to=\"/quiz\"><li>Quiz</li></Link>\r\n                    <Link to=\"/manageTree\"><li>Tree</li></Link>\r\n                </ul>\r\n            </nav>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Nav;\r\n","import './App.scss';\nimport React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport Home from './views/Home';\nimport Quiz from './views/Quiz';\nimport Tree from './views/Tree';\n\nimport Nav from './components/Nav';\n\n\nexport class App extends React.Component {\n\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {list : null};\n  //   this.componentDidMount = this.componentDidMount.bind(this);\n  // }\n\n//   componentDidMount(){\n//   axios.get('http://localhost/reactTest/test/API/route.php')\n//   .then(response =>{this.setState({list: response.data})})\n//   .catch(error => console.log(error) )\n\n//   console.log(this.state.list)\n// };\n\n  render(){\n    return(\n        <Router>\n          <div className=\"App\">\n            <Nav/>\n            <Switch>\n              <Route path=\"/\" exact component={Home}/>\n              <Route path=\"/quiz\" exact component={Quiz}/>\n              <Route path=\"/manageTree\" exact component={Tree}/>\n              <Redirect to=\"/\" /> {/* Redirect to home when invalid url */}\n            </Switch>\n          </div>\n        </Router>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}