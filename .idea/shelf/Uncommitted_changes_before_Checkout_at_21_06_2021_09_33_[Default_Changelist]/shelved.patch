Index: API/Controllers/creerArbre.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\r\n\r\n/**\r\n * Controller to create Tree\r\n * @Goal : Fill database with MATUI data\r\n * @UsedByModule : printNodes() in Tree.js (/src/view/Tree.js)\r\n * @ModuleUsed : Database.php, Critere.php, Decision.php, Entree.php, Methode.php, MethodeRessource.php, Sortie.php\r\n * @VisibleVariables : Message, Error\r\n * @VisibleProcedures : None\r\n */\r\n\r\nheader(\"Access-Control-Allow-Origin: *\");\r\nheader(\"Content-Type: application/json; charset=UTF-8\");\r\nheader(\"Access-Control-Allow-Methods: POST\");\r\nheader(\"Access-Control-Max-Age: 3600\");\r\nheader(\"Access-Control-Allow-Headers: Content-Type, Access-Control-Allow-Headers, Authorization, X-Requested-With\");\r\n\r\nif ($_SERVER['REQUEST_METHOD'] == 'POST') {\r\n    include_once '../config/Database.php';\r\n    include_once '../models/Critere.php';\r\n    include_once '../models/Decision.php';\r\n    include_once '../models/Entree.php';\r\n    include_once '../models/Methode.php';\r\n    include_once '../models/MethodeRessource.php';\r\n    include_once '../models/Sortie.php';\r\n\r\n\r\n    $database = new Database();\r\n    $db = $database->getConnection();\r\n\r\n    $critere = new Critere($db);\r\n    $decision = new Decision($db);\r\n    $methode = new Methode($db);\r\n    $entree = new Entree($db);\r\n    $sortie = new Sortie($db);\r\n    $methodeRessource = new MethodeRessource($db);\r\n\r\n    $critere->delete();\r\n    $decision->delete();\r\n    $methode->delete();\r\n    $entree->delete();\r\n    $sortie->delete();\r\n    $methodeRessource->delete();\r\n\r\n    $donnees = json_decode(file_get_contents(\"php://input\"), true);\r\n\r\n    foreach ($donnees['criteres'] as $i) {\r\n        if (!empty($i['ID_Critere']) && !empty($i['Libelle']) && !empty($i['x']) && !empty($i['y'])) {\r\n            $critere->id = $i['ID_Critere'];\r\n            $critere->libelle = $i['Libelle'];\r\n            $critere->informations = $i['Informations'];\r\n            $critere->x = $i['x'];\r\n            $critere->y = $i['y'];\r\n            if ($critere->informations == null) {\r\n                if ($critere->createWithoutInformations()) {\r\n                    $critereResult = \"Success CRITERE\";\r\n                    //echo json_encode([\"Message\" => \"Success CRITERE\"]);\r\n                } else {\r\n                    echo json_encode([\"Error\" => \"Failure CRITERE\"]);\r\n                }\r\n\r\n            } else {\r\n                if ($critere->createWithInformations()) {\r\n                    $critereResult = \"Success CRITERE\";\r\n                    //echo json_encode([\"Message\" => \"Success CRITERE\"]);\r\n                } else {\r\n                    echo json_encode([\"Error\" => \"Failure CRITERE\"]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    foreach ($donnees['decisions'] as $i) {\r\n        if (!empty($i['ID_Decision']) && !empty($i['Libelle']) && !empty($i['ID_Critere_entrant'])) {\r\n            $decision->id = $i['ID_Decision'];\r\n            $decision->libelle = $i['Libelle'];\r\n            $decision->id_critere_entrant = $i['ID_Critere_entrant'];\r\n            $decision->id_critere_sortant = $i['ID_Critere_sortant'];\r\n            if ($decision->id_critere_sortant == \"S0\" || $decision->id_critere_sortant == null) {\r\n                if ($decision->createWithoutCritereSortant()) {\r\n                    $decisionResult =  \"Success DECISION\";\r\n                  //  echo json_encode([\"Message\" => \"Success DECISION\"]);\r\n                } else {\r\n                    echo json_encode([\"Error\" => \"Failure DECISION\"]);\r\n                }\r\n            } else {\r\n                if ($decision->createWithCritereSortant()) {\r\n                    $decisionResult = \"Success DECISION\";\r\n                    //echo json_encode([\"Message\" => \"Success DECISION\"]);\r\n                } else {\r\n                    echo json_encode([\"Error\" => \"Failure DECISION\"]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    foreach ($donnees['methodes'] as $i) {\r\n        $methode->id = $i['ID_Methode'];\r\n        $methode->libelle = $i['Libelle'];\r\n        $methode->description = $i['Description'];\r\n        $methode->effectif_preconise = $i['Effectif_preconise'];\r\n        $methode->donnees_produites = $i['Donnees_produites'];\r\n        $methode->type_analyse = $i['Type_analyse'];\r\n        $methode->type_methode = $i['Type_methode'];\r\n        $methode->exemple = $i['Exemple'];\r\n        $methode->id_decision = $i['ID_Decision'];\r\n        $methode->x = $i['x'];\r\n        $methode->y = $i['y'];\r\n        if ($methode->create()) {\r\n            $methodeResult =\"Success METHODE\";\r\n            //echo json_encode([\"Message\" => \"Success METHODE\"]);\r\n        } else {\r\n            echo json_encode([\"Error\" => \"Failure METHODE\"]);\r\n        }\r\n    }\r\n\r\n    foreach ($donnees['methodesRessources'] as $i) {\r\n        $methodeRessource->id_methode = $i['ID_Methode'];\r\n        $methodeRessource->id_ressource = $i['ID_Ressource'];\r\n        if ($methodeRessource->create()) {\r\n            $methodeRessourceResult = \"Success  METHODE RESSOURCE\";\r\n            //echo json_encode([\"Message\" => \"Success METHODE RESSOURCE\"]);\r\n        } else {\r\n            echo json_encode([\"Error\" => \"Failure METHODE RESSOURCE\"]);\r\n        }\r\n    }\r\n\r\n    if (!empty($donnees['entree'][0])) {\r\n        $entree->id = $donnees['entree'][0]['ID_Entree'];\r\n        $entree->critere = $donnees['entree'][0]['ID_Critere'];\r\n        $entree->date = date(\"Y-m-d\");\r\n        $entree->x = $donnees['entree'][0]['x'];\r\n        $entree->y = $donnees['entree'][0]['y'];\r\n        if ($entree->create()) {\r\n            $entreeResult = \"Success ENTREE\";\r\n            //echo json_encode([\"Message\" => \"Success ENTREE\"]);\r\n        } else {\r\n            echo json_encode([\"Error\" => \"Failure ENTREE\"]);\r\n        }\r\n    }\r\n\r\n    if (!empty($donnees['sortie'][0])) {\r\n        $sortie->id = $donnees['sortie'][0]['ID_Sortie'];\r\n        $sortie->message = $donnees['sortie'][0]['message'];\r\n        $sortie->id_decision = $sortie->readIdDecisionSortant();\r\n        $sortie->id_decision = $sortie->id_decision[0]['ID_Decision'];\r\n        $sortie->x = $donnees['sortie'][0]['x'];\r\n        $sortie->y = $donnees['sortie'][0]['y'];\r\n        if ($sortie->create()) {\r\n            $sortieResult = \"Success SORTIE\";\r\n            //echo json_encode([\"Message\" => \"Success SORTIE\"]);\r\n        } else {\r\n            echo json_encode([\"Error\" => \"Failure SORTIE\"]);\r\n        }\r\n    }\r\n\r\n    $arrayResults = array_merge([\"Criteres\" => $critereResult, \"Decisions\" => $decisionResult, \"Methodes\" =>$methodeResult, \"MethodesRessources\" => $methodeRessourceResult, \"Entree\" =>$entreeResult,\"Sortie\" => $sortieResult]);\r\n    http_response_code(200);\r\n    echo json_encode($arrayResults);\r\n}else {\r\n    // http_response_code(405);\r\n    echo json_encode([\"Message\" => \"Unauthorised method\"]);\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/API/Controllers/creerArbre.php b/API/Controllers/creerArbre.php
--- a/API/Controllers/creerArbre.php	
+++ b/API/Controllers/creerArbre.php	
@@ -158,6 +158,6 @@
     http_response_code(200);
     echo json_encode($arrayResults);
 }else {
-    // http_response_code(405);
+    http_response_code(405);
     echo json_encode(["Message" => "Unauthorised method"]);
 }
\ No newline at end of file
