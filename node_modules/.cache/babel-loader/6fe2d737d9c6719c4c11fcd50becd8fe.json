{"ast":null,"code":"import axios from'axios';import jwt_decode from\"jwt-decode\";import{addItem,getItem,removeItem}from\"./LocalStorage\";//Vérifie la connexion avec le token\nexport function hasAuthenticated(){var token=getItem('token');var result=token?tokenIsValid(token):false;if(false===result){removeItem('token');}return result;}//Vérifie le role admin du token\nexport function isAdminRole(){var token=getItem('token');var result=token?tokenIsValid(token):false;if(false===result){removeItem('token');return false;}if(true===result){var role=getRole(token);if(role===\"administrator\"){return true;}}return false;}//Vérifie le role user du token\nexport function isUserRole(){var token=getItem('token');var result=token?tokenIsValid(token):false;if(false===result){removeItem('token');return false;}if(true===result){var role=getRole(token);if(role===\"user\"){return true;}}return false;}//Vérifie le role superAdmin du token\nexport function isSuperAdminRole(){var token=getItem('token');var result=token?tokenIsValid(token):false;if(false===result){removeItem('token');return false;}if(true===result){var role=getRole(token);if(role===\"super-admin\"){return true;}}return false;}//Récup du role du token décodé\nexport function getRole(token){var tokenResult=decodeToken(token);return tokenResult['user_role'];}//Récupération du token + mise en localStorage\nexport function login(credentials){var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;return axios.post(url+'/Projet_TER/API/Controllers/connexion.php',credentials).then(function(response){return response.data.token;}).then(function(token){addItem('token',token);return true;});}//Supprime le token du localSTorage\nexport function logout(){removeItem('token');}//Verifie validité du token (avec temps d'expiration)\nfunction tokenIsValid(token){var decoded=jwt_decode(token);var exp=decoded['exp'];return exp*1000>new Date().getTime();}//Traduit le token pour récupérer les infos\nfunction decodeToken(token){return jwt_decode(token);}","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/services/AuthApi.js"],"names":["axios","jwt_decode","addItem","getItem","removeItem","hasAuthenticated","token","result","tokenIsValid","isAdminRole","role","getRole","isUserRole","isSuperAdminRole","tokenResult","decodeToken","login","credentials","protocol","window","location","host","hostname","url","post","then","response","data","logout","decoded","exp","Date","getTime"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {addItem, getItem, removeItem} from \"./LocalStorage\";\r\n\r\n//Vérifie la connexion avec le token\r\nexport function hasAuthenticated() {\r\n\r\n    const token = getItem('token');\r\n    const result = token ? tokenIsValid(token) : false;\r\n    if (false === result) {\r\n        removeItem('token');\r\n    }\r\n    return result;\r\n}\r\n\r\n//Vérifie le role admin du token\r\nexport function isAdminRole(){\r\n    const token = getItem('token');\r\n    const result = token ? tokenIsValid(token) : false;\r\n    if (false === result) {\r\n        removeItem('token');\r\n        return false;\r\n    }\r\n    if(true === result) {\r\n       const role = getRole(token);\r\n       if (role ===\"administrator\"){\r\n           return true;\r\n       }\r\n    }\r\n    return false;\r\n}\r\n//Vérifie le role user du token\r\nexport function isUserRole(){\r\n    const token = getItem('token');\r\n    const result = token ? tokenIsValid(token) : false;\r\n    if (false === result) {\r\n        removeItem('token');\r\n        return false;\r\n    }\r\n    if(true === result) {\r\n        const role = getRole(token);\r\n        if (role ===\"user\"){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n//Vérifie le role superAdmin du token\r\nexport function isSuperAdminRole(){\r\n    const token = getItem('token');\r\n    const result = token ? tokenIsValid(token) : false;\r\n    if (false === result) {\r\n        removeItem('token');\r\n        return false;\r\n    }\r\n    if(true === result) {\r\n        const role = getRole(token);\r\n        if (role ===\"super-admin\"){\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n//Récup du role du token décodé\r\nexport function getRole(token){\r\n    const tokenResult = decodeToken(token);\r\n    return tokenResult['user_role'];\r\n}\r\n\r\n//Récupération du token + mise en localStorage\r\nexport function login(credentials) {\r\n    let protocol = window.location.protocol;\r\n    let host = window.location.hostname;\r\n    let url = protocol + '//' + host;\r\n    return axios\r\n        .post(url + '/Projet_TER/API/Controllers/connexion.php', credentials)\r\n        .then(response => response.data.token)\r\n        .then(token => {\r\n            addItem('token', token);\r\n            return true;\r\n        });\r\n}\r\n//Supprime le token du localSTorage\r\nexport function logout() {\r\n    removeItem('token');\r\n}\r\n\r\n//Verifie validité du token (avec temps d'expiration)\r\nfunction tokenIsValid(token) {\r\n    const decoded = jwt_decode(token);\r\n    const exp = decoded['exp']\r\n    return exp * 1000 > new Date().getTime();\r\n}\r\n\r\n//Traduit le token pour récupérer les infos\r\nfunction decodeToken(token){\r\n    return jwt_decode(token);\r\n}"]},"metadata":{},"sourceType":"module"}