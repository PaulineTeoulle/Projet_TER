{"ast":null,"code":"import _regeneratorRuntime from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import Issues from'../components/quiz/issues';import Historic from'../components/quiz/historic';import Method from'../components/quiz/method';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Quiz=/*#__PURE__*/function(_React$Component){_inherits(Quiz,_React$Component);var _super=_createSuper(Quiz);function Quiz(props){var _this;_classCallCheck(this,Quiz);_this=_super.call(this,props);_this.changeData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(nextIssueId){var decision,allChoices,historic,editHistoric,method,restart,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:decision=_args.length>1&&_args[1]!==undefined?_args[1]:null;allChoices=_args.length>2&&_args[2]!==undefined?_args[2]:null;historic=_args.length>3&&_args[3]!==undefined?_args[3]:true;editHistoric=_args.length>4&&_args[4]!==undefined?_args[4]:false;// ID de la prochaine question\n_this.setState({checkedDecision:decision});//  Vérifie si la décision renvoie une méthode\nmethod=_this.checkMethod(decision);if(!method){_context.next=10;break;}_this.manageMethod(decision,method);_context.next=17;break;case 10:if(!(nextIssueId!==0)){_context.next=14;break;}if(allChoices){// si on est sur le critère de fin et qu'on continue, on reinitialise l'historique\nallChoices.forEach(function(element){var decision=_this.state.tree.decisions.find(function(el){return el.ID_Decision===element;});if(decision.ID_Critere_sortant===0){// on détecte le critère de fin quand une des décision a un critère sortant null\nrestart=true;}});if(restart){_this.addRetainedMethods();_this.setState({historic:[],step:0},function(){// quand on conitnu a la fin du questionnaire\n_this.manageStoreData(nextIssueId,decision,historic,editHistoric);});}else{// quand on répond au critère (comportement de base)\n_this.manageStoreData(nextIssueId,decision,historic,editHistoric);}}else{// quand on sort d'une méthode (pas de choix fait)\n_this.manageStoreData(nextIssueId,decision,historic,editHistoric);}_context.next=17;break;case 14:_context.next=16;return _this.addRetainedMethods();case 16:_this.props.history.push({pathname:'/summary',state:{retainedMethods:_this.state.retainedMethods}});case 17:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}();_this.manageStoreData=function(nextIssueId,decision,historic,editHistoric){// on va chercher la prochaine question et réponses\nvar issue=_this.state.tree.criteres.find(function(critere){return critere.ID_Critere===nextIssueId;});var decisions=_this.state.tree.decisions.filter(function(decision){return decision.ID_Critere_entrant===issue.ID_Critere;});var oldIssue=_this.state.currentIssue;_this.setState({currentIssue:issue,currentDecisions:decisions,step:_this.state.step+1},function(){// on met a jour l'historique\nif(historic){_this.manageHistoric(decision,oldIssue);}if(editHistoric){var historicElement={issue:_this.state.currentIssue,decision:null};_this.setState({historic:_this.state.historic.concat(historicElement)});}});};_this.manageMethod=function(decision,method){var newHistoric=_this.state.historic.slice();newHistoric[newHistoric.length-1].decision=decision;_this.setState({historic:newHistoric});var historicElement={method:method,checked:false};_this.setState({historic:_this.state.historic.concat(historicElement)});};_this.checkedMethod=function(method,checked){var index;_this.state.historic.forEach(function(element){if('method'in element){if(element.method.ID_Methode===method.ID_Methode){index=_this.state.historic.indexOf(element);}}});var historicElement={method:method,checked:checked};var newHistoric=_this.state.historic.slice();newHistoric[index]=historicElement;_this.setState({historic:newHistoric});};_this.checkMethod=function(decision){if(decision){var method=_this.state.tree.methodes.find(function(methode){return methode.ID_Decision===decision.ID_Decision;});if(method){_this.setState({currentMethod:method});return method;}}};_this.addRetainedMethods=function(){return new Promise(function(resolve,reject){var methods=[];_this.state.historic.forEach(function(element){if('method'in element){if(element.checked){if(_this.state.retainedMethods.length){_this.state.retainedMethods.forEach(function(retainedMethod){if(retainedMethod.method.ID_Methode!==element.method.ID_Methode){methods.push(element);}});}else{methods.push(element);}}}});_this.setState({retainedMethods:_this.state.retainedMethods.concat(methods)},function(){return resolve();});});};_this.backOut=function(ID,type){// si on retroune a une question\nif(type==='issue'){// si au moment ou on retourne on est sur une méthode\nif(_this.state.currentMethod){_this.setState({currentMethod:null},function(){_this.backIssue(ID);});}else{_this.backIssue(ID);}}else{// si on retourne a une méthode\n// let index =  this.state.historic.indexOf(this.state.historic.find(el => el.method));\nvar index;_this.state.historic.forEach(function(element){if('method'in element){if(element.method.ID_Methode===ID){index=_this.state.historic.indexOf(element);}}});var decisionBeforeMethod=_this.state.historic[index-1].decision;_this.state.historic.length=index;_this.setState({step:index});_this.changeData(decisionBeforeMethod.ID_Critere_sortant,decisionBeforeMethod,null,false);}};_this.backIssue=function(ID){var index;_this.changeData(ID,null,null,false);_this.state.historic.forEach(function(element){if('issue'in element){if(element.issue.ID_Critere===ID){index=_this.state.historic.indexOf(element);}}});// let index =  this.state.historic.indexOf(this.state.historic.find(el => el.issue.ID_Critere === ID));\n_this.state.historic.length=index+1;_this.state.historic[index].decision=null;_this.setState({step:index+1});};_this.manageHistoric=function(){var decision=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var oldIssue=arguments.length>1?arguments[1]:undefined;// si nous ne somme aps sur une méthode\n_this.state.historic.forEach(function(element){if('issue'in element){if(element.issue.ID_Critere===oldIssue.ID_Critere){element.decision=decision;}}});// on ajoute le nouveau critère sans décision dans l'historique\nvar historicElement={issue:_this.state.currentIssue,decision:null};_this.setState({historic:_this.state.historic.concat(historicElement)});};_this.resumeQuiz=function(){_this.setState({currentMethod:null},function(){_this.changeData(_this.state.checkedDecision.ID_Critere_sortant,null,null,false,true);});};_this.state={tree:null,checkedDecision:null,currentMethod:null,currentIssue:null,retainedMethods:[],currentDecisions:[],historic:[],step:0};// this.componentDidMount = this.componentDidMount.bind(this);\nreturn _this;}// met a jour le questionnaire\n// historic : met a jour l'historique normalement\n// editHistoric : met a jour artificiellement quand on est sur une méthode (arret du flux)\n_createClass(Quiz,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;if(!this.state.tree){//axios.get(url + '/reactTest/MATUI/API/Controllers/lireArbre.php')\naxios.get(url+'/Projet_TER/API/Controllers/lireArbre.php').then(function(response){_this2.setState({tree:response.data});_this2.changeData(response.data.entree[0].ID_Critere);}).catch(function(error){return console.log(error);});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Quiz\",children:[this.state.currentMethod?/*#__PURE__*/_jsx(Method,{method:this.state.currentMethod,checkedDecision:this.state.checkedDecision,changeData:this.changeData,resumeQuiz:this.resumeQuiz,checkedMethod:this.checkedMethod,historic:this.state}):/*#__PURE__*/_jsx(Issues,{issue:this.state.currentIssue,decisions:this.state.currentDecisions,changeData:this.changeData,step:this.state.step}),/*#__PURE__*/_jsx(Historic,{historic:this.state.historic,backOut:this.backOut}),this.state.retainedMethods.length?/*#__PURE__*/_jsx(\"div\",{children:this.state.retainedMethods.map(function(element,i){return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"p\",{children:element.method.Libelle})},i);})}):/*#__PURE__*/_jsx(\"p\",{children:\"No methods\"})]});}}]);return Quiz;}(React.Component);export default Quiz;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Quiz.js"],"names":["React","axios","Issues","Historic","Method","Quiz","props","changeData","nextIssueId","decision","allChoices","historic","editHistoric","setState","checkedDecision","method","checkMethod","manageMethod","forEach","element","state","tree","decisions","find","el","ID_Decision","ID_Critere_sortant","restart","addRetainedMethods","step","manageStoreData","history","push","pathname","retainedMethods","issue","criteres","critere","ID_Critere","filter","ID_Critere_entrant","oldIssue","currentIssue","currentDecisions","manageHistoric","historicElement","concat","newHistoric","slice","length","checked","checkedMethod","index","ID_Methode","indexOf","methodes","methode","currentMethod","Promise","resolve","reject","methods","retainedMethod","backOut","ID","type","backIssue","decisionBeforeMethod","resumeQuiz","protocol","window","location","host","hostname","url","get","then","response","data","entree","catch","error","console","log","map","i","Libelle","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Issues from '../components/quiz/issues';\r\nimport Historic from '../components/quiz/historic';\r\nimport Method from '../components/quiz/method';\r\n\r\n\r\nexport class Quiz extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tree: null,\r\n            checkedDecision: null,\r\n            currentMethod: null,\r\n            currentIssue: null,\r\n            retainedMethods: [],\r\n            currentDecisions: [],\r\n            historic: [],\r\n            step: 0        \r\n        };\r\n        // this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    // met a jour le questionnaire\r\n    // historic : met a jour l'historique normalement\r\n    // editHistoric : met a jour artificiellement quand on est sur une méthode (arret du flux)\r\n    changeData = async (nextIssueId, decision = null, allChoices = null, historic = true, editHistoric = false) => {\r\n        // ID de la prochaine question\r\n        this.setState({checkedDecision: decision});\r\n\r\n        //  Vérifie si la décision renvoie une méthode\r\n        let method = this.checkMethod(decision);\r\n\r\n        if(method){\r\n            this.manageMethod(decision, method);\r\n        } else {\r\n            // si ID prochaine question pas égal a 0 on récupère info\r\n            if(nextIssueId !== 0){\r\n                if(allChoices){\r\n                    // si on est sur le critère de fin et qu'on continue, on reinitialise l'historique\r\n                    let restart;\r\n                    allChoices.forEach(element => {\r\n                        let decision = this.state.tree.decisions.find(el => el.ID_Decision === element);\r\n                        if(decision.ID_Critere_sortant === 0){\r\n                            // on détecte le critère de fin quand une des décision a un critère sortant null\r\n                            restart = true;\r\n                        }\r\n                    });\r\n                    if(restart){\r\n                        this.addRetainedMethods();\r\n                        this.setState({\r\n                            historic: [],\r\n                            step: 0,\r\n                        }, () => {\r\n                            // quand on conitnu a la fin du questionnaire\r\n                            this.manageStoreData(nextIssueId, decision, historic, editHistoric);\r\n                        });\r\n                    } else {\r\n                        // quand on répond au critère (comportement de base)\r\n                        this.manageStoreData(nextIssueId, decision, historic, editHistoric);\r\n                    }\r\n                } else {\r\n                    // quand on sort d'une méthode (pas de choix fait)\r\n                    this.manageStoreData(nextIssueId, decision, historic, editHistoric);\r\n                }\r\n            }else {\r\n                // quand on sort du questionnaire\r\n                await this.addRetainedMethods();         \r\n                this.props.history.push({\r\n                    pathname: '/summary',\r\n                    state: { retainedMethods: this.state.retainedMethods }\r\n                })            \r\n            }\r\n        }\r\n    }\r\n\r\n    manageStoreData = (nextIssueId, decision, historic, editHistoric) => {\r\n        // on va chercher la prochaine question et réponses\r\n        let issue = this.state.tree.criteres.find(critere => critere.ID_Critere === nextIssueId);\r\n        let decisions =  this.state.tree.decisions.filter(decision => decision.ID_Critere_entrant === issue.ID_Critere);\r\n        let oldIssue = this.state.currentIssue;\r\n        this.setState({\r\n            currentIssue: issue,\r\n            currentDecisions: decisions,\r\n            step: this.state.step + 1\r\n        }, () => {\r\n            // on met a jour l'historique\r\n            if(historic){\r\n                this.manageHistoric(decision, oldIssue)\r\n            }\r\n            if(editHistoric){\r\n                let historicElement = {\r\n                    issue: this.state.currentIssue,\r\n                    decision: null\r\n                }\r\n                this.setState({historic: this.state.historic.concat(historicElement)});  \r\n            }\r\n        });    \r\n    }\r\n\r\n    // on ajoute la méthode dans l'historique\r\n    manageMethod = (decision, method) => {\r\n        let newHistoric = this.state.historic.slice();\r\n        newHistoric[newHistoric.length - 1].decision = decision;\r\n        this.setState({historic: newHistoric}); \r\n\r\n        let historicElement = {\r\n            method: method,\r\n            checked: false\r\n        }\r\n        this.setState({historic: this.state.historic.concat(historicElement)}); \r\n    }\r\n\r\n    checkedMethod = (method, checked) => {\r\n        let index;\r\n        this.state.historic.forEach(element => {\r\n            if('method' in element){\r\n                if(element.method.ID_Methode === method.ID_Methode){\r\n                    index = this.state.historic.indexOf(element);\r\n                }\r\n            }\r\n        });\r\n        let historicElement = {\r\n            method: method,\r\n            checked: checked\r\n        }\r\n        let newHistoric = this.state.historic.slice();\r\n        newHistoric[index] = historicElement;\r\n        this.setState({historic: newHistoric}); \r\n    }\r\n\r\n    // on regarde si une méthode est associé a la décision prise\r\n    checkMethod = (decision) => {\r\n        if(decision){\r\n            let method = this.state.tree.methodes.find(methode => methode.ID_Decision === decision.ID_Decision);\r\n            if(method){\r\n                this.setState({currentMethod: method});\r\n                return method;\r\n            }\r\n        }\r\n    }\r\n\r\n    // ajoute les méthodes retenu lors du précédent passage\r\n    // se produit lorsque on restart le questionnaire\r\n    addRetainedMethods = () => {\r\n        return new Promise((resolve,reject)=>{\r\n            let methods = [];\r\n            this.state.historic.forEach(element => {\r\n                if('method' in element){\r\n                    if(element.checked){\r\n                        if(this.state.retainedMethods.length){\r\n                            this.state.retainedMethods.forEach(retainedMethod => {\r\n                                if(retainedMethod.method.ID_Methode !== element.method.ID_Methode){\r\n                                    methods.push(element);\r\n                                }\r\n                            })\r\n                        } else {\r\n                            methods.push(element);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        this.setState({retainedMethods: this.state.retainedMethods.concat(methods)}, () => resolve()); \r\n        });\r\n    }\r\n\r\n    // on retourne dans l'historique \r\n    backOut = (ID, type) => {\r\n        // si on retroune a une question\r\n        if(type === 'issue'){\r\n            // si au moment ou on retourne on est sur une méthode\r\n            if(this.state.currentMethod){\r\n                this.setState({currentMethod: null}, () => {\r\n                    this.backIssue(ID);\r\n                })\r\n            } else {\r\n                this.backIssue(ID);\r\n            }\r\n        } else {\r\n            // si on retourne a une méthode\r\n            // let index =  this.state.historic.indexOf(this.state.historic.find(el => el.method));\r\n            let index;\r\n            this.state.historic.forEach(element => {\r\n                if('method' in element){\r\n                    if(element.method.ID_Methode === ID){\r\n                        index = this.state.historic.indexOf(element);\r\n                    }\r\n                }\r\n            });\r\n            let decisionBeforeMethod = this.state.historic[index - 1].decision;   \r\n            this.state.historic.length = index;\r\n            this.setState({step: index});\r\n            this.changeData(decisionBeforeMethod.ID_Critere_sortant, decisionBeforeMethod, null, false);\r\n        }\r\n    }\r\n\r\n    // on rebind les bonne data en fonction de l'ID du critère sélectionné dans l'historique\r\n    backIssue = (ID) => {\r\n        let index;\r\n        this.changeData(ID, null, null, false);\r\n        this.state.historic.forEach(element => {\r\n            if('issue' in element){\r\n                if(element.issue.ID_Critere === ID){\r\n                    index = this.state.historic.indexOf(element);\r\n                }\r\n            }\r\n        });\r\n        // let index =  this.state.historic.indexOf(this.state.historic.find(el => el.issue.ID_Critere === ID));\r\n        this.state.historic.length = index + 1;\r\n        this.state.historic[index].decision = null;\r\n        this.setState({step: index + 1});\r\n    }\r\n\r\n    // on gère l'historique\r\n    manageHistoric = (decision = null, oldIssue) => {\r\n        // si nous ne somme aps sur une méthode\r\n        this.state.historic.forEach(element => {\r\n            if('issue' in element){\r\n                if(element.issue.ID_Critere === oldIssue.ID_Critere){\r\n                    element.decision = decision;\r\n                }\r\n            }\r\n        });\r\n\r\n        // on ajoute le nouveau critère sans décision dans l'historique\r\n        let historicElement = {\r\n            issue: this.state.currentIssue,\r\n            decision: null\r\n        }\r\n        this.setState({historic: this.state.historic.concat(historicElement)}); \r\n    }\r\n\r\n    // on reprend le questionnaire la ou on en était depuis une méthode\r\n    resumeQuiz = () => {\r\n        this.setState({currentMethod: null}, () => {\r\n            this.changeData(this.state.checkedDecision.ID_Critere_sortant, null, null, false, true);\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n\r\n        if(!this.state.tree){\r\n            //axios.get(url + '/reactTest/MATUI/API/Controllers/lireArbre.php')\r\n            axios.get(url + '/Projet_TER/API/Controllers/lireArbre.php')\r\n            .then(response => {\r\n                this.setState({tree: response.data});\r\n                this.changeData(response.data.entree[0].ID_Critere);\r\n            })\r\n            .catch(error => console.log(error))\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Quiz\">\r\n                {this.state.currentMethod\r\n                    ? <Method method={this.state.currentMethod}\r\n                        checkedDecision={this.state.checkedDecision}\r\n                        changeData={this.changeData}  \r\n                        resumeQuiz={this.resumeQuiz} \r\n                        checkedMethod={this.checkedMethod}\r\n                        historic={this.state}\r\n                    />\r\n                    :<Issues issue={this.state.currentIssue} \r\n                        decisions={this.state.currentDecisions} \r\n                        changeData={this.changeData}\r\n                        step={this.state.step}\r\n                    />\r\n                }\r\n                <Historic historic={this.state.historic} \r\n                    backOut={this.backOut}\r\n                />\r\n\r\n                {this.state.retainedMethods.length ?\r\n                    <div>                \r\n                        {this.state.retainedMethods.map((element, i) => {   \r\n                            return(<div key={i}>\r\n                                <p>{element.method.Libelle}</p>\r\n                            </div>)\r\n                        })}\r\n                    </div>\r\n                    : <p>No methods</p>\r\n                    }\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}