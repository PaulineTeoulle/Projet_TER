{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\components\\\\modal\\\\tree\\\\ModalEditMethod.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalEditMethod(props) {\n  _s();\n\n  const [method, setMethod] = useState(null);\n  const [resources, setResources] = useState(null);\n  const [allResources, setAllResources] = useState(null);\n  const [title, setTitle] = useState(null);\n\n  function customFunction() {\n    let data = {\n      label: $('#label').val(),\n      description: $('#description').val(),\n      productedData: $('#productedData').val(),\n      workforce: $('#workforce').val(),\n      method: $('#method').val(),\n      analysis: $('#analysis').val(),\n      exemple: $('#exemple').val()\n    };\n    props.mainAction(data, resources);\n    closeModal();\n  }\n\n  function closeModal() {\n    $('.ModalEditMethod').css(\"display\", \"none\");\n    props.close();\n    setMethod(null);\n  }\n\n  function openModal() {\n    $('.ModalEditMethod').css(\"display\", \"block\");\n  }\n\n  function addFile() {\n    let selectedFileId = $('select').val();\n\n    if (selectedFileId) {\n      let selectedFile = props.initialTree.ressources.find(item => item.ID_Ressource === selectedFileId.toString());\n      setResources(resources.concat(selectedFile));\n    }\n  }\n\n  function openFile(name) {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n    window.open(url + '/Projet_TER/MATUI/src/public/documentsRessources/' + name);\n  }\n\n  function initResources(resources, methodesRessources, method) {\n    // ressources lié a notre methode\n    let methodeRessources = methodesRessources.filter(item => item.ID_Methode === method.id.slice(1)); // prépare le tableau des ressources\n\n    let ressources = [];\n    methodeRessources.forEach(element => {\n      // push les ressources de la méthode a partir du tableau de liaison\n      let ressource = resources.find(item => item.ID_Ressource === element.ID_Ressource);\n      ressources.push(ressource);\n    });\n    setResources(ressources);\n  }\n\n  useEffect(() => {\n    if (props.open) {\n      openModal();\n      setMethod(props.selectedMethod);\n      setTitle(props.title);\n      setAllResources(props.initialTree.ressources);\n      initResources(props.initialTree.ressources, props.initialTree.methodesRessources, props.selectedMethod);\n    }\n  }, [props.open]);\n  useEffect(() => {\n    if (method && props.resources) {\n      setResources(props.resources[method.id.slice(1)]);\n    }\n  }, [method]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Modal ModalEditMethod\",\n    children: title && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [method && /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"label\",\n              name: \"label\",\n              placeholder: \"label\",\n              defaultValue: method.data.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"description\",\n              name: \"description\",\n              placeholder: \"description\",\n              defaultValue: method.data.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"workforce\",\n              name: \"workforce\",\n              placeholder: \"workforce\",\n              defaultValue: method.data.workforce\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"productedData\",\n              name: \"productedData\",\n              placeholder: \"productedData\",\n              defaultValue: method.data.productedData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"method\",\n              name: \"method\",\n              placeholder: \"method\",\n              defaultValue: method.data.method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"analysis\",\n              name: \"analysis\",\n              placeholder: \"analysis\",\n              defaultValue: method.data.analysis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"exemple\",\n              name: \"exemple\",\n              placeholder: \"exemple\",\n              defaultValue: method.data.exemple\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ressources\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"selector\",\n              children: [allResources && /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"pets\",\n                id: \"pet-select\",\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"\",\n                  children: \"Choose method\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 41\n                }, this), allResources.map((element, i) => {\n                  if (!resources.find(item => item.ID_Ressource === element.ID_Ressource)) {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: element.ID_Ressource,\n                      children: element.Nom\n                    }, i, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 108,\n                      columnNumber: 53\n                    }, this);\n                  }\n                })]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: addFile,\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  className: \"icon\",\n                  icon: faPlus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), resources && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: Object.keys(resources).map(function (keyName, keyIndex) {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"item\",\n                  onClick: () => openFile(resources[keyName].Nom),\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: resources[keyName].Nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this)\n                }, keyName, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button filled\",\n            onClick: customFunction,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button outlined\",\n            onClick: closeModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalEditMethod, \"nOo8z6fWv318j+6tUcmbibxW0zE=\");\n\n_c = ModalEditMethod;\nexport default ModalEditMethod;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditMethod\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/components/modal/tree/ModalEditMethod.js"],"names":["React","useEffect","useState","$","axios","FontAwesomeIcon","faPlus","ModalEditMethod","props","method","setMethod","resources","setResources","allResources","setAllResources","title","setTitle","customFunction","data","label","val","description","productedData","workforce","analysis","exemple","mainAction","closeModal","css","close","openModal","addFile","selectedFileId","selectedFile","initialTree","ressources","find","item","ID_Ressource","toString","concat","openFile","name","protocol","window","location","host","hostname","url","open","initResources","methodesRessources","methodeRessources","filter","ID_Methode","id","slice","forEach","element","ressource","push","selectedMethod","map","i","Nom","Object","keys","keyName","keyIndex"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction ModalEditMethod(props) {\r\n    const [method, setMethod] = useState(null);\r\n    const [resources, setResources] = useState(null);\r\n    const [allResources, setAllResources] = useState(null);\r\n    const [title, setTitle] = useState(null);\r\n\r\n    function customFunction(){\r\n        let data = {\r\n            label: $('#label').val(),\r\n            description: $('#description').val(),\r\n            productedData: $('#productedData').val(),\r\n            workforce: $('#workforce').val(),\r\n            method: $('#method').val(),\r\n            analysis: $('#analysis').val(),\r\n            exemple: $('#exemple').val()\r\n        }\r\n        props.mainAction(data, resources)\r\n        closeModal();\r\n    }\r\n\r\n    function closeModal() {\r\n        $('.ModalEditMethod').css(\"display\", \"none\");\r\n        props.close();\r\n        setMethod(null)\r\n    }\r\n\r\n    function openModal() {\r\n        $('.ModalEditMethod').css(\"display\", \"block\");\r\n    }\r\n\r\n    function addFile(){\r\n        let selectedFileId = $('select').val();\r\n        if(selectedFileId){\r\n            let selectedFile = props.initialTree.ressources.find(item => item.ID_Ressource === selectedFileId.toString());\r\n            setResources(resources.concat(selectedFile));\r\n        }\r\n    }\r\n\r\n    function openFile(name){\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        window.open(url + '/Projet_TER/MATUI/src/public/documentsRessources/' + name);\r\n    }\r\n\r\n    function initResources(resources, methodesRessources, method){\r\n        // ressources lié a notre methode\r\n        let methodeRessources = methodesRessources.filter(item => item.ID_Methode === method.id.slice(1));\r\n        // prépare le tableau des ressources\r\n        let ressources = []\r\n        methodeRessources.forEach(element => {\r\n            // push les ressources de la méthode a partir du tableau de liaison\r\n            let ressource = resources.find(item => item.ID_Ressource === element.ID_Ressource);\r\n            ressources.push(ressource)\r\n        })\r\n        setResources(ressources);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            openModal();\r\n            setMethod(props.selectedMethod)\r\n            setTitle(props.title)\r\n            setAllResources(props.initialTree.ressources);\r\n            initResources(props.initialTree.ressources, props.initialTree.methodesRessources, props.selectedMethod)\r\n        }\r\n    }, [props.open]);\r\n\r\n    useEffect(() => {\r\n        if (method && props.resources) {\r\n            setResources(props.resources[method.id.slice(1)])\r\n        }\r\n    }, [method]);\r\n\r\n    return (\r\n        <div className=\"Modal ModalEditMethod\">\r\n            {title &&\r\n            <div>\r\n                <h3>{title}</h3>\r\n                <div>\r\n                    <div className=\"content\">\r\n                        {method &&\r\n                            <form>\r\n                                <input type=\"text\" id=\"label\" name=\"label\" placeholder=\"label\" defaultValue={method.data.label}/>\r\n                                <input type=\"text\" id=\"description\" name=\"description\" placeholder=\"description\" defaultValue={method.data.description}/>\r\n                                <input type=\"text\" id=\"workforce\" name=\"workforce\" placeholder=\"workforce\" defaultValue={method.data.workforce}/>\r\n                                <input type=\"text\" id=\"productedData\" name=\"productedData\" placeholder=\"productedData\" defaultValue={method.data.productedData}/>\r\n                                <input type=\"text\" id=\"method\" name=\"method\" placeholder=\"method\" defaultValue={method.data.method}/>\r\n                                <input type=\"text\" id=\"analysis\" name=\"analysis\" placeholder=\"analysis\" defaultValue={method.data.analysis}/>\r\n                                <input type=\"text\" id=\"exemple\" name=\"exemple\" placeholder=\"exemple\" defaultValue={method.data.exemple}/>     \r\n                            </form>\r\n                        }\r\n                        <div className=\"ressources\">\r\n                            <div className=\"selector\">\r\n                                {allResources &&\r\n                                    <select name=\"pets\" id=\"pet-select\">\r\n                                        <option value=\"\">Choose method</option>\r\n                                        {allResources.map((element, i) => {   \r\n                                            if(!resources.find(item => item.ID_Ressource === element.ID_Ressource)){\r\n                                                return (\r\n                                                    <option key={i} value={element.ID_Ressource}>{element.Nom}</option>\r\n                                                ) \r\n                                            }\r\n                                        })}    \r\n                                    </select>\r\n                                }\r\n                                <button onClick={addFile}><FontAwesomeIcon className=\"icon\" icon={faPlus} />\r\n</button>\r\n                            </div>\r\n                            {resources &&\r\n                                <div>\r\n                                {Object.keys(resources).map(function(keyName, keyIndex) {\r\n                                    return (<div className=\"item\" key={keyName} onClick={() => openFile(resources[keyName].Nom)}>\r\n                                        <p>{resources[keyName].Nom}</p>\r\n                                        </div>\r\n                                    ) \r\n                                })}    \r\n                                </div>\r\n                            }  \r\n                            {/* <form onSubmit={onSubmit}>\r\n                                <h1>Upload File</h1>\r\n                                <input type=\"file\" onChange={onChange}/>\r\n                                <button type=\"submit\">Upload File</button>\r\n                            </form>   */}\r\n                        </div>      \r\n                    </div>   \r\n                    <div className=\"action\">\r\n                        <button className=\"button filled\" onClick={customFunction}>Save</button>\r\n                        <button className=\"button outlined\" onClick={closeModal}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalEditMethod;\r\n"]},"metadata":{},"sourceType":"module"}