{"ast":null,"code":"import _objectSpread from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from'react';import $,{get}from'jquery';import axios from'axios';import ReactFlow,{addEdge,ReactFlowProvider,removeElements}from'react-flow-renderer';import Loader from'../components/Loader';import Toolbar from'../components/Toolbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Tree(){var defaultElements=[{id:'1',type:'input',data:{label:'Start Node'},position:{x:250,y:25}},{id:'2',type:'default',data:{label:'Node'},position:{x:100,y:125}},{id:'3',type:'output',data:{label:'End Node'},position:{x:250,y:250}},{id:'e1-2',source:'1',target:'2',type:'smoothstep',arrowHeadType:'arrowclosed',label:'edge label'},{id:'e2-3',source:'2',target:'3',type:'smoothstep',arrowHeadType:'arrowclosed',label:'edge label'}];var colors=['black','marron','blue','red','purple','fushia','green','lime','yellow','navy','aqua','aquamarine','chocolate','coral','crimson','darkcyan','darkgreen','darkorange','darkseagreen','deeppink','gold','indgo','lightcoral'];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),initialTree=_useState2[0],setinitialTree=_useState2[1];var _useState3=useState(\"0\"),_useState4=_slicedToArray(_useState3,2),nextId=_useState4[0],setNextId=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),editedElement=_useState6[0],setEditedElement=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),elements=_useState8[0],setElements=_useState8[1];var reactFlowWrapper=useRef(null);var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),reactFlowInstance=_useState10[0],setReactFlowInstance=_useState10[1];var onElementsRemove=function onElementsRemove(elementsToRemove){return setElements(function(els){return removeElements(elementsToRemove,els);});};var onConnect=function onConnect(params){return setElements(function(els){return addEdge(_objectSpread(_objectSpread({},params),{},{arrowHeadType:'arrowclosed',label:'edge label',type:'smoothstep'}),els);});};var onLoad=function onLoad(_reactFlowInstance){return setReactFlowInstance(_reactFlowInstance);};// HOOKS REACT-FLOW\nvar onDragOver=function onDragOver(event){event.preventDefault();event.dataTransfer.dropEffect='move';};var onDrop=function onDrop(event){event.preventDefault();//check if input/output already exists\nvar type=event.dataTransfer.getData('application/reactflow');if(type!=null&&type==\"input\"||type==\"output\"){if(checkExist(type)){return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \"+type);}}var reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();var position=reactFlowInstance.project({x:event.clientX-reactFlowBounds.left,y:event.clientY-reactFlowBounds.top});createNode(type,position);setNextId((parseInt(nextId)+1).toString());};var onElementClick=function onElementClick(event,element){// event.preventDefault();\nvar el=$(\"div\").find(\"[data-id='\".concat(element.id,\"']\"));if(el.text()===\"Start Node\"||el.text()===\"End Node\"){console.log(\"Impossible de modifier le noeud (début ou fin)\");}else{openEdition(element);}};var onPaneClick=function onPaneClick(event){event.preventDefault();closeEdition();};// FUNCTIONS\n// set next ID\n(function setId(){$(\".react-flow__node\").each(function(index){var currentId=$(this).data(\"id\");if(currentId>=nextId){setNextId((currentId+1).toString());}});})();function getId(){return nextId;}// add input in selected node\nfunction openEdition(element){if(!editedElement){var el=$(\"div\").find(\"[data-id='\".concat(element.id,\"']\"));var text=el.text();el.css(\"font-size\",0);el.append(\"<input type=\\\"text\\\" id=\\\"label\\\" name=\\\"label\\\" value=\\\"\".concat(text,\"\\\"/>\"));setEditedElement(el);}}// remove input in selected node and save label\nfunction closeEdition(){if(editedElement){var newValue=editedElement.children(\"input\").val();elements.forEach(function(element){if(element.id==editedElement.data(\"id\")){element.data.label=newValue;}});editedElement.children(\"input\").remove();editedElement.css(\"font-size\",\"12px\");setEditedElement(null);}}function createNode(id,type,position,label){var newNode;if(label){newNode={id:id,type:type,position:position,data:{label:label}};}else{newNode={id:getId(),type:type,position:position,data:{label:\"\".concat(type,\" node\")}};}setElements(function(es){return es.concat(newNode);});setNextId((parseInt(nextId)+1).toString());}function createEdge(id_source,id_target,label,color){var newEdge={id:\"e\".concat(id_source,\"-\").concat(id_target),source:id_source,target:id_target,type:'smoothstep',arrowHeadType:'arrowclosed',label:label,style:{stroke:color}};setElements(function(es){return es.concat(newEdge);});}// check if a node type already exists\nfunction checkExist(type){if(elements){console.log(\"yes\");for(var i=0;i<elements.length;i++){if(elements[i].type==type){return true;}}return false;}else{return true;}}// DEBUG\nfunction printNodes(){console.log(initialTree);}// INIT TREE\nfunction initInput(){createNode('0','input',{x:0,y:0});var firstNode=initialTree.criteres.find(function(el){return el.ID_Critere===initialTree.entree[0].ID_Critere;});createNode(firstNode.ID_Critere,'default',{x:0,y:100},firstNode.Libelle);createEdge('0',firstNode.ID_Critere,null);initNodes(initialTree.entree[0].ID_Critere);}function initNodes(start){// pour chaque critère on créer le noeud\ninitialTree.criteres.forEach(function(node){var color=colors[0];colors.splice(0,1);if(node.ID_Critere!==start){createNode(node.ID_Critere,'default',{x:node.x,y:node.y},node.Libelle);}// on récupère les décisions attaché au critère et on regarde si un méthode est attaché\nvar decisions=getDecisions(node.ID_Critere);decisions.forEach(function(decision){var method=getMethod(decision);if(method){createNode(\"M\"+method.ID_Methode,'default',{x:method.x,y:method.y},method.Libelle);createEdge(node.ID_Critere,\"M\"+method.ID_Methode,decision.Libelle,color);createEdge(\"M\"+method.ID_Methode,decision.ID_Critere_sortant,null,color);}else{if(decision.ID_Critere_sortant){createEdge(decision.ID_Critere_entrant,decision.ID_Critere_sortant,decision.Libelle,color);}}});});}function getDecisions(nodeId){var decisions=initialTree.decisions.filter(function(decision){return decision.ID_Critere_entrant===nodeId;});return decisions;}function getMethod(decision){var method=initialTree.methodes.find(function(method){return method.ID_Decision===decision.ID_Decision;});return method;}useEffect(function(){if(!initialTree){var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;axios.get(url+'/reactTest/MATUI/API/Controllers/lireArbre.php').then(function(response){setinitialTree(response.data);}).catch(function(error){return console.log(error);});}},[]);useEffect(function(){if(initialTree){console.log(initialTree);initInput();}},[initialTree]);return/*#__PURE__*/_jsx(\"div\",{className:\"Tree\",children:elements?/*#__PURE__*/_jsx(ReactFlowProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"reactflow-wrapper\",ref:reactFlowWrapper,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tree\"}),/*#__PURE__*/_jsx(\"div\",{style:{height:600,backgroundColor:'lightgrey',margin:'100px'},children:/*#__PURE__*/_jsx(ReactFlow,{elements:elements,onElementsRemove:onElementsRemove,onConnect:onConnect,deleteKeyCode:46,onLoad:onLoad,onDrop:onDrop,onDragOver:onDragOver,onElementClick:onElementClick,onPaneClick:onPaneClick})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return printNodes();},children:\"print nodes\"}),/*#__PURE__*/_jsx(Toolbar,{})]})}):/*#__PURE__*/_jsx(Loader,{})});}export default Tree;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Tree.js"],"names":["React","useRef","useState","useEffect","$","get","axios","ReactFlow","addEdge","ReactFlowProvider","removeElements","Loader","Toolbar","Tree","defaultElements","id","type","data","label","position","x","y","source","target","arrowHeadType","colors","initialTree","setinitialTree","nextId","setNextId","editedElement","setEditedElement","elements","setElements","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onElementsRemove","elementsToRemove","els","onConnect","params","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","getData","checkExist","alert","reactFlowBounds","current","getBoundingClientRect","project","clientX","left","clientY","top","createNode","parseInt","toString","onElementClick","element","el","find","text","console","log","openEdition","onPaneClick","closeEdition","setId","each","index","currentId","getId","css","append","newValue","children","val","forEach","remove","newNode","es","concat","createEdge","id_source","id_target","color","newEdge","style","stroke","i","length","printNodes","initInput","firstNode","criteres","ID_Critere","entree","Libelle","initNodes","start","node","splice","decisions","getDecisions","decision","method","getMethod","ID_Methode","ID_Critere_sortant","ID_Critere_entrant","nodeId","filter","methodes","ID_Decision","protocol","window","location","host","hostname","url","then","response","catch","error","height","backgroundColor","margin"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\r\nimport $, { get } from 'jquery';\r\nimport axios from 'axios';\r\nimport ReactFlow, {addEdge, ReactFlowProvider, removeElements} from 'react-flow-renderer';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Toolbar from '../components/Toolbar';\r\n\r\nfunction Tree() {\r\n\r\n    const defaultElements = [\r\n        {\r\n            id: '1',\r\n            type: 'input',\r\n            data: {label: 'Start Node'},\r\n            position: {x: 250, y: 25},\r\n        },\r\n        {\r\n            id: '2',\r\n            type: 'default',\r\n            data: {label: 'Node'},\r\n            position: {x: 100, y: 125},\r\n        },\r\n        {\r\n            id: '3',\r\n            type: 'output',\r\n            data: {label: 'End Node'},\r\n            position: {x: 250, y: 250},\r\n        },\r\n        {\r\n            id: 'e1-2',\r\n            source: '1',\r\n            target: '2',\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: 'edge label',\r\n        },\r\n        {\r\n            id: 'e2-3',\r\n            source: '2',\r\n            target: '3',\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: 'edge label',\r\n        },\r\n    ];\r\n\r\n    const colors = ['black', 'marron', 'blue', 'red', 'purple', 'fushia', 'green', 'lime', 'yellow',\r\n'navy', 'aqua', 'aquamarine', 'chocolate', 'coral', 'crimson', 'darkcyan', 'darkgreen', 'darkorange', 'darkseagreen',\r\n'deeppink', 'gold', 'indgo', 'lightcoral'];\r\n\r\n    const [initialTree, setinitialTree] = useState(null);\r\n    const [nextId, setNextId] = useState(\"0\");\r\n    const [editedElement, setEditedElement] = useState(null);\r\n    const [elements, setElements] = useState([]);\r\n    const reactFlowWrapper = useRef(null);\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\r\n    const onConnect = (params) => setElements((els) => addEdge({\r\n        ...params,\r\n        arrowHeadType: 'arrowclosed', label: 'edge label', type: 'smoothstep'\r\n    }, els));\r\n    const onLoad = (_reactFlowInstance) => setReactFlowInstance(_reactFlowInstance);\r\n\r\n\r\n    // HOOKS REACT-FLOW\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = (event) => {\r\n        event.preventDefault();\r\n\r\n        //check if input/output already exists\r\n        const type = event.dataTransfer.getData('application/reactflow');\r\n        if (type!= null && type == \"input\" || type == \"output\") {\r\n            if (checkExist(type)) {\r\n                return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \" + type)\r\n            }\r\n        }\r\n\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n        createNode(type, position);\r\n        setNextId((parseInt(nextId) + 1).toString());\r\n    };\r\n\r\n    const onElementClick = (event, element) => {\r\n        // event.preventDefault();\r\n        let el = $(\"div\").find(`[data-id='${element.id}']`)\r\n        if (el.text() === \"Start Node\" || el.text() === \"End Node\") {\r\n            console.log(\"Impossible de modifier le noeud (début ou fin)\")\r\n        } else {\r\n            openEdition(element);\r\n        }\r\n    }\r\n\r\n    const onPaneClick = (event) => {\r\n        event.preventDefault();\r\n        closeEdition();\r\n    }\r\n\r\n\r\n    // FUNCTIONS\r\n\r\n    // set next ID\r\n    (function setId() {\r\n        $(\".react-flow__node\").each(function (index) {\r\n            let currentId = $(this).data(\"id\");\r\n            if (currentId >= nextId) {\r\n                setNextId((currentId + 1).toString());\r\n            }\r\n        });\r\n    })();\r\n\r\n    function getId() {\r\n        return nextId;\r\n    }\r\n\r\n    // add input in selected node\r\n    function openEdition(element) {\r\n        if (!editedElement) {\r\n            let el = $(\"div\").find(`[data-id='${element.id}']`)\r\n            let text = el.text()\r\n            el.css(\"font-size\", 0);\r\n            el.append(`<input type=\"text\" id=\"label\" name=\"label\" value=\"${text}\"/>`);\r\n            setEditedElement(el)\r\n        }\r\n    }\r\n\r\n    // remove input in selected node and save label\r\n    function closeEdition() {\r\n        if (editedElement) {\r\n            let newValue = editedElement.children(\"input\").val();\r\n            elements.forEach(element => {\r\n                if (element.id == editedElement.data(\"id\")) {\r\n                    element.data.label = newValue;\r\n                }\r\n            });\r\n            editedElement.children(\"input\").remove();\r\n            editedElement.css(\"font-size\", \"12px\");\r\n            setEditedElement(null)\r\n        }\r\n    }\r\n\r\n    function createNode(id, type, position, label) {\r\n        let newNode;\r\n        if(label){\r\n            newNode = {\r\n                id: id,\r\n                type,\r\n                position,\r\n                data: {label: label},\r\n            };\r\n        } else {\r\n            newNode = {\r\n                id: getId(),\r\n                type,\r\n                position,\r\n                data: {label: `${type} node`},\r\n            };\r\n        }\r\n        setElements((es) => es.concat(newNode));\r\n        setNextId((parseInt(nextId) + 1).toString());\r\n    }\r\n\r\n    function createEdge(id_source, id_target, label, color){\r\n        let newEdge = {\r\n            id: `e${id_source}-${id_target}`,\r\n            source: id_source,\r\n            target: id_target,\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: label,\r\n            style: { stroke: color },\r\n        }\r\n        setElements((es) => es.concat(newEdge));\r\n    }\r\n\r\n    // check if a node type already exists\r\n    function checkExist(type) {\r\n        if(elements){\r\n            console.log(\"yes\")\r\n            for (let i = 0; i < elements.length; i++) {\r\n                if (elements[i].type == type) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // DEBUG\r\n\r\n    function printNodes() {\r\n        console.log(initialTree);\r\n    }\r\n\r\n    // INIT TREE\r\n\r\n    function initInput(){\r\n        createNode('0', 'input', {x: 0, y: 0});\r\n        let firstNode = initialTree.criteres.find(el => el.ID_Critere === initialTree.entree[0].ID_Critere);\r\n        createNode(firstNode.ID_Critere,'default', {x: 0, y: 100}, firstNode.Libelle);\r\n        createEdge('0', firstNode.ID_Critere, null);\r\n        initNodes(initialTree.entree[0].ID_Critere)\r\n    }\r\n\r\n    function initNodes(start){\r\n        // pour chaque critère on créer le noeud\r\n        initialTree.criteres.forEach(node => {\r\n            let color = colors[0]\r\n            colors.splice(0, 1);\r\n            if(node.ID_Critere !== start){\r\n                createNode(node.ID_Critere, 'default',  {x: node.x, y: node.y}, node.Libelle)\r\n            }\r\n                // on récupère les décisions attaché au critère et on regarde si un méthode est attaché\r\n                let decisions = getDecisions(node.ID_Critere);\r\n                decisions.forEach(decision => {\r\n                    let method = getMethod(decision);\r\n                    if(method){\r\n                        createNode(\"M\" + method.ID_Methode, 'default',  {x: method.x, y: method.y}, method.Libelle);\r\n                        createEdge(node.ID_Critere, \"M\" + method.ID_Methode, decision.Libelle, color);\r\n                        createEdge(\"M\" + method.ID_Methode, decision.ID_Critere_sortant, null, color);\r\n                    } else {\r\n                        if(decision.ID_Critere_sortant){\r\n                            createEdge(decision.ID_Critere_entrant, decision.ID_Critere_sortant, decision.Libelle, color);\r\n                        }\r\n                    }\r\n                })\r\n            \r\n        });\r\n    }\r\n\r\n    function getDecisions(nodeId){\r\n        let decisions =  initialTree.decisions.filter(decision => decision.ID_Critere_entrant === nodeId);\r\n        return decisions;\r\n    }\r\n\r\n    function getMethod(decision){\r\n        let method =  initialTree.methodes.find(method => method.ID_Decision === decision.ID_Decision);\r\n        return method;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(!initialTree){\r\n            let protocol = window.location.protocol;\r\n            let host = window.location.hostname;\r\n            let url = protocol + '//' + host;\r\n                axios.get(url + '/reactTest/MATUI/API/Controllers/lireArbre.php')\r\n                .then(response => {\r\n                    setinitialTree(response.data)\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    },[]);\r\n\r\n    useEffect(() => {\r\n        if(initialTree){\r\n            console.log(initialTree)\r\n            initInput();\r\n        }\r\n    }, [initialTree]);\r\n\r\n    return (\r\n        <div className=\"Tree\">\r\n            {elements ?\r\n                <ReactFlowProvider>\r\n                    <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                        <h1>Tree</h1>\r\n                        <div style={{height: 600, backgroundColor: 'lightgrey', margin: '100px'}}>\r\n                            <ReactFlow \r\n                                elements={elements}\r\n                                onElementsRemove={onElementsRemove}\r\n                                onConnect={onConnect}\r\n                                deleteKeyCode={46}\r\n                                onLoad={onLoad}\r\n                                onDrop={onDrop}\r\n                                onDragOver={onDragOver}\r\n                                onElementClick={onElementClick}\r\n                                onPaneClick={onPaneClick}/>\r\n                        </div>\r\n                        <button onClick={() => printNodes()}>print nodes</button>\r\n                        <Toolbar/>\r\n                    </div>\r\n                </ReactFlowProvider>\r\n            : <Loader/> \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tree;\r\n"]},"metadata":{},"sourceType":"module"}