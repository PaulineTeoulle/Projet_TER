{"ast":null,"code":"import _objectSpread from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState}from'react';import $ from'jquery';import ReactFlow,{addEdge,ReactFlowProvider,removeElements}from'react-flow-renderer';import Toolbar from'../components/Toolbar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Tree(){var initialElements=[{id:'1',type:'input',data:{label:'Start Node'},position:{x:250,y:25}},{id:'2',type:'default',data:{label:'Node'},position:{x:100,y:125}},{id:'3',type:'output',data:{label:'End Node'},position:{x:250,y:250}},{id:'e1-2',source:'1',target:'2',type:'smoothstep',arrowHeadType:'arrowclosed',label:'edge label'},{id:'e2-3',source:'2',target:'3',type:'smoothstep',arrowHeadType:'arrowclosed',label:'edge label'}];var _useState=useState(\"0\"),_useState2=_slicedToArray(_useState,2),nextId=_useState2[0],setNextId=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),editedElement=_useState4[0],setEditedElement=_useState4[1];var _useState5=useState(initialElements),_useState6=_slicedToArray(_useState5,2),elements=_useState6[0],setElements=_useState6[1];var reactFlowWrapper=useRef(null);var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),reactFlowInstance=_useState8[0],setReactFlowInstance=_useState8[1];var onElementsRemove=function onElementsRemove(elementsToRemove){return setElements(function(els){return removeElements(elementsToRemove,els);});};var onConnect=function onConnect(params){return setElements(function(els){return addEdge(_objectSpread(_objectSpread({},params),{},{arrowHeadType:'arrowclosed',label:'edge label',type:'smoothstep'}),els);});};var onLoad=function onLoad(_reactFlowInstance){return setReactFlowInstance(_reactFlowInstance);};// HOOKS REACT-FLOW\nvar onDragOver=function onDragOver(event){event.preventDefault();event.dataTransfer.dropEffect='move';};var onDrop=function onDrop(event){event.preventDefault();//check if input/output already exists\nvar type=event.dataTransfer.getData('application/reactflow');if(type==\"input\"||type==\"output\"){if(checkExist(type)){return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \"+type);}}var reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();var position=reactFlowInstance.project({x:event.clientX-reactFlowBounds.left,y:event.clientY-reactFlowBounds.top});createNode(type,position);setNextId((parseInt(nextId)+1).toString());};var onElementClick=function onElementClick(event,element){// event.preventDefault();\nvar el=$(\"div\").find(\"[data-id='\".concat(element.id,\"']\"));if(el.text()===\"Start Node\"||el.text()===\"End Node\"){console.log(\"Impossible de modifier le noeud (début ou fin)\");}else{openEdition(element);}};var onPaneClick=function onPaneClick(event){event.preventDefault();closeEdition();};// FUNCTIONS\n// set next ID\n(function setId(){$(\".react-flow__node\").each(function(index){var currentId=$(this).data(\"id\");if(currentId>=nextId){setNextId((currentId+1).toString());}});})();function getId(){return nextId;}// add input in selected node\nfunction openEdition(element){if(!editedElement){var el=$(\"div\").find(\"[data-id='\".concat(element.id,\"']\"));var text=el.text();el.css(\"font-size\",0);el.append(\"<input type=\\\"text\\\" id=\\\"label\\\" name=\\\"label\\\" value=\\\"\".concat(text,\"\\\"/>\"));setEditedElement(el);}}// remove input in selected node and save label\nfunction closeEdition(){if(editedElement){var newValue=editedElement.children(\"input\").val();elements.forEach(function(element){if(element.id==editedElement.data(\"id\")){element.data.label=newValue;}});editedElement.children(\"input\").remove();editedElement.css(\"font-size\",\"12px\");setEditedElement(null);}}function createNode(type,position){var newNode={id:getId(),type:type,position:position,data:{label:\"\".concat(type,\" node\")}};setElements(function(es){return es.concat(newNode);});}// check if a node type already exists\nfunction checkExist(type){for(var i=0;i<elements.length;i++){if(elements[i].type==type){return true;}}return false;}// DEBUG\nfunction printNodes(){console.log(elements);}return/*#__PURE__*/_jsx(\"div\",{className:\"Tree\",children:/*#__PURE__*/_jsx(ReactFlowProvider,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"reactflow-wrapper\",ref:reactFlowWrapper,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Tree\"}),/*#__PURE__*/_jsx(\"div\",{style:{height:600,backgroundColor:'lightgrey'},children:/*#__PURE__*/_jsx(ReactFlow,{elements:elements,onElementsRemove:onElementsRemove,onConnect:onConnect,deleteKeyCode:46,onLoad:onLoad,onDrop:onDrop,onDragOver:onDragOver,onElementClick:onElementClick,onPaneClick:onPaneClick})}),/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return printNodes();},children:\"print nodes\"}),/*#__PURE__*/_jsx(Toolbar,{})]})})});}export default Tree;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Tree.js"],"names":["React","useRef","useState","$","ReactFlow","addEdge","ReactFlowProvider","removeElements","Toolbar","Tree","initialElements","id","type","data","label","position","x","y","source","target","arrowHeadType","nextId","setNextId","editedElement","setEditedElement","elements","setElements","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onElementsRemove","elementsToRemove","els","onConnect","params","onLoad","_reactFlowInstance","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","getData","checkExist","alert","reactFlowBounds","current","getBoundingClientRect","project","clientX","left","clientY","top","createNode","parseInt","toString","onElementClick","element","el","find","text","console","log","openEdition","onPaneClick","closeEdition","setId","each","index","currentId","getId","css","append","newValue","children","val","forEach","remove","newNode","es","concat","i","length","printNodes","height","backgroundColor"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\r\nimport $ from 'jquery';\r\nimport ReactFlow, {addEdge, ReactFlowProvider, removeElements} from 'react-flow-renderer';\r\n\r\nimport Toolbar from '../components/Toolbar';\r\n\r\nfunction Tree() {\r\n\r\n    const initialElements = [\r\n        {\r\n            id: '1',\r\n            type: 'input',\r\n            data: {label: 'Start Node'},\r\n            position: {x: 250, y: 25},\r\n        },\r\n        {\r\n            id: '2',\r\n            type: 'default',\r\n            data: {label: 'Node'},\r\n            position: {x: 100, y: 125},\r\n        },\r\n        {\r\n            id: '3',\r\n            type: 'output',\r\n            data: {label: 'End Node'},\r\n            position: {x: 250, y: 250},\r\n        },\r\n        {\r\n            id: 'e1-2',\r\n            source: '1',\r\n            target: '2',\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: 'edge label',\r\n        },\r\n        {\r\n            id: 'e2-3',\r\n            source: '2',\r\n            target: '3',\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: 'edge label',\r\n        },\r\n    ];\r\n\r\n    const [nextId, setNextId] = useState(\"0\");\r\n    const [editedElement, setEditedElement] = useState(null);\r\n    const [elements, setElements] = useState(initialElements);\r\n    const reactFlowWrapper = useRef(null);\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\r\n    const onConnect = (params) => setElements((els) => addEdge({\r\n        ...params,\r\n        arrowHeadType: 'arrowclosed', label: 'edge label', type: 'smoothstep'\r\n    }, els));\r\n    const onLoad = (_reactFlowInstance) => setReactFlowInstance(_reactFlowInstance);\r\n\r\n\r\n    // HOOKS REACT-FLOW\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = (event) => {\r\n        event.preventDefault();\r\n\r\n        //check if input/output already exists\r\n        const type = event.dataTransfer.getData('application/reactflow');\r\n        if (type == \"input\" || type == \"output\") {\r\n            if (checkExist(type)) {\r\n                return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \" + type)\r\n            }\r\n        }\r\n\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - reactFlowBounds.left,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n        createNode(type, position);\r\n        setNextId((parseInt(nextId) + 1).toString());\r\n    };\r\n\r\n    const onElementClick = (event, element) => {\r\n        // event.preventDefault();\r\n        let el = $(\"div\").find(`[data-id='${element.id}']`)\r\n        if (el.text() === \"Start Node\" || el.text() === \"End Node\") {\r\n            console.log(\"Impossible de modifier le noeud (début ou fin)\")\r\n        } else {\r\n            openEdition(element);\r\n        }\r\n    }\r\n\r\n    const onPaneClick = (event) => {\r\n        event.preventDefault();\r\n        closeEdition();\r\n    }\r\n\r\n\r\n    // FUNCTIONS\r\n\r\n    // set next ID\r\n    (function setId() {\r\n        $(\".react-flow__node\").each(function (index) {\r\n            let currentId = $(this).data(\"id\");\r\n            if (currentId >= nextId) {\r\n                setNextId((currentId + 1).toString());\r\n            }\r\n        });\r\n    })();\r\n\r\n    function getId() {\r\n        return nextId;\r\n    }\r\n\r\n    // add input in selected node\r\n    function openEdition(element) {\r\n        if (!editedElement) {\r\n            let el = $(\"div\").find(`[data-id='${element.id}']`)\r\n            let text = el.text()\r\n            el.css(\"font-size\", 0);\r\n            el.append(`<input type=\"text\" id=\"label\" name=\"label\" value=\"${text}\"/>`);\r\n            setEditedElement(el)\r\n        }\r\n    }\r\n\r\n    // remove input in selected node and save label\r\n    function closeEdition() {\r\n        if (editedElement) {\r\n            let newValue = editedElement.children(\"input\").val();\r\n            elements.forEach(element => {\r\n                if (element.id == editedElement.data(\"id\")) {\r\n                    element.data.label = newValue;\r\n                }\r\n            });\r\n            editedElement.children(\"input\").remove();\r\n            editedElement.css(\"font-size\", \"12px\");\r\n            setEditedElement(null)\r\n        }\r\n    }\r\n\r\n    function createNode(type, position) {\r\n        let newNode = {\r\n            id: getId(),\r\n            type,\r\n            position,\r\n            data: {label: `${type} node`},\r\n        };\r\n        setElements((es) => es.concat(newNode));\r\n    }\r\n\r\n    // check if a node type already exists\r\n    function checkExist(type) {\r\n        for (let i = 0; i < elements.length; i++) {\r\n            if (elements[i].type == type) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    // DEBUG\r\n\r\n    function printNodes() {\r\n        console.log(elements);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Tree\">\r\n            <ReactFlowProvider>\r\n                <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                    <h1>Tree</h1>\r\n                    <div style={{height: 600, backgroundColor: 'lightgrey'}}>\r\n                        <ReactFlow elements={elements}\r\n                                   onElementsRemove={onElementsRemove}\r\n                                   onConnect={onConnect}\r\n                                   deleteKeyCode={46}\r\n                                   onLoad={onLoad}\r\n                                   onDrop={onDrop}\r\n                                   onDragOver={onDragOver}\r\n                                   onElementClick={onElementClick}\r\n                                   onPaneClick={onPaneClick}/>\r\n                    </div>\r\n                    <button onClick={() => printNodes()}>print nodes</button>\r\n                    <Toolbar/>\r\n                </div>\r\n            </ReactFlowProvider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tree;\r\n"]},"metadata":{},"sourceType":"module"}