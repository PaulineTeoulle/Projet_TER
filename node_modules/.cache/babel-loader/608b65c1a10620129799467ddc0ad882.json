{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\components\\\\AuthenticatedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Auth from \"../contexts/Auth\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedRoute = ({\n  path,\n  component\n}) => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useContext(Auth);\n  const {\n    userRole\n  } = useContext(Auth);\n\n  if (isAuthenticated) {\n    switch (userRole) {\n      case 'user':\n        // accès a rien\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 24\n        }, this);\n\n      case 'administrator':\n        // accès a l'arbre uniquement\n        if (path === '/manageTree') {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: path,\n            component: component\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 28\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 28\n          }, this);\n        }\n\n      case 'super-admin':\n        // accès a tout\n        return /*#__PURE__*/_jsxDEV(Route, {\n          path: path,\n          component: component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 24\n        }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(AuthenticatedRoute, \"0EhIGAgNpnko6uhkpswVC9/QPKw=\");\n\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/components/AuthenticatedRoute.js"],"names":["React","useContext","Auth","Redirect","Route","AuthenticatedRoute","path","component","isAuthenticated","userRole"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAuB;AAAA;;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAoBP,UAAU,CAACC,IAAD,CAApC;AACA,QAAM;AAACO,IAAAA;AAAD,MAAaR,UAAU,CAACC,IAAD,CAA7B;;AACA,MAAGM,eAAH,EAAmB;AACf,YAAOC,QAAP;AACI,WAAK,MAAL;AACI;AACA,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;;AACJ,WAAK,eAAL;AACI;AACA,YAAGH,IAAI,KAAK,aAAZ,EAA0B;AACtB,8BAAO,QAAC,KAAD;AAAO,YAAA,IAAI,EAAEA,IAAb;AAAmB,YAAA,SAAS,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH,SAFD,MAEO;AACH,8BAAO,QAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACH;;AACL,WAAK,aAAL;AACI;AACA,4BAAO,QAAC,KAAD;AAAO,UAAA,IAAI,EAAED,IAAb;AAAmB,UAAA,SAAS,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AAbR;AAeH,GAhBD,MAgBO;AACH,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ,CAtBD;;GAAMF,kB;;KAAAA,kB;AAuBN,eAAeA,kBAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport Auth from \"../contexts/Auth\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nconst AuthenticatedRoute = ({path, component}) => {\r\n    const {isAuthenticated} = useContext(Auth);\r\n    const {userRole} = useContext(Auth);\r\n    if(isAuthenticated){\r\n        switch(userRole){\r\n            case 'user':\r\n                // accès a rien\r\n                return <Redirect to=\"/\"/>\r\n            case 'administrator':\r\n                // accès a l'arbre uniquement\r\n                if(path === '/manageTree'){\r\n                    return <Route path={path} component={component}/> \r\n                } else {\r\n                    return <Redirect to=\"/\"/>\r\n                }\r\n            case 'super-admin':\r\n                // accès a tout\r\n                return <Route path={path} component={component}/> \r\n        }\r\n    } else {\r\n        return <Redirect to=\"/login\"/>\r\n    }\r\n}\r\nexport default AuthenticatedRoute; "]},"metadata":{},"sourceType":"module"}