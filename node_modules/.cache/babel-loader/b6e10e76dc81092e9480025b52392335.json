{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\views\\\\FileUpload.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        id_methode: {\n          \"id_methode\": event.target.value\n        }\n      });\n    };\n\n    this.open = () => {\n      let protocol = window.location.protocol;\n      let host = window.location.hostname;\n      let url = protocol + '//' + host;\n      let dynamicPdf = 'ExamenIHM_CorentinRoy.pdf';\n      window.open(url + '/Projet_TER/src/public/documentsRessources/' + dynamicPdf);\n    };\n\n    this.state = {\n      file: null,\n      datas: null,\n      id_methode: null,\n      staticLink: 'http://localhost/reactTest/MATUI/src/public/documentsRessources/ExamenIHM_CorentinRoy.pdf'\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    let res = await this.uploadFile(this.state.file);\n    console.log(res.data);\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return await axios.post('http://localhost/reactTest/MATUI/API/Controllers/uploadFile.php', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n  }\n\n  componentDidMount() {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n\n    if (this.state.datas === null) {\n      const json = JSON.stringify(this.state.id_methode);\n      axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json).then(response => {\n        this.setState({\n          datas: response.data\n        });\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Read File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.staticLink,\n        children: \"open pdf (statick link)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.open,\n        children: \"open pdf (function dynamic link)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Change Methode id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onChange: this.handleChange.bind(this),\n          onSubmit: this.show.bind(this),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/FileUpload.js"],"names":["React","axios","FileUpload","Component","constructor","props","handleChange","event","setState","id_methode","target","value","open","protocol","window","location","host","hostname","url","dynamicPdf","state","file","datas","staticLink","onSubmit","bind","onChange","uploadFile","e","preventDefault","res","console","log","data","files","formData","FormData","append","post","headers","componentDidMount","json","JSON","stringify","then","response","catch","error","render","show"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\n\r\nclass FileUpload extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            datas: null,\r\n            id_methode: null,\r\n            staticLink: 'http://localhost/reactTest/MATUI/src/public/documentsRessources/ExamenIHM_CorentinRoy.pdf'\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.uploadFile = this.uploadFile.bind(this)\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault()\r\n        let res = await this.uploadFile(this.state.file);\r\n        console.log(res.data);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({file: e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({id_methode: {\"id_methode\": event.target.value}});\r\n    };\r\n\r\n    async uploadFile(file) {\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        return await axios.post('http://localhost/reactTest/MATUI/API/Controllers/uploadFile.php', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n\r\n    open = () => {\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        let dynamicPdf = 'ExamenIHM_CorentinRoy.pdf';\r\n        window.open(url + '/Projet_TER/src/public/documentsRessources/' + dynamicPdf);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n         let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        if (this.state.datas === null) {\r\n            const json = JSON.stringify(this.state.id_methode);\r\n            axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\r\n                .then(response => {\r\n                    this.setState({datas: response.data});\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (<div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <h1>Upload File</h1>\r\n                    <input type=\"file\" onChange={this.onChange}/>\r\n                    <button type=\"submit\">Upload File</button>\r\n                </form>\r\n\r\n                <br/>\r\n                <h1>Read File</h1>\r\n                <a href={this.state.staticLink}>open pdf (statick link)</a>\r\n                <br/>\r\n                <p onClick={this.open}>open pdf (function dynamic link)</p>\r\n                <br/><br/><br/>\r\n                <div><h1>Change Methode id</h1>\r\n                    <form onChange={this.handleChange.bind(this)} onSubmit={this.show.bind(this)}>\r\n                        <input type=\"number\" id=\"name\" name=\"name\"/>\r\n\r\n                    </form>\r\n\r\n                    <br/>\r\n\r\n                    <div> {/*this.state.datas.map(data => <p key={data}>{data.Nom}</p>)*/}</div>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}