{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\components\\\\quiz\\\\issues.js\";\nimport React from 'react';\nimport $ from 'jquery';\nimport Loader from '../Loader';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronRight, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Issues(props) {\n  function next() {\n    let checkedBox = $('input:checked').val();\n    let allChoices = [];\n    $.each($(\"input\"), function () {\n      allChoices.push($(this).val());\n    });\n\n    if (checkedBox) {\n      let decision = props.decisions.find(decision => decision.ID_Decision === checkedBox);\n      props.changeData(decision.ID_Critere_sortant, decision, allChoices);\n    }\n  }\n\n  if (props.issue && props.decisions) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Issues\",\n      children: [props.issue.Informations != null ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"issueInfoIcon\",\n          icon: faInfoCircle,\n          onClick: showInformations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), \"  \", props.issue.Libelle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", props.issue.Libelle]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"step\",\n        children: [\"Question \", props.step]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"#\",\n        children: props.decisions.map((decision, i) => {\n          // if(decision.ID_Critere_sortant == null){\n          //     // 0 == end node\n          //     decision.ID_Critere_sortant = 0;\n          // }\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"radio-group\",\n              value: decision.ID_Decision\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: decision.Libelle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, decision.ID_Decision, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: next,\n        children: [\"Next\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"icon\",\n          icon: faChevronRight\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 44\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 16\n    }, this);\n  }\n}\n\n_c = Issues;\nexport default Issues;\n\nvar _c;\n\n$RefreshReg$(_c, \"Issues\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/components/quiz/issues.js"],"names":["React","$","Loader","FontAwesomeIcon","faChevronRight","faInfoCircle","Issues","props","next","checkedBox","val","allChoices","each","push","decision","decisions","find","ID_Decision","changeData","ID_Critere_sortant","issue","Informations","showInformations","Libelle","step","map","i"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,cAAR,EAAwBC,YAAxB,QAA2C,mCAA3C;;;AAGA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAEnB,WAASC,IAAT,GAAgB;AACZ,QAAIC,UAAU,GAAGR,CAAC,CAAC,eAAD,CAAD,CAAmBS,GAAnB,EAAjB;AACA,QAAIC,UAAU,GAAG,EAAjB;AACAV,IAAAA,CAAC,CAACW,IAAF,CAAOX,CAAC,CAAC,OAAD,CAAR,EAAmB,YAAY;AAC3BU,MAAAA,UAAU,CAACE,IAAX,CAAgBZ,CAAC,CAAC,IAAD,CAAD,CAAQS,GAAR,EAAhB;AACH,KAFD;;AAIA,QAAID,UAAJ,EAAgB;AACZ,UAAIK,QAAQ,GAAGP,KAAK,CAACQ,SAAN,CAAgBC,IAAhB,CAAqBF,QAAQ,IAAIA,QAAQ,CAACG,WAAT,KAAyBR,UAA1D,CAAf;AACAF,MAAAA,KAAK,CAACW,UAAN,CAAiBJ,QAAQ,CAACK,kBAA1B,EAA8CL,QAA9C,EAAwDH,UAAxD;AACH;AACJ;;AAED,MAAIJ,KAAK,CAACa,KAAN,IAAeb,KAAK,CAACQ,SAAzB,EAAoC;AAChC,wBACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,iBAEKR,KAAK,CAACa,KAAN,CAAYC,YAAZ,IAA4B,IAA5B,gBACG;AAAA,gCAAI,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,eAA3B;AAA2C,UAAA,IAAI,EAAEhB,YAAjD;AAA+D,UAAA,OAAO,EAAEiB;AAAxE;AAAA;AAAA;AAAA;AAAA,gBAAJ,QAAkGf,KAAK,CAACa,KAAN,CAAYG,OAA9G;AAAA;AAAA;AAAA;AAAA;AAAA,cADH,gBAEK;AAAA,wBAAMhB,KAAK,CAACa,KAAN,CAAYG,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJV,eAKI;AAAG,QAAA,SAAS,EAAC,MAAb;AAAA,gCAA8BhB,KAAK,CAACiB,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAM,QAAA,MAAM,EAAC,GAAb;AAAA,kBACKjB,KAAK,CAACQ,SAAN,CAAgBU,GAAhB,CAAoB,CAACX,QAAD,EAAWY,CAAX,KAAiB;AAClC;AACA;AACA;AACA;AACA,8BACI;AAAA,oCACI;AAAO,cAAA,IAAI,EAAC,OAAZ;AAAoB,cAAA,IAAI,EAAC,aAAzB;AAAuC,cAAA,KAAK,EAAEZ,QAAQ,CAACG;AAAvD;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA,wBAAQH,QAAQ,CAACS;AAAjB;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA,aAAUT,QAAQ,CAACG,WAAnB;AAAA;AAAA;AAAA;AAAA,kBADJ;AAMH,SAXA;AADL;AAAA;AAAA;AAAA;AAAA,cANJ,eAoBI;AAAQ,QAAA,OAAO,EAAET,IAAjB;AAAA,wCAA2B,QAAC,eAAD;AAAiB,UAAA,SAAS,EAAC,MAA3B;AAAkC,UAAA,IAAI,EAAEJ;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAwBH,GAzBD,MAyBO;AACH,wBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AACJ;;KA3CQE,M;AA6CT,eAAeA,MAAf","sourcesContent":["import React from 'react';\r\nimport $ from 'jquery';\r\nimport Loader from '../Loader'\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport {faChevronRight, faInfoCircle} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction Issues(props) {\r\n\r\n    function next() {\r\n        let checkedBox = $('input:checked').val();\r\n        let allChoices = [];\r\n        $.each($(\"input\"), function () {\r\n            allChoices.push($(this).val());\r\n        });\r\n\r\n        if (checkedBox) {\r\n            let decision = props.decisions.find(decision => decision.ID_Decision === checkedBox)\r\n            props.changeData(decision.ID_Critere_sortant, decision, allChoices);\r\n        }\r\n    }\r\n\r\n    if (props.issue && props.decisions) {\r\n        return (\r\n            <div className=\"Issues\">\r\n\r\n                {props.issue.Informations != null ?\r\n                    <h3><FontAwesomeIcon className=\"issueInfoIcon\" icon={faInfoCircle} onClick={showInformations}/>  {props.issue.Libelle}</h3>\r\n                    : <h3> {props.issue.Libelle}</h3>}\r\n                <p className=\"step\">Question {props.step}</p>\r\n                <form action=\"#\">\r\n                    {props.decisions.map((decision, i) => {\r\n                        // if(decision.ID_Critere_sortant == null){\r\n                        //     // 0 == end node\r\n                        //     decision.ID_Critere_sortant = 0;\r\n                        // }\r\n                        return (\r\n                            <div key={decision.ID_Decision}>\r\n                                <input type=\"radio\" name=\"radio-group\" value={decision.ID_Decision}/>\r\n                                <label>{decision.Libelle}</label>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </form>\r\n                <button onClick={next}>Next<FontAwesomeIcon className=\"icon\" icon={faChevronRight}/></button>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <Loader/>\r\n    }\r\n}\r\n\r\nexport default Issues;\r\n"]},"metadata":{},"sourceType":"module"}