{"ast":null,"code":"import axios from'axios';import jwt_decode from\"jwt-decode\";import{addItem,getItem,removeItem}from\"./LocalStorage\";//Vérifie la connexion avec le token\nexport function hasAuthenticated(){var token=getItem('token');var result=token?tokenIsValid(token):false;if(false===result){removeItem('token');}return result;}export function isUser(){var token=getItem('token');var result=token?tokenIsValid(token):false;if(false===result){removeItem('token');return false;}if(true===result){return getRole(token);}return false;}//Récup du role du token décodé\nexport function getRole(token){var tokenResult=decodeToken(token);return tokenResult['user_role'];}//Récupération du token + mise en localStorage\nexport function login(credentials){var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;return axios.post(url+'/API/Controllers/connexion.php',credentials).then(function(response){return response.data.token;}).then(function(token){if(token!==undefined){addItem('token',token);return true;}else return false;});}//Supprime le token du localSTorage\nexport function logout(){removeItem('token');}//Verifie validité du token (avec temps d'expiration)\nfunction tokenIsValid(token){var decoded=jwt_decode(token);var exp=decoded['exp'];return exp*1000>new Date().getTime();}//Traduit le token pour récupérer les infos\nfunction decodeToken(token){return jwt_decode(token);}","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/services/AuthApi.js"],"names":["axios","jwt_decode","addItem","getItem","removeItem","hasAuthenticated","token","result","tokenIsValid","isUser","getRole","tokenResult","decodeToken","login","credentials","protocol","window","location","host","hostname","url","post","then","response","data","undefined","logout","decoded","exp","Date","getTime"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAAQC,OAAR,CAAiBC,OAAjB,CAA0BC,UAA1B,KAA2C,gBAA3C,CAEA;AACA,MAAO,SAASC,CAAAA,gBAAT,EAA4B,CAE/B,GAAMC,CAAAA,KAAK,CAAGH,OAAO,CAAC,OAAD,CAArB,CACA,GAAMI,CAAAA,MAAM,CAAGD,KAAK,CAAGE,YAAY,CAACF,KAAD,CAAf,CAAyB,KAA7C,CACA,GAAI,QAAUC,MAAd,CAAsB,CAClBH,UAAU,CAAC,OAAD,CAAV,CACH,CACD,MAAOG,CAAAA,MAAP,CACH,CAED,MAAO,SAASE,CAAAA,MAAT,EAAiB,CACpB,GAAMH,CAAAA,KAAK,CAAGH,OAAO,CAAC,OAAD,CAArB,CACA,GAAMI,CAAAA,MAAM,CAAGD,KAAK,CAAGE,YAAY,CAACF,KAAD,CAAf,CAAyB,KAA7C,CACA,GAAI,QAAUC,MAAd,CAAsB,CAClBH,UAAU,CAAC,OAAD,CAAV,CACA,MAAO,MAAP,CACH,CACD,GAAG,OAASG,MAAZ,CAAoB,CAChB,MAAOG,CAAAA,OAAO,CAACJ,KAAD,CAAd,CACH,CACD,MAAO,MAAP,CACH,CAED;AACA,MAAO,SAASI,CAAAA,OAAT,CAAiBJ,KAAjB,CAAuB,CAC1B,GAAMK,CAAAA,WAAW,CAAGC,WAAW,CAACN,KAAD,CAA/B,CACA,MAAOK,CAAAA,WAAW,CAAC,WAAD,CAAlB,CACH,CAED;AACA,MAAO,SAASE,CAAAA,KAAT,CAAeC,WAAf,CAA4B,CAC/B,GAAIC,CAAAA,QAAQ,CAAGC,MAAM,CAACC,QAAP,CAAgBF,QAA/B,CACA,GAAIG,CAAAA,IAAI,CAAGF,MAAM,CAACC,QAAP,CAAgBE,QAA3B,CACA,GAAIC,CAAAA,GAAG,CAAGL,QAAQ,CAAG,IAAX,CAAkBG,IAA5B,CACA,MAAOlB,CAAAA,KAAK,CACPqB,IADE,CACGD,GAAG,CAAG,gCADT,CAC2CN,WAD3C,EAEFQ,IAFE,CAEG,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,CAAclB,KAAlB,EAFX,EAGFgB,IAHE,CAGG,SAAAhB,KAAK,CAAI,CACX,GAAGA,KAAK,GAAKmB,SAAb,CAAuB,CACnBvB,OAAO,CAAC,OAAD,CAAUI,KAAV,CAAP,CACA,MAAO,KAAP,CACH,CAHD,IAIK,OAAO,MAAP,CACR,CATE,CAAP,CAUH,CACD;AACA,MAAO,SAASoB,CAAAA,MAAT,EAAkB,CACrBtB,UAAU,CAAC,OAAD,CAAV,CACH,CAED;AACA,QAASI,CAAAA,YAAT,CAAsBF,KAAtB,CAA6B,CACzB,GAAMqB,CAAAA,OAAO,CAAG1B,UAAU,CAACK,KAAD,CAA1B,CACA,GAAMsB,CAAAA,GAAG,CAAGD,OAAO,CAAC,KAAD,CAAnB,CACA,MAAOC,CAAAA,GAAG,CAAG,IAAN,CAAa,GAAIC,CAAAA,IAAJ,GAAWC,OAAX,EAApB,CACH,CAED;AACA,QAASlB,CAAAA,WAAT,CAAqBN,KAArB,CAA2B,CACvB,MAAOL,CAAAA,UAAU,CAACK,KAAD,CAAjB,CACH","sourcesContent":["import axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {addItem, getItem, removeItem} from \"./LocalStorage\";\r\n\r\n//Vérifie la connexion avec le token\r\nexport function hasAuthenticated() {\r\n \r\n    const token = getItem('token');\r\n    const result = token ? tokenIsValid(token) : false;\r\n    if (false === result) {\r\n        removeItem('token');\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function isUser(){\r\n    const token = getItem('token');\r\n    const result = token ? tokenIsValid(token) : false;\r\n    if (false === result) {\r\n        removeItem('token');\r\n        return false;\r\n    }\r\n    if(true === result) {\r\n        return getRole(token);\r\n    }\r\n    return false;\r\n}\r\n\r\n//Récup du role du token décodé\r\nexport function getRole(token){\r\n    const tokenResult = decodeToken(token);\r\n    return tokenResult['user_role'];\r\n}\r\n\r\n//Récupération du token + mise en localStorage\r\nexport function login(credentials) {\r\n    let protocol = window.location.protocol;\r\n    let host = window.location.hostname;\r\n    let url = protocol + '//' + host;\r\n    return axios\r\n        .post(url + '/API/Controllers/connexion.php', credentials)\r\n        .then(response => response.data.token)\r\n        .then(token => {\r\n            if(token !== undefined){\r\n                addItem('token', token);\r\n                return true;\r\n            }\r\n            else return false;\r\n        });\r\n}\r\n//Supprime le token du localSTorage\r\nexport function logout() {\r\n    removeItem('token');\r\n}\r\n\r\n//Verifie validité du token (avec temps d'expiration)\r\nfunction tokenIsValid(token) {\r\n    const decoded = jwt_decode(token);\r\n    const exp = decoded['exp']\r\n    return exp * 1000 > new Date().getTime();\r\n}\r\n\r\n//Traduit le token pour récupérer les infos\r\nfunction decodeToken(token){\r\n    return jwt_decode(token);\r\n}"]},"metadata":{},"sourceType":"module"}