{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\components\\\\modal\\\\tree\\\\ModalEditMethod.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport $ from 'jquery';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalEditMethod(props) {\n  _s();\n\n  const [method, setMethod] = useState(null);\n  const [resources, setResources] = useState(null);\n  const [title, setTitle] = useState(null);\n  const [file, setFile] = useState(null);\n\n  function customFunction() {\n    let data = {\n      label: $('#label').val(),\n      description: $('#description').val(),\n      productedData: $('#productedData').val(),\n      workforce: $('#workforce').val(),\n      method: $('#method').val(),\n      analysis: $('#analysis').val(),\n      exemple: $('#exemple').val()\n    };\n    props.mainAction(data);\n    closeModal();\n  }\n\n  function closeModal() {\n    $('.ModalEditMethod').css(\"display\", \"none\");\n    props.close();\n    setMethod(null);\n  }\n\n  function openModal() {\n    $('.ModalEditMethod').css(\"display\", \"block\");\n  }\n\n  function onSubmit(e) {\n    e.preventDefault();\n    uploadFile(file);\n  }\n\n  function onChange(e) {\n    setFile(e.target.files[0]);\n  }\n\n  function uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n    axios.post(url + '/reactTest/MATUI/API/Controllers/ressource/uploadFile.php', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    }).then(response => console.log(response.data));\n  }\n\n  function openFile(name) {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n    window.open(url + '/reactTest/MATUI/src/public/documentsRessources/' + name);\n  }\n\n  useEffect(() => {\n    if (props.open) {\n      openModal();\n      setMethod(props.selectedMethod);\n      setTitle(props.title);\n    }\n  }, [props.open]);\n  useEffect(() => {\n    if (method && props.resources) {\n      setResources(props.resources[method.id.slice(1)]);\n    }\n  }, [method]);\n  console.log(props.resources);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Modal ModalEditMethod\",\n    children: title && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [method && /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"label\",\n              name: \"label\",\n              placeholder: \"label\",\n              defaultValue: method.data.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"description\",\n              name: \"description\",\n              placeholder: \"description\",\n              defaultValue: method.data.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"workforce\",\n              name: \"workforce\",\n              placeholder: \"workforce\",\n              defaultValue: method.data.workforce\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"productedData\",\n              name: \"productedData\",\n              placeholder: \"productedData\",\n              defaultValue: method.data.productedData\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"method\",\n              name: \"method\",\n              placeholder: \"method\",\n              defaultValue: method.data.method\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"analysis\",\n              name: \"analysis\",\n              placeholder: \"analysis\",\n              defaultValue: method.data.analysis\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"exemple\",\n              name: \"exemple\",\n              placeholder: \"exemple\",\n              defaultValue: method.data.exemple\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"ressources\",\n            children: [/*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"pets\",\n              id: \"pet-select\",\n              children: /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"--Please choose an option--\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 29\n            }, this), resources && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: resources.map((element, i) => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  onClick: () => openFile(element.Nom),\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: element.Nom\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 41\n                  }, this)\n                }, i, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 45\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                children: \"Upload File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"action\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button filled\",\n            onClick: customFunction,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button outlined\",\n            onClick: closeModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalEditMethod, \"0n8uWAeRh7SBXi03d4YtFfuQgUE=\");\n\n_c = ModalEditMethod;\nexport default ModalEditMethod;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalEditMethod\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/components/modal/tree/ModalEditMethod.js"],"names":["React","useEffect","useState","$","axios","ModalEditMethod","props","method","setMethod","resources","setResources","title","setTitle","file","setFile","customFunction","data","label","val","description","productedData","workforce","analysis","exemple","mainAction","closeModal","css","close","openModal","onSubmit","e","preventDefault","uploadFile","onChange","target","files","formData","FormData","append","protocol","window","location","host","hostname","url","post","headers","then","response","console","log","openFile","name","open","selectedMethod","id","slice","map","element","i","Nom"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport $ from 'jquery';\r\nimport axios from 'axios';\r\n\r\nfunction ModalEditMethod(props) {\r\n    const [method, setMethod] = useState(null);\r\n    const [resources, setResources] = useState(null);\r\n    const [title, setTitle] = useState(null);\r\n    const [file, setFile] = useState(null);\r\n\r\n    function customFunction(){\r\n        let data = {\r\n            label: $('#label').val(),\r\n            description: $('#description').val(),\r\n            productedData: $('#productedData').val(),\r\n            workforce: $('#workforce').val(),\r\n            method: $('#method').val(),\r\n            analysis: $('#analysis').val(),\r\n            exemple: $('#exemple').val()\r\n        }\r\n        props.mainAction(data)\r\n        closeModal();\r\n    }\r\n\r\n    function closeModal() {\r\n        $('.ModalEditMethod').css(\"display\", \"none\");\r\n        props.close();\r\n        setMethod(null)\r\n    }\r\n\r\n    function openModal() {\r\n        $('.ModalEditMethod').css(\"display\", \"block\");\r\n    }\r\n\r\n    function onSubmit(e) {\r\n        e.preventDefault()\r\n        uploadFile(file);\r\n    }\r\n\r\n    function onChange(e) {\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    function uploadFile(file) {\r\n        const formData = new FormData();\r\n        formData.append('file', file);\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        axios.post(url + '/reactTest/MATUI/API/Controllers/ressource/uploadFile.php', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        }).then(response => console.log(response.data));\r\n    }\r\n\r\n    function openFile(name){\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        window.open(url + '/reactTest/MATUI/src/public/documentsRessources/' + name);\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.open) {\r\n            openModal();\r\n            setMethod(props.selectedMethod)\r\n            setTitle(props.title)\r\n        }\r\n    }, [props.open]);\r\n\r\n    useEffect(() => {\r\n        if (method && props.resources) {\r\n            setResources(props.resources[method.id.slice(1)])\r\n        }\r\n    }, [method]);\r\n\r\n    console.log(props.resources)\r\n\r\n    return (\r\n        <div className=\"Modal ModalEditMethod\">\r\n            {title &&\r\n            <div>\r\n                <h3>{title}</h3>\r\n                <div>\r\n                    <div className=\"content\">\r\n                        {method &&\r\n                            <form>\r\n                                <input type=\"text\" id=\"label\" name=\"label\" placeholder=\"label\" defaultValue={method.data.label}/>\r\n                                <input type=\"text\" id=\"description\" name=\"description\" placeholder=\"description\" defaultValue={method.data.description}/>\r\n                                <input type=\"text\" id=\"workforce\" name=\"workforce\" placeholder=\"workforce\" defaultValue={method.data.workforce}/>\r\n                                <input type=\"text\" id=\"productedData\" name=\"productedData\" placeholder=\"productedData\" defaultValue={method.data.productedData}/>\r\n                                <input type=\"text\" id=\"method\" name=\"method\" placeholder=\"method\" defaultValue={method.data.method}/>\r\n                                <input type=\"text\" id=\"analysis\" name=\"analysis\" placeholder=\"analysis\" defaultValue={method.data.analysis}/>\r\n                                <input type=\"text\" id=\"exemple\" name=\"exemple\" placeholder=\"exemple\" defaultValue={method.data.exemple}/>     \r\n                            </form>\r\n                        }\r\n                        <div className=\"ressources\">\r\n                            <select name=\"pets\" id=\"pet-select\">\r\n                                <option value=\"\">--Please choose an option--</option>\r\n                            </select>\r\n                            {resources &&\r\n                                <div>\r\n                                {resources.map((element, i) => {   \r\n                                    return (<div key={i} onClick={() => openFile(element.Nom)}>\r\n                                        <p>{element.Nom}</p>\r\n                                        </div>\r\n                                    ) \r\n                                })}    \r\n                                </div>\r\n                            }  \r\n                            <form onSubmit={onSubmit}>\r\n                                <h1>Upload File</h1>\r\n                                <input type=\"file\" onChange={onChange}/>\r\n                                <button type=\"submit\">Upload File</button>\r\n                            </form>  \r\n                        </div>      \r\n                    </div>   \r\n                    <div className=\"action\">\r\n                        <button className=\"button filled\" onClick={customFunction}>Save</button>\r\n                        <button className=\"button outlined\" onClick={closeModal}>Cancel</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ModalEditMethod;\r\n"]},"metadata":{},"sourceType":"module"}