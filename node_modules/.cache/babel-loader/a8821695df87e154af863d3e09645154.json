{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\views\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport Auth from \"../contexts/Auth\";\nimport { login, isUserRole, isAdminRole, isSuperAdminRole } from \"../services/AuthApi\";\nimport 'font-awesome/css/font-awesome.min.css';\nimport { isUser } from \"../services/AuthApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  history\n}) => {\n  _s();\n\n  //Utilisation du contexte pour vérifier les états de connexion\n  const {\n    setIsAuthenticated,\n    setUserRole\n  } = useContext(Auth);\n  const [user, setUser] = useState({\n    username: \"\",\n    mot_de_passe: \"\"\n  });\n\n  const handleChange = ({\n    currentTarget\n  }) => {\n    const {\n      name,\n      value\n    } = currentTarget;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault(); //Set les états du contexte quand on est connecté\n\n    try {\n      const response = await login(user);\n      setIsAuthenticated(response);\n      let userRole = isUser();\n\n      if (userRole) {\n        setUserRole(userRole);\n      }\n\n      history.replace('/quiz');\n    } catch ({\n      response\n    }) {\n      console.log(response);\n    }\n  };\n\n  const change = ({\n    currentTarget\n  }) => {\n    history.replace('/register');\n  }; //\n  // useEffect(() => {\n  //    // Redirection si déjà loggé et sur la page login\n  //     if (isAuthenticated) {\n  //         history.replace('/home')\n  //     }\n  //\n  // }, [history, isAuthenticated]);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginRegister\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign in\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputIcon\",\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            required: true,\n            placeholder: \"\\uF007    Username\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"inputIcon\",\n            type: \"password\",\n            id: \"password\",\n            name: \"mot_de_passe\",\n            required: true,\n            placeholder: \"    Password\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button filled\",\n          onClick: handleSubmit,\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: change,\n            children: \"Create one now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"Uu9+ohKrn9VQ3wdLn1XhKeWadAQ=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Login.js"],"names":["React","useContext","useState","Auth","login","isUserRole","isAdminRole","isSuperAdminRole","isUser","Login","history","setIsAuthenticated","setUserRole","user","setUser","username","mot_de_passe","handleChange","currentTarget","name","value","handleSubmit","event","preventDefault","response","userRole","replace","console","log","change"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,KAAR,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,gBAAxC,QAA+D,qBAA/D;AACA,OAAO,uCAAP;AACA,SAAQC,MAAR,QAAqB,qBAArB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAe;AAAA;;AAEzB;AACA,QAAM;AAACC,IAAAA,kBAAD;AAAqBC,IAAAA;AAArB,MAAqCX,UAAU,CAACE,IAAD,CAArD;AAEA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC;AAC7Ba,IAAAA,QAAQ,EAAE,EADmB;AAE7BC,IAAAA,YAAY,EAAE;AAFe,GAAD,CAAhC;;AAKA,QAAMC,YAAY,GAAG,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAqB;AACtC,UAAM;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,QAAgBF,aAAtB;AACAJ,IAAAA,OAAO,CAAC,EAAC,GAAGD,IAAJ;AAAU,OAACM,IAAD,GAAQC;AAAlB,KAAD,CAAP;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AAChCA,IAAAA,KAAK,CAACC,cAAN,GADgC,CAGhC;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACS,IAAD,CAA5B;AACAF,MAAAA,kBAAkB,CAACa,QAAD,CAAlB;AACA,UAAIC,QAAQ,GAAGjB,MAAM,EAArB;;AACA,UAAGiB,QAAH,EAAY;AACRb,QAAAA,WAAW,CAACa,QAAD,CAAX;AACH;;AACDf,MAAAA,OAAO,CAACgB,OAAR,CAAgB,OAAhB;AACH,KARD,CAQE,OAAO;AAACF,MAAAA;AAAD,KAAP,EAAmB;AACjBG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACH;AACJ,GAfD;;AAkBA,QAAMK,MAAM,GAAG,CAAC;AAACX,IAAAA;AAAD,GAAD,KAAqB;AAChCR,IAAAA,OAAO,CAACgB,OAAR,CAAgB,WAAhB;AACH,GAFD,CAjCyB,CAoCzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAA,iCACI;AAAO,YAAA,SAAS,EAAE,WAAlB;AAA8B,YAAA,IAAI,EAAC,MAAnC;AAA0C,YAAA,EAAE,EAAC,UAA7C;AAAwD,YAAA,IAAI,EAAC,UAA7D;AAAwE,YAAA,QAAQ,MAAhF;AAAiF,YAAA,WAAW,EAAC,oBAA7F;AACO,YAAA,QAAQ,EAAET;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAA,iCACI;AAAO,YAAA,SAAS,EAAE,WAAlB;AAA8B,YAAA,IAAI,EAAC,UAAnC;AAA8C,YAAA,EAAE,EAAC,UAAjD;AAA4D,YAAA,IAAI,EAAC,cAAjE;AAAgF,YAAA,QAAQ,MAAxF;AAAyF,YAAA,WAAW,EAAE,eAAtG;AACO,YAAA,QAAQ,EAAEA;AADjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAcI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAEI,YAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAdJ,eAkBI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACI;AAAA,8DAA2B;AAAG,YAAA,OAAO,EAAEQ,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CAxED;;GAAMpB,K;;KAAAA,K;AA0EN,eAAeA,KAAf","sourcesContent":["import React, {useContext, useState} from 'react';\r\nimport Auth from \"../contexts/Auth\";\r\nimport {login, isUserRole, isAdminRole, isSuperAdminRole} from \"../services/AuthApi\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport {isUser} from \"../services/AuthApi\";\r\n\r\nconst Login = ({history}) => {\r\n\r\n    //Utilisation du contexte pour vérifier les états de connexion\r\n    const {setIsAuthenticated, setUserRole } = useContext(Auth);\r\n\r\n    const [user, setUser] = useState({\r\n        username: \"\",\r\n        mot_de_passe: \"\"\r\n    });\r\n\r\n    const handleChange = ({currentTarget}) => {\r\n        const {name, value} = currentTarget;\r\n        setUser({...user, [name]: value})\r\n    }\r\n\r\n    const handleSubmit = async event => {\r\n        event.preventDefault();\r\n\r\n        //Set les états du contexte quand on est connecté\r\n        try {\r\n            const response = await login(user);\r\n            setIsAuthenticated(response);\r\n            let userRole = isUser();\r\n            if(userRole){\r\n                setUserRole(userRole)\r\n            }\r\n            history.replace('/quiz')\r\n        } catch ({response}) {\r\n            console.log(response);\r\n        }\r\n    }\r\n\r\n\r\n    const change = ({currentTarget}) => {\r\n        history.replace('/register')\r\n    }\r\n    //\r\n    // useEffect(() => {\r\n    //    // Redirection si déjà loggé et sur la page login\r\n    //     if (isAuthenticated) {\r\n    //         history.replace('/home')\r\n    //     }\r\n    //\r\n    // }, [history, isAuthenticated]);\r\n\r\n\r\n    return (\r\n        <div className=\"LoginRegister\">\r\n            <div>\r\n                <h3>Sign in</h3>\r\n                <div className=\"InputItems\">\r\n                    <div>\r\n                        <input className =\"inputIcon\" type=\"text\" id=\"username\" name=\"username\" required placeholder=\"    Username\"\r\n                               onChange={handleChange}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input className =\"inputIcon\" type=\"password\" id=\"password\" name=\"mot_de_passe\" required placeholder={\"    Password\"}\r\n                               onChange={handleChange}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"action\">\r\n                    <button className=\"button filled\" onClick={handleSubmit}>Sign in</button>\r\n                </div>\r\n\r\n                <div className=\"signup\">\r\n                    <p>Don't have an account ? <a onClick={change}>Create one now</a></p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}