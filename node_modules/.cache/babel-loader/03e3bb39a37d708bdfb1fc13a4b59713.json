{"ast":null,"code":"import _classCallCheck from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import axios from'axios';import Issues from'../components/quiz/issues';import Historic from'../components/quiz/historic';import Method from'../components/quiz/method';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var Quiz=/*#__PURE__*/function(_React$Component){_inherits(Quiz,_React$Component);var _super=_createSuper(Quiz);function Quiz(props){var _this;_classCallCheck(this,Quiz);_this=_super.call(this,props);_this.changeData=function(nextIssueId){var decision=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;var allChoices=arguments.length>2&&arguments[2]!==undefined?arguments[2]:null;var historic=arguments.length>3&&arguments[3]!==undefined?arguments[3]:true;var editHistoric=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;// ID de la prochaine question\n_this.setState({checkedDecision:decision});//  Vérifie si la décision renvoie une méthode\nvar method=_this.checkMethod(decision);if(method){_this.manageMethod(decision,method);}else{// si ID prochaine question pas égal a 0 on récupère info\nif(nextIssueId!==0){if(allChoices){// si on est sur le critère de fin et qu'on continue, on reinitialise l'historique\nvar restart;allChoices.forEach(function(element){var decision=_this.state.tree.decisions.find(function(el){return el.ID_Decision===element;});if(decision.ID_Critere_sortant===null){restart=true;}});if(restart){_this.setState({historic:[],step:0},function(){_this.manageStoreData(nextIssueId,decision,historic,editHistoric);});}else{_this.manageStoreData(nextIssueId,decision,historic,editHistoric);}}else{_this.manageStoreData(nextIssueId,decision,historic,editHistoric);}}else{_this.props.history.push({pathname:'/summary',state:{historic:_this.state.historic}});}}};_this.manageStoreData=function(nextIssueId,decision,historic,editHistoric){// on va chercher la prochaine question et réponses\nvar issue=_this.state.tree.criteres.find(function(critere){return critere.ID_Critere===nextIssueId;});var decisions=_this.state.tree.decisions.filter(function(decision){return decision.ID_Critere_entrant===issue.ID_Critere;});var oldIssue=_this.state.currentIssue;_this.setState({currentIssue:issue,currentDecisions:decisions,step:_this.state.step+1},function(){// on met a jour l'historique\nif(historic){_this.manageHistoric(decision,oldIssue);}if(editHistoric){var historicElement={issue:_this.state.currentIssue,decision:null};_this.setState({historic:_this.state.historic.concat(historicElement)});}});};_this.manageMethod=function(decision,method){var newHistoric=_this.state.historic.slice();newHistoric[newHistoric.length-1].decision=decision;_this.setState({historic:newHistoric});var historicElement={method:method,checked:false};_this.setState({historic:_this.state.historic.concat(historicElement)});};_this.checkedMethod=function(method,checked){var index;_this.state.historic.forEach(function(element){if('method'in element){if(element.method.ID_Methode===method.ID_Methode){index=_this.state.historic.indexOf(element);}}});var historicElement={method:method,checked:checked};var newHistoric=_this.state.historic.slice();newHistoric[index]=historicElement;_this.setState({historic:newHistoric});};_this.checkMethod=function(decision){if(decision){var method=_this.state.tree.methodes.find(function(methode){return methode.ID_Decision===decision.ID_Decision;});if(method){_this.setState({currentMethod:method});return method;}}};_this.backOut=function(ID,type){// si on retroune a une question\nif(type==='issue'){// si au moment ou on retourne on est sur une méthode\nif(_this.state.currentMethod){_this.setState({currentMethod:null},function(){_this.backIssue(ID);});}else{_this.backIssue(ID);}}else{// si on retourne a une méthode\n// let index =  this.state.historic.indexOf(this.state.historic.find(el => el.method));\nvar index;_this.state.historic.forEach(function(element){if('method'in element){if(element.method.ID_Methode===ID){index=_this.state.historic.indexOf(element);}}});var decisionBeforeMethod=_this.state.historic[index-1].decision;_this.state.historic.length=index;_this.setState({step:index});_this.changeData(decisionBeforeMethod.ID_Critere_sortant,decisionBeforeMethod,null,false);}};_this.backIssue=function(ID){var index;_this.changeData(ID,null,null,false);_this.state.historic.forEach(function(element){if('issue'in element){if(element.issue.ID_Critere===ID){index=_this.state.historic.indexOf(element);}}});// let index =  this.state.historic.indexOf(this.state.historic.find(el => el.issue.ID_Critere === ID));\n_this.state.historic.length=index+1;_this.state.historic[index].decision=null;_this.setState({step:index+1});};_this.manageHistoric=function(){var decision=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var oldIssue=arguments.length>1?arguments[1]:undefined;// si nous ne somme aps sur une méthode\n_this.state.historic.forEach(function(element){if('issue'in element){if(element.issue.ID_Critere===oldIssue.ID_Critere){element.decision=decision;}}});// on ajoute le nouveau critère sans décision dans l'historique\nvar historicElement={issue:_this.state.currentIssue,decision:null};_this.setState({historic:_this.state.historic.concat(historicElement)});};_this.resumeQuiz=function(){_this.setState({currentMethod:null},function(){_this.changeData(_this.state.checkedDecision.ID_Critere_sortant,null,null,false,true);});};_this.state={tree:null,checkedDecision:null,currentMethod:null,currentIssue:null,currentDecisions:[],historic:[],step:0};// this.componentDidMount = this.componentDidMount.bind(this);\nreturn _this;}// met a jour le questionnaire\n// historic : met a jour l'historique normalement\n// editHistoric : met a jour artificiellement quand on est sur une méthode (arret du flux)\n_createClass(Quiz,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;if(!this.state.tree){axios.get(url+'/Projet_TER/API/Controllers/lireArbre.php').then(function(response){_this2.setState({tree:response.data});_this2.changeData(response.data.entree[0].ID_Critere);}).catch(function(error){return console.log(error);});}}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Quiz\",children:[this.state.currentMethod?/*#__PURE__*/_jsx(Method,{method:this.state.currentMethod,checkedDecision:this.state.checkedDecision,changeData:this.changeData,resumeQuiz:this.resumeQuiz,checkedMethod:this.checkedMethod,historic:this.state}):/*#__PURE__*/_jsx(Issues,{issue:this.state.currentIssue,decisions:this.state.currentDecisions,changeData:this.changeData,step:this.state.step}),/*#__PURE__*/_jsx(Historic,{historic:this.state.historic,backOut:this.backOut})]});}}]);return Quiz;}(React.Component);export default Quiz;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Quiz.js"],"names":["React","axios","Issues","Historic","Method","Quiz","props","changeData","nextIssueId","decision","allChoices","historic","editHistoric","setState","checkedDecision","method","checkMethod","manageMethod","restart","forEach","element","state","tree","decisions","find","el","ID_Decision","ID_Critere_sortant","step","manageStoreData","history","push","pathname","issue","criteres","critere","ID_Critere","filter","ID_Critere_entrant","oldIssue","currentIssue","currentDecisions","manageHistoric","historicElement","concat","newHistoric","slice","length","checked","checkedMethod","index","ID_Methode","indexOf","methodes","methode","currentMethod","backOut","ID","type","backIssue","decisionBeforeMethod","resumeQuiz","protocol","window","location","host","hostname","url","get","then","response","data","entree","catch","error","console","log","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nimport Issues from '../components/quiz/issues';\r\nimport Historic from '../components/quiz/historic';\r\nimport Method from '../components/quiz/method';\r\n\r\n\r\nexport class Quiz extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tree: null,\r\n            checkedDecision: null,\r\n            currentMethod: null,\r\n            currentIssue: null,\r\n            currentDecisions: [],\r\n            historic: [],\r\n            step: 0        \r\n        };\r\n        // this.componentDidMount = this.componentDidMount.bind(this);\r\n    }\r\n\r\n    // met a jour le questionnaire\r\n    // historic : met a jour l'historique normalement\r\n    // editHistoric : met a jour artificiellement quand on est sur une méthode (arret du flux)\r\n    changeData = (nextIssueId, decision = null, allChoices = null, historic = true, editHistoric = false) => {\r\n        // ID de la prochaine question\r\n        this.setState({checkedDecision: decision});\r\n\r\n        //  Vérifie si la décision renvoie une méthode\r\n        let method = this.checkMethod(decision);\r\n\r\n        if(method){\r\n            this.manageMethod(decision, method);\r\n        } else {\r\n            // si ID prochaine question pas égal a 0 on récupère info\r\n            if(nextIssueId !== 0){\r\n                if(allChoices){\r\n                    // si on est sur le critère de fin et qu'on continue, on reinitialise l'historique\r\n                    let restart;\r\n                    allChoices.forEach(element => {\r\n                        let decision = this.state.tree.decisions.find(el => el.ID_Decision === element);\r\n                        if(decision.ID_Critere_sortant === null){\r\n                            restart = true;\r\n                        }\r\n                    });\r\n\r\n                    if(restart){\r\n                        this.setState({\r\n                            historic: [],\r\n                            step: 0,\r\n                        }, () => {\r\n                            this.manageStoreData(nextIssueId, decision, historic, editHistoric);\r\n                        });\r\n                    } else {\r\n                        this.manageStoreData(nextIssueId, decision, historic, editHistoric);\r\n                    }\r\n                } else {\r\n                    this.manageStoreData(nextIssueId, decision, historic, editHistoric);\r\n                }\r\n            }else {\r\n                this.props.history.push({\r\n                    pathname: '/summary',\r\n                    state: { historic: this.state.historic }\r\n                })            \r\n            }\r\n        }\r\n    }\r\n\r\n    manageStoreData = (nextIssueId, decision, historic, editHistoric) => {\r\n        // on va chercher la prochaine question et réponses\r\n        let issue = this.state.tree.criteres.find(critere => critere.ID_Critere === nextIssueId);\r\n        let decisions =  this.state.tree.decisions.filter(decision => decision.ID_Critere_entrant === issue.ID_Critere);\r\n        let oldIssue = this.state.currentIssue;\r\n        this.setState({\r\n            currentIssue: issue,\r\n            currentDecisions: decisions,\r\n            step: this.state.step + 1\r\n        }, () => {\r\n            // on met a jour l'historique\r\n            if(historic){\r\n                this.manageHistoric(decision, oldIssue)\r\n            }\r\n            if(editHistoric){\r\n                let historicElement = {\r\n                    issue: this.state.currentIssue,\r\n                    decision: null\r\n                }\r\n                this.setState({historic: this.state.historic.concat(historicElement)});  \r\n            }\r\n        });    \r\n    }\r\n\r\n    // on ajoute la méthode dans l'historique\r\n    manageMethod = (decision, method) => {\r\n        let newHistoric = this.state.historic.slice();\r\n        newHistoric[newHistoric.length - 1].decision = decision;\r\n        this.setState({historic: newHistoric}); \r\n\r\n        let historicElement = {\r\n            method: method,\r\n            checked: false\r\n        }\r\n        this.setState({historic: this.state.historic.concat(historicElement)}); \r\n    }\r\n\r\n    checkedMethod = (method, checked) => {\r\n        let index;\r\n        this.state.historic.forEach(element => {\r\n            if('method' in element){\r\n                if(element.method.ID_Methode === method.ID_Methode){\r\n                    index = this.state.historic.indexOf(element);\r\n                }\r\n            }\r\n        });\r\n        let historicElement = {\r\n            method: method,\r\n            checked: checked\r\n        }\r\n        let newHistoric = this.state.historic.slice();\r\n        newHistoric[index] = historicElement;\r\n        this.setState({historic: newHistoric}); \r\n    }\r\n\r\n    // on regarde si une méthode est associé a la décision prise\r\n    checkMethod = (decision) => {\r\n        if(decision){\r\n            let method = this.state.tree.methodes.find(methode => methode.ID_Decision === decision.ID_Decision);\r\n            if(method){\r\n                this.setState({currentMethod: method});\r\n                return method;\r\n            }\r\n        }\r\n    }\r\n\r\n    // on retourne dans l'historique \r\n    backOut = (ID, type) => {\r\n        // si on retroune a une question\r\n        if(type === 'issue'){\r\n            // si au moment ou on retourne on est sur une méthode\r\n            if(this.state.currentMethod){\r\n                this.setState({currentMethod: null}, () => {\r\n                    this.backIssue(ID);\r\n                })\r\n            } else {\r\n                this.backIssue(ID);\r\n            }\r\n        } else {\r\n            // si on retourne a une méthode\r\n            // let index =  this.state.historic.indexOf(this.state.historic.find(el => el.method));\r\n            let index;\r\n            this.state.historic.forEach(element => {\r\n                if('method' in element){\r\n                    if(element.method.ID_Methode === ID){\r\n                        index = this.state.historic.indexOf(element);\r\n                    }\r\n                }\r\n            });\r\n            let decisionBeforeMethod = this.state.historic[index - 1].decision;   \r\n            this.state.historic.length = index;\r\n            this.setState({step: index});\r\n            this.changeData(decisionBeforeMethod.ID_Critere_sortant, decisionBeforeMethod, null, false);\r\n        }\r\n    }\r\n\r\n    // on rebind les bonne data en fonction de l'ID du critère sélectionné dans l'historique\r\n    backIssue = (ID) => {\r\n        let index;\r\n        this.changeData(ID, null, null, false);\r\n        this.state.historic.forEach(element => {\r\n            if('issue' in element){\r\n                if(element.issue.ID_Critere === ID){\r\n                    index = this.state.historic.indexOf(element);\r\n                }\r\n            }\r\n        });\r\n        // let index =  this.state.historic.indexOf(this.state.historic.find(el => el.issue.ID_Critere === ID));\r\n        this.state.historic.length = index + 1;\r\n        this.state.historic[index].decision = null;\r\n        this.setState({step: index + 1});\r\n    }\r\n\r\n    // on gère l'historique\r\n    manageHistoric = (decision = null, oldIssue) => {\r\n        // si nous ne somme aps sur une méthode\r\n        this.state.historic.forEach(element => {\r\n            if('issue' in element){\r\n                if(element.issue.ID_Critere === oldIssue.ID_Critere){\r\n                    element.decision = decision;\r\n                }\r\n            }\r\n        });\r\n\r\n        // on ajoute le nouveau critère sans décision dans l'historique\r\n        let historicElement = {\r\n            issue: this.state.currentIssue,\r\n            decision: null\r\n        }\r\n        this.setState({historic: this.state.historic.concat(historicElement)}); \r\n    }\r\n\r\n    // on reprend le questionnaire la ou on en était depuis une méthode\r\n    resumeQuiz = () => {\r\n        this.setState({currentMethod: null}, () => {\r\n            this.changeData(this.state.checkedDecision.ID_Critere_sortant, null, null, false, true);\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n\r\n        if(!this.state.tree){\r\n            axios.get(url + '/Projet_TER/API/Controllers/lireArbre.php')\r\n            .then(response => {\r\n                this.setState({tree: response.data});\r\n                this.changeData(response.data.entree[0].ID_Critere);\r\n            })\r\n            .catch(error => console.log(error))\r\n        }\r\n    };\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"Quiz\">\r\n                {this.state.currentMethod\r\n                    ? <Method method={this.state.currentMethod}\r\n                        checkedDecision={this.state.checkedDecision}\r\n                        changeData={this.changeData}  \r\n                        resumeQuiz={this.resumeQuiz} \r\n                        checkedMethod={this.checkedMethod}\r\n                        historic={this.state}\r\n                    />\r\n                    :<Issues issue={this.state.currentIssue} \r\n                        decisions={this.state.currentDecisions} \r\n                        changeData={this.changeData}\r\n                        step={this.state.step}\r\n                    />\r\n                }\r\n                <Historic historic={this.state.historic} \r\n                    backOut={this.backOut}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Quiz;\r\n"]},"metadata":{},"sourceType":"module"}