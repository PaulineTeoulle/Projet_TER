{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\views\\\\FileUpload.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        id_methode: {\n          \"id_methode\": event.target.value\n        }\n      }, function () {\n        console.log(this.state.id_methode);\n        this.show.bind(this);\n      }); //this.setState({id_methode: {\"id_methode\": event.target.value}});\n      //console.log(this.state.id_methode);\n    };\n\n    this.open = () => {\n      let protocol = window.location.protocol;\n      let host = window.location.hostname;\n      let url = protocol + '//' + host;\n      let dynamicPdf = 'ExamenIHM_CorentinRoy.pdf';\n      window.open(url + '/Projet_TER/src/public/documentsRessources/' + dynamicPdf);\n    };\n\n    this.state = {\n      file: null,\n      datas: null,\n      id_methode: null,\n      isShowed: false,\n      staticLink: 'http://localhost/reactTest/MATUI/src/public/documentsRessources/ExamenIHM_CorentinRoy.pdf'\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    let res = await this.uploadFile(this.state.file);\n    console.log(res.data);\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return await axios.post('http://localhost/reactTest/MATUI/API/Controllers/uploadFile.php', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n  }\n\n  show() {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n\n    if (this.state.datas === null && this.state.id_methode !== null) {\n      const json = JSON.stringify(this.state.id_methode);\n      axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json).then(response => {\n        this.setState({\n          datas: response.data['Ressources']\n        }, function () {\n          this.setState({\n            isShowed: true\n          });\n        });\n      }).catch(error => console.log(error));\n    }\n\n    this.setState({\n      isShowed: true\n    });\n  }\n\n  componentDidMount() {// let protocol = window.location.protocol;\n    // let host = window.location.hostname;\n    // let url = protocol + '//' + host;\n    // if (this.state.datas === null) {\n    //     const json = JSON.stringify(this.state.id_methode);\n    //     axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\n    //         .then(response => {\n    //             this.setState({datas: response.data});\n    //         })\n    //         .catch(error => console.log(error))\n    // }\n  }\n\n  render() {\n    if (this.state.datas !== null) console.log(this.state.datas);else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.handleChange.bind(this),\n          type: \"number\",\n          id: \"name\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onChange: this.handleChange.bind(this),\n          onSubmit: this.show.bind(this),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            id: \"name\",\n            name: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"  \", this.state.datas.map(data => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: data.Nom\n          }, data, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 54\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \" React File Upload Example\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: this.onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Upload File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: this.handleChange.bind(this),\n        onSubmit: this.show.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"name\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: this.state.staticLink,\n        children: \"open pdf (statick link)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: this.open,\n        children: \"open pdf (function dynamic link)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"  \", this.state.datas.map(data => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: data.Nom\n        }, data, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 46\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 22\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/FileUpload.js"],"names":["React","axios","FileUpload","Component","constructor","props","handleChange","event","setState","id_methode","target","value","console","log","state","show","bind","open","protocol","window","location","host","hostname","url","dynamicPdf","file","datas","isShowed","staticLink","onSubmit","onChange","uploadFile","e","preventDefault","res","data","files","formData","FormData","append","post","headers","json","JSON","stringify","then","response","catch","error","componentDidMount","render","map","Nom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\n\r\nclass FileUpload extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            datas: null,\r\n            id_methode: null,\r\n            isShowed: false,\r\n            staticLink: 'http://localhost/reactTest/MATUI/src/public/documentsRessources/ExamenIHM_CorentinRoy.pdf'\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.uploadFile = this.uploadFile.bind(this)\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault()\r\n        let res = await this.uploadFile(this.state.file);\r\n        console.log(res.data);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({file: e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({id_methode: {\"id_methode\": event.target.value}}, function () {\r\n            console.log(this.state.id_methode);\r\n            this.show.bind(this);\r\n        });\r\n        //this.setState({id_methode: {\"id_methode\": event.target.value}});\r\n        //console.log(this.state.id_methode);\r\n    };\r\n\r\n    async uploadFile(file) {\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        return await axios.post('http://localhost/reactTest/MATUI/API/Controllers/uploadFile.php', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n\r\n    open = () => {\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        let dynamicPdf = 'ExamenIHM_CorentinRoy.pdf';\r\n        window.open(url + '/Projet_TER/src/public/documentsRessources/' + dynamicPdf);\r\n    }\r\n\r\n    show() {\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        if (this.state.datas === null && this.state.id_methode !== null) {\r\n            const json = JSON.stringify(this.state.id_methode);\r\n            axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\r\n                .then(response => {\r\n                    this.setState({datas: response.data['Ressources']}, function () {\r\n                        this.setState({isShowed: true})\r\n                    });\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n        this.setState({isShowed: true});\r\n    }\r\n\r\n    componentDidMount() {\r\n        // let protocol = window.location.protocol;\r\n        // let host = window.location.hostname;\r\n        // let url = protocol + '//' + host;\r\n        // if (this.state.datas === null) {\r\n        //     const json = JSON.stringify(this.state.id_methode);\r\n        //     axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\r\n        //         .then(response => {\r\n        //             this.setState({datas: response.data});\r\n        //         })\r\n        //         .catch(error => console.log(error))\r\n        // }\r\n    };\r\n\r\n    render() {\r\n        if (this.state.datas !== null) console.log(this.state.datas);\r\n        else return (<div>\r\n            <form>\r\n                <input onChange={this.handleChange.bind(this)} type=\"number\" id=\"name\" name=\"name\"/>\r\n            </form>\r\n            <div>\r\n                <form onChange={this.handleChange.bind(this)} onSubmit={this.show.bind(this)}>\r\n                    <input type=\"number\" id=\"name\" name=\"name\"/>\r\n\r\n                </form>\r\n\r\n                <br/>\r\n\r\n                <div>  {this.state.datas.map(data => <p key={data}>{data.Nom}</p>)}</div>\r\n            </div>\r\n\r\n\r\n        <form onSubmit={this.onSubmit}>\r\n            <h1> React File Upload Example</h1>\r\n            <input type=\"file\" onChange={this.onChange}/>\r\n            <button type=\"submit\">Upload File</button>\r\n        </form>\r\n\r\n        <form onChange={this.handleChange.bind(this)} onSubmit={this.show.bind(this)}>\r\n            <input type=\"number\" id=\"name\" name=\"name\"/>\r\n\r\n        </form>\r\n\r\n        <br/>\r\n        <a href={this.state.staticLink}>open pdf (statick link)</a>\r\n        <br/>\r\n        <p onClick={this.open}>open pdf (function dynamic link)</p>\r\n        <div>  {this.state.datas.map(data => <p key={data}>{data.Nom}</p>)}</div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}