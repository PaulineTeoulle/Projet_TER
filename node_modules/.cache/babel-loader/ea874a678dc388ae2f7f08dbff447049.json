{"ast":null,"code":"import _slicedToArray from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import'./App.scss';import React,{useState}from'react';import{BrowserRouter as Router,Redirect,Route,Switch}from'react-router-dom';import Home from'./views/Home';import Quiz from'./views/Quiz';import Tree from'./views/Tree';import Users from'./views/Users';import FileUpload from'./views/FileUpload';import Summary from'./views/Summary';import Warning from'./components/Warning';import Login from'./views/Login';import Register from'./views/Register';import Nav from'./components/Nav';import Auth from\"./contexts/Auth\";import AuthenticatedRoute from\"./components/AuthenticatedRoute\";import{hasAuthenticated,isUser}from\"./services/AuthApi\";/**\r\n * @Goal : Router : change the browser URL and return the right component\r\n * @UsedByModule : index.js\r\n * @ModuleUsed : Home, Quiz, Summary, Login, Register, Tree, Users\r\n * @VisibleVariables :\r\n * @VisibleProcedures :\r\n * @returns {JSX.Element} the right component depending on browser URL\r\n */import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){/**\r\n     * Setup state for auth and role\r\n     */var _useState=useState(hasAuthenticated()),_useState2=_slicedToArray(_useState,2),isAuthenticated=_useState2[0],setIsAuthenticated=_useState2[1];var _useState3=useState(isUser()),_useState4=_slicedToArray(_useState3,2),userRole=_useState4[0],setUserRole=_useState4[1];/**\r\n     * Render the right component according to state\r\n     */return/*#__PURE__*/ (//Provider to share state to all levels\n_jsx(Auth.Provider,{value:{isAuthenticated:isAuthenticated,setIsAuthenticated:setIsAuthenticated,userRole:userRole,setUserRole:setUserRole},children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(Nav,{}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,component:Home}),/*#__PURE__*/_jsx(Route,{path:\"/quiz\",exact:true,component:Quiz}),/*#__PURE__*/_jsx(Route,{path:\"/summary\",exact:true,component:Summary}),/*#__PURE__*/_jsx(Route,{path:\"/login\",exact:true,component:Login}),/*#__PURE__*/_jsx(Route,{path:\"/register\",exact:true,component:Register}),/*#__PURE__*/_jsx(AuthenticatedRoute,{path:\"/manageTree\",component:Tree}),/*#__PURE__*/_jsx(AuthenticatedRoute,{path:\"/manageUsers\",component:Users}),/*#__PURE__*/_jsx(AuthenticatedRoute,{path:\"/fileUpload\",component:FileUpload}),/*#__PURE__*/_jsx(Redirect,{to:\"/\"}),\" \"]})]}),/*#__PURE__*/_jsx(Warning,{})]})}));}export default App;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/App.js"],"names":["React","useState","BrowserRouter","Router","Redirect","Route","Switch","Home","Quiz","Tree","Users","FileUpload","Summary","Warning","Login","Register","Nav","Auth","AuthenticatedRoute","hasAuthenticated","isUser","App","isAuthenticated","setIsAuthenticated","userRole","setUserRole"],"mappings":"+IAAA,MAAO,YAAP,CACA,MAAOA,CAAAA,KAAP,EAAeC,QAAf,KAA8B,OAA9B,CACA,OAAQC,aAAa,GAAIC,CAAAA,MAAzB,CAAiCC,QAAjC,CAA2CC,KAA3C,CAAkDC,MAAlD,KAA+D,kBAA/D,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,IAAP,KAAiB,cAAjB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iBAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,CACA,MAAOC,CAAAA,KAAP,KAAkB,eAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,kBAArB,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,iBAAjB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,iCAA/B,CACA,OAAQC,gBAAR,CAA0BC,MAA1B,KAAuC,oBAAvC,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G,wFACA,QAASC,CAAAA,GAAT,EAAe,CAEX;AACJ;AACA,OACI,cAA8CpB,QAAQ,CAACkB,gBAAgB,EAAjB,CAAtD,wCAAOG,eAAP,eAAwBC,kBAAxB,eACA,eAAgCtB,QAAQ,CAACmB,MAAM,EAAP,CAAxC,yCAAOI,QAAP,eAAiBC,WAAjB,eAEA;AACJ;AACA,OACI,oBACI;AACA,KAAC,IAAD,CAAM,QAAN,EAAe,KAAK,CAAE,CAClBH,eAAe,CAAfA,eADkB,CACDC,kBAAkB,CAAlBA,kBADC,CACmBC,QAAQ,CAARA,QADnB,CAC6BC,WAAW,CAAXA,WAD7B,CAAtB,uBAGI,MAAC,MAAD,yBACI,aAAK,SAAS,CAAC,KAAf,wBACI,KAAC,GAAD,IADJ,cAEI,MAAC,MAAD,yBACI,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,CAAsB,SAAS,CAAElB,IAAjC,EADJ,cAEI,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,CAAoB,KAAK,KAAzB,CAA0B,SAAS,CAAEC,IAArC,EAFJ,cAGI,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,CAAuB,KAAK,KAA5B,CAA6B,SAAS,CAAEI,OAAxC,EAHJ,cAII,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,CAAqB,KAAK,KAA1B,CAA2B,SAAS,CAAEE,KAAtC,EAJJ,cAKI,KAAC,KAAD,EAAO,IAAI,CAAC,WAAZ,CAAwB,KAAK,KAA7B,CAA8B,SAAS,CAAEC,QAAzC,EALJ,cAMI,KAAC,kBAAD,EAAoB,IAAI,CAAC,aAAzB,CAAuC,SAAS,CAAEN,IAAlD,EANJ,cAOI,KAAC,kBAAD,EAAoB,IAAI,CAAC,cAAzB,CAAwC,SAAS,CAAEC,KAAnD,EAPJ,cAQI,KAAC,kBAAD,EAAoB,IAAI,CAAC,aAAzB,CAAuC,SAAS,CAAEC,UAAlD,EARJ,cASI,KAAC,QAAD,EAAU,EAAE,CAAC,GAAb,EATJ,OAFJ,GADJ,cAeI,KAAC,OAAD,IAfJ,GAHJ,EAFJ,EAwBH,CAED,cAAeU,CAAAA,GAAf","sourcesContent":["import './App.scss';\r\nimport React, {useState} from 'react';\r\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\r\nimport Home from './views/Home';\r\nimport Quiz from './views/Quiz';\r\nimport Tree from './views/Tree';\r\nimport Users from './views/Users';\r\nimport FileUpload from './views/FileUpload';\r\nimport Summary from './views/Summary';\r\nimport Warning from './components/Warning'\r\nimport Login from './views/Login';\r\nimport Register from './views/Register';\r\nimport Nav from './components/Nav';\r\nimport Auth from \"./contexts/Auth\"\r\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\r\nimport {hasAuthenticated, isUser} from \"./services/AuthApi\";\r\n\r\n/**\r\n * @Goal : Router : change the browser URL and return the right component\r\n * @UsedByModule : index.js\r\n * @ModuleUsed : Home, Quiz, Summary, Login, Register, Tree, Users\r\n * @VisibleVariables :\r\n * @VisibleProcedures :\r\n * @returns {JSX.Element} the right component depending on browser URL\r\n */\r\nfunction App() {\r\n\r\n    /**\r\n     * Setup state for auth and role\r\n     */\r\n    const [isAuthenticated, setIsAuthenticated] = useState(hasAuthenticated());\r\n    const [userRole, setUserRole] = useState(isUser());\r\n\r\n    /**\r\n     * Render the right component according to state\r\n     */\r\n    return (\r\n        //Provider to share state to all levels\r\n        <Auth.Provider value={{\r\n            isAuthenticated, setIsAuthenticated, userRole, setUserRole\r\n        }}>\r\n            <Router>\r\n                <div className=\"App\">\r\n                    <Nav/>\r\n                    <Switch>\r\n                        <Route path=\"/\" exact component={Home}/>\r\n                        <Route path=\"/quiz\" exact component={Quiz}/>\r\n                        <Route path=\"/summary\" exact component={Summary}/>\r\n                        <Route path=\"/login\" exact component={Login}/>\r\n                        <Route path=\"/register\" exact component={Register}/>\r\n                        <AuthenticatedRoute path=\"/manageTree\" component={Tree}/>\r\n                        <AuthenticatedRoute path=\"/manageUsers\" component={Users}/>\r\n                        <AuthenticatedRoute path=\"/fileUpload\" component={FileUpload}/>\r\n                        <Redirect to=\"/\"/> {/* Redirect to home when invalid url */}\r\n                    </Switch>\r\n                </div>\r\n                <Warning/>\r\n            </Router>\r\n        </Auth.Provider>\r\n    )\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}