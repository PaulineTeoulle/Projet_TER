{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\views\\\\Home.js\",\n    _s = $RefreshSig$();\n\nimport Loader from \"../components/Loader\";\nimport logo from \"../public/logothedre.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPen } from \"@fortawesome/free-solid-svg-icons\";\nimport ModalEditHome from \"../components/modal/ModalEditHome\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Auth from \"../contexts/Auth\";\nimport { useHistory } from 'react-router-dom';\nimport axios from \"axios\";\n/**\r\n * @Goal : Render home, open modal to edit description, call to api to edit\r\n * @UsedByModule : App.js\r\n * @ModuleUsed : Loader, ModalEditHome\r\n * @VisibleVariables :\r\n * @VisibleProcedures :\r\n * @returns {JSX.Element}\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  /**\r\n   * Setup state for role, description, newDescription, modalOpen\r\n   */\n  const [description, setDescription] = useState(null);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newDescription, setNewDescription] = useState(null);\n  const {\n    userRole,\n    setUserRole\n  } = useContext(Auth);\n  const history = useHistory();\n  /**\r\n   * Call API to update description\r\n   */\n\n  function getHomeContent() {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n\n    if (description === null) {\n      axios.get(url + '/Projet_TER/API/Controllers/accueil/lire.php').then(response => {\n        setDescription(response.data['description']);\n      }).catch(error => console.log(error));\n    }\n  }\n  /**\r\n   * Effect before render\r\n   */\n\n\n  useEffect(() => {\n    getHomeContent();\n  });\n  /**\r\n   * Set boolean modalOpen to true\r\n   */\n\n  function handleOpen() {\n    setModalOpen(true);\n  }\n  /**\r\n   * Set boolean modalOpen to false\r\n   */\n\n\n  function handleClose() {\n    setModalOpen(false);\n  }\n  /**\r\n   * Update newDescription with param description\r\n   * @param description the new description\r\n   */\n\n\n  function handleChange(description) {\n    setNewDescription(description);\n  }\n  /**\r\n   * Call to API to edit description\r\n   */\n\n\n  function edit() {\n    if (newDescription !== null) {\n      let data = JSON.stringify({\n        description: newDescription\n      });\n      let protocol = window.location.protocol;\n      let host = window.location.hostname;\n      let url = protocol + '//' + host;\n      axios.put(url + '/Projet_TER/API/Controllers/accueil/modifier.php', data).then(() => {\n        axios.get(url + '/Projet_TER/API/Controllers/accueil/lire.php').then(response => {\n          setDescription(response.data['description']);\n        }).catch(error => console.log(error));\n        handleClose();\n      }).catch(function (erreur) {\n        console.log(erreur);\n      });\n    }\n\n    handleClose();\n  }\n  /**\r\n   * Redirect to quiz component\r\n   */\n\n\n  const redirect = () => {\n    history.push('/quiz');\n  };\n  /**\r\n   * Return Loader if description is not set\r\n   */\n\n\n  if (description === null) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 39\n  }, this);\n  /**\r\n   * Return content if description is set, contains ModalEditHome\r\n   */\n  else return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Home\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          alt: 'Logo Thedre'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button filled\",\n          onClick: redirect,\n          children: \"Start\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Contents\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this), userRole === \"administrator\" && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"icon\",\n            icon: faPen,\n            onClick: handleOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 57\n          }, this), userRole === \"super-admin\" && /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"icon\",\n            icon: faPen,\n            onClick: handleOpen\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 55\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(ModalEditHome, {\n          title: \"Modify description\",\n          message: \"Please modify\",\n          oldDescription: description,\n          actionButton: \"Confirm\",\n          closeButton: \"Quit\",\n          open: modalOpen,\n          close: handleClose,\n          mainAction: edit,\n          changeAction: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this);\n}\n\n_s(Home, \"MK6L8+X4iwDCysjmjtnNWfsW94A=\", false, function () {\n  return [useHistory];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Home.js"],"names":["Loader","logo","FontAwesomeIcon","faPen","ModalEditHome","React","useContext","useEffect","useState","Auth","useHistory","axios","Home","description","setDescription","modalOpen","setModalOpen","newDescription","setNewDescription","userRole","setUserRole","history","getHomeContent","protocol","window","location","host","hostname","url","get","then","response","data","catch","error","console","log","handleOpen","handleClose","handleChange","edit","JSON","stringify","put","erreur","redirect","push"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,SAAQC,KAAR,QAAoB,mCAApB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAOC,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,IAAT,GAAgB;AAAA;;AACZ;AACJ;AACA;AACI,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM;AAACW,IAAAA,QAAD;AAAWC,IAAAA;AAAX,MAA0Bd,UAAU,CAACG,IAAD,CAA1C;AACA,QAAMY,OAAO,GAAGX,UAAU,EAA1B;AAEA;AACJ;AACA;;AACI,WAASY,cAAT,GAA0B;AACtB,QAAIC,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAA/B;AACA,QAAIG,IAAI,GAAGF,MAAM,CAACC,QAAP,CAAgBE,QAA3B;AACA,QAAIC,GAAG,GAAGL,QAAQ,GAAG,IAAX,GAAkBG,IAA5B;;AAEA,QAAIb,WAAW,KAAK,IAApB,EAA0B;AACtBF,MAAAA,KAAK,CAACkB,GAAN,CAAUD,GAAG,GAAG,8CAAhB,EACKE,IADL,CACUC,QAAQ,IAAI;AACdjB,QAAAA,cAAc,CAACiB,QAAQ,CAACC,IAAT,CAAc,aAAd,CAAD,CAAd;AACH,OAHL,EAIKC,KAJL,CAIWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJpB;AAKH;AACJ;AAED;AACJ;AACA;;;AACI3B,EAAAA,SAAS,CAAC,MAAM;AACZe,IAAAA,cAAc;AACjB,GAFQ,CAAT;AAKA;AACJ;AACA;;AACI,WAASe,UAAT,GAAsB;AAClBrB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;AAED;AACJ;AACA;;;AACI,WAASsB,WAAT,GAAuB;AACnBtB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACH;AAED;AACJ;AACA;AACA;;;AACI,WAASuB,YAAT,CAAsB1B,WAAtB,EAAmC;AAC/BK,IAAAA,iBAAiB,CAACL,WAAD,CAAjB;AACH;AAED;AACJ;AACA;;;AACI,WAAS2B,IAAT,GAAgB;AACZ,QAAIvB,cAAc,KAAK,IAAvB,EAA6B;AACzB,UAAIe,IAAI,GAAGS,IAAI,CAACC,SAAL,CAAe;AAAC7B,QAAAA,WAAW,EAAEI;AAAd,OAAf,CAAX;AACA,UAAIM,QAAQ,GAAGC,MAAM,CAACC,QAAP,CAAgBF,QAA/B;AACA,UAAIG,IAAI,GAAGF,MAAM,CAACC,QAAP,CAAgBE,QAA3B;AACA,UAAIC,GAAG,GAAGL,QAAQ,GAAG,IAAX,GAAkBG,IAA5B;AACAf,MAAAA,KAAK,CAACgC,GAAN,CAAUf,GAAG,GAAE,kDAAf,EAAkEI,IAAlE,EACKF,IADL,CACU,MAAM;AACRnB,QAAAA,KAAK,CAACkB,GAAN,CAAUD,GAAG,GAAE,8CAAf,EACKE,IADL,CACUC,QAAQ,IAAI;AACdjB,UAAAA,cAAc,CAACiB,QAAQ,CAACC,IAAT,CAAc,aAAd,CAAD,CAAd;AACH,SAHL,EAIKC,KAJL,CAIWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAJpB;AAKAI,QAAAA,WAAW;AACd,OARL,EASKL,KATL,CASW,UAAUW,MAAV,EAAkB;AACrBT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,MAAZ;AACH,OAXL;AAYH;;AACDN,IAAAA,WAAW;AACd;AAED;AACJ;AACA;;;AACI,QAAMO,QAAQ,GAAG,MAAM;AACnBxB,IAAAA,OAAO,CAACyB,IAAR,CAAa,OAAb;AACH,GAFD;AAIA;AACJ;AACA;;;AACI,MAAIjC,WAAW,KAAK,IAApB,EAA0B,oBAAQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAR;AAC1B;AACJ;AACA;AAHI,OAIK,oBACD;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEZ,IAAV;AAAgB,UAAA,GAAG,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,eAAlB;AAAkC,UAAA,OAAO,EAAE4C,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAGK1B,QAAQ,KAAK,eAAb,iBAAmC,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,MAA3B;AAAkC,YAAA,IAAI,EAAEhB,KAAxC;AAA+C,YAAA,OAAO,EAAEkC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAHxC,EAIKlB,QAAQ,KAAK,aAAb,iBAAiC,QAAC,eAAD;AAAiB,YAAA,SAAS,EAAC,MAA3B;AAAkC,YAAA,IAAI,EAAEhB,KAAxC;AAA+C,YAAA,OAAO,EAAEkC;AAAxD;AAAA;AAAA;AAAA;AAAA,kBAJtC;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAA,oBAAIxB;AAAJ;AAAA;AAAA;AAAA;AAAA,gBARJ,eASI,QAAC,aAAD;AACI,UAAA,KAAK,EAAC,oBADV;AAEI,UAAA,OAAO,EAAC,eAFZ;AAGI,UAAA,cAAc,EAAEA,WAHpB;AAII,UAAA,YAAY,EAAC,SAJjB;AAKI,UAAA,WAAW,EAAC,MALhB;AAMI,UAAA,IAAI,EAAEE,SANV;AAOI,UAAA,KAAK,EAAEuB,WAPX;AAQI,UAAA,UAAU,EAAEE,IARhB;AASI,UAAA,YAAY,EAAED;AATlB;AAAA;AAAA;AAAA;AAAA,gBATJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADC;AA6BR;;GA7HQ3B,I;UAQWF,U;;;KARXE,I;AA8HT,eAAeA,IAAf","sourcesContent":["import Loader from \"../components/Loader\";\r\nimport logo from \"../public/logothedre.png\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faPen} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ModalEditHome from \"../components/modal/ModalEditHome\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Auth from \"../contexts/Auth\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from \"axios\";\r\n\r\n/**\r\n * @Goal : Render home, open modal to edit description, call to api to edit\r\n * @UsedByModule : App.js\r\n * @ModuleUsed : Loader, ModalEditHome\r\n * @VisibleVariables :\r\n * @VisibleProcedures :\r\n * @returns {JSX.Element}\r\n */\r\nfunction Home() {\r\n    /**\r\n     * Setup state for role, description, newDescription, modalOpen\r\n     */\r\n    const [description, setDescription] = useState(null);\r\n    const [modalOpen, setModalOpen] = useState(false);\r\n    const [newDescription, setNewDescription] = useState(null);\r\n    const {userRole, setUserRole} = useContext(Auth);\r\n    const history = useHistory();\r\n\r\n    /**\r\n     * Call API to update description\r\n     */\r\n    function getHomeContent() {\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n\r\n        if (description === null) {\r\n            axios.get(url + '/Projet_TER/API/Controllers/accueil/lire.php')\r\n                .then(response => {\r\n                    setDescription(response.data['description']);\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Effect before render\r\n     */\r\n    useEffect(() => {\r\n        getHomeContent();\r\n    });\r\n\r\n\r\n    /**\r\n     * Set boolean modalOpen to true\r\n     */\r\n    function handleOpen() {\r\n        setModalOpen(true);\r\n    }\r\n\r\n    /**\r\n     * Set boolean modalOpen to false\r\n     */\r\n    function handleClose() {\r\n        setModalOpen(false);\r\n    }\r\n\r\n    /**\r\n     * Update newDescription with param description\r\n     * @param description the new description\r\n     */\r\n    function handleChange(description) {\r\n        setNewDescription(description);\r\n    }\r\n\r\n    /**\r\n     * Call to API to edit description\r\n     */\r\n    function edit() {\r\n        if (newDescription !== null) {\r\n            let data = JSON.stringify({description: newDescription});\r\n            let protocol = window.location.protocol;\r\n            let host = window.location.hostname;\r\n            let url = protocol + '//' + host;\r\n            axios.put(url +'/Projet_TER/API/Controllers/accueil/modifier.php',data)\r\n                .then(() => {\r\n                    axios.get(url+ '/Projet_TER/API/Controllers/accueil/lire.php')\r\n                        .then(response => {\r\n                            setDescription(response.data['description']);\r\n                        })\r\n                        .catch(error => console.log(error))\r\n                    handleClose();\r\n                })\r\n                .catch(function (erreur) {\r\n                    console.log(erreur);\r\n                });\r\n        }\r\n        handleClose();\r\n    }\r\n\r\n    /**\r\n     * Redirect to quiz component\r\n     */\r\n    const redirect = () => {\r\n        history.push('/quiz')\r\n    }\r\n\r\n    /**\r\n     * Return Loader if description is not set\r\n     */\r\n    if (description === null) return (<Loader/>);\r\n    /**\r\n     * Return content if description is set, contains ModalEditHome\r\n     */\r\n    else return (\r\n        <div className=\"Home\">\r\n            <div className=\"logo\">\r\n                <img src={logo} alt={'Logo Thedre'}/>\r\n                <button className=\"button filled\" onClick={redirect}>Start</button>\r\n            </div>\r\n            <div className=\"content\">\r\n                <div className=\"title\">\r\n                    <h3>Contents</h3>\r\n                    {/*<FontAwesomeIcon className=\"icon\" icon={faPen} onClick={handleOpen}/>*/}\r\n                    {userRole === \"administrator\"  && ( <FontAwesomeIcon className=\"icon\" icon={faPen} onClick={handleOpen}/>)}\r\n                    {userRole === \"super-admin\"  && ( <FontAwesomeIcon className=\"icon\" icon={faPen} onClick={handleOpen}/>)}\r\n                </div>\r\n\r\n                <p>{description}</p>\r\n                <ModalEditHome\r\n                    title=\"Modify description\"\r\n                    message=\"Please modify\"\r\n                    oldDescription={description}\r\n                    actionButton=\"Confirm\"\r\n                    closeButton=\"Quit\"\r\n                    open={modalOpen}\r\n                    close={handleClose}\r\n                    mainAction={edit}\r\n                    changeAction={handleChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}