{"ast":null,"code":"import _toConsumableArray from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/wamp64/www/Projet_TER/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useState,useEffect}from'react';import $,{get}from'jquery';import axios from'axios';import ReactFlow,{addEdge,ReactFlowProvider,removeElements}from'react-flow-renderer';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt}from'@fortawesome/free-solid-svg-icons';import Loader from'../components/Loader';import Toolbar from'../components/Toolbar';import CustomNode from'../components/tree/CustomNode';import DebugNode from'../components/tree/DebugNode';import ModalEditCritere from'../components/modal/tree/ModalEditCritere';import ModalEditEdge from'../components/modal/tree/ModalEditEdge';import ModalEditMethod from'../components/modal/tree/ModalEditMethod';import ModalEditEndNode from'../components/modal/tree/ModalEditEndNode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Tree(){var nodeTypes={critereNode:CustomNode,debugNode:DebugNode};var colors=['black','marron','blue','red','purple','fushia','green','lime','yellow','navy','aqua','aquamarine','chocolate','coral','crimson','darkcyan','darkgreen','darkorange','darkseagreen','deeppink','gold','indgo','lightcoral'];var _useState=useState(null),_useState2=_slicedToArray(_useState,2),initialTree=_useState2[0],setInitialTree=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),resources=_useState4[0],setResources=_useState4[1];var _useState5=useState(\"1\"),_useState6=_slicedToArray(_useState5,2),nextId=_useState6[0],setNextId=_useState6[1];var _useState7=useState(\"D1\"),_useState8=_slicedToArray(_useState7,2),nextEdgeId=_useState8[0],setNextEdgeId=_useState8[1];var _useState9=useState(\"M1\"),_useState10=_slicedToArray(_useState9,2),nextMethodId=_useState10[0],setNextMethodId=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),elements=_useState12[0],setElements=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),remove=_useState14[0],setRemove=_useState14[1];var _useState15=useState(null),_useState16=_slicedToArray(_useState15,2),errorMessage=_useState16[0],setErrorMessage=_useState16[1];var reactFlowWrapper=useRef(null);var _useState17=useState(null),_useState18=_slicedToArray(_useState17,2),reactFlowInstance=_useState18[0],setReactFlowInstance=_useState18[1];var onElementsRemove=function onElementsRemove(elementsToRemove){return setElements(function(els){return removeElements(elementsToRemove,els);});};var onConnect=function onConnect(params){return setElements(function(els){return addEdge(_objectSpread(_objectSpread({},params),{},{id:getEdgeId(),arrowHeadType:'arrowclosed',label:'',type:'smoothstep'}),els,setNextEdgeId(\"D\"+(parseInt(nextEdgeId.slice(1))+1).toString()));});};// HOOKS REACT-FLOW\nvar onDragOver=function onDragOver(event){event.preventDefault();event.dataTransfer.dropEffect='move';};var onDrop=function onDrop(event){event.preventDefault();//check if input/output already exists\nvar type=event.dataTransfer.getData('application/reactflow');if(type!=null&&type==\"input\"||type==\"output\"){if(checkExist(type)){return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \"+type);}}var reactFlowBounds=reactFlowWrapper.current.getBoundingClientRect();var toolbarWidth=$('aside').width();var position=reactFlowInstance.project({x:event.clientX-toolbarWidth,y:event.clientY-reactFlowBounds.top});createNode(type,position);};var onElementClick=function onElementClick(event,element){if(!remove){switch(element.type){case'critereNode':openModalEditCritere(element);break;case'default':openModalEditMethod(element);break;case'smoothstep':openModalEditEdge(element);break;case'input':alert(\"Cannot modify start node\");break;case'output':openModalEditEndNode(element);break;}}else{if(element.type!=\"smoothstep\"){var edges=elements.filter(function(item){return item.type===\"smoothstep\";});var attachedEdges=edges.filter(function(item){return item.source===element.id||item.target===element.id;});if(attachedEdges.length>0){alert(\"You must remove all edges from this element\");}else{deleteElement(element);}}else{deleteElement(element);}}};var onPaneClick=function onPaneClick(event){event.preventDefault();};// FUNCTIONS\n// return les prochains ID utilisable\nfunction getId(){return nextId;}function getEdgeId(){return nextEdgeId;}function getMethodId(){return nextMethodId;}/*\r\n    crée un noeud de type :\r\n        - input\r\n        - output\r\n        - default (method)\r\n        - critereNode (critere)\r\n\r\n    parametres :\r\n        - type : type du noeud\r\n        - position : position du client si noeud créer via toolbar ou position x et y stocké en bd\r\n        - data : toutes les data du noeud de la BD, si noeud créer via toolbar le label et générer par défault\r\n    */function createNode(type,position,data){var newNode;switch(type){case'input':// noeud entree\nnewNode={id:\"0\",type:type,position:position,data:{label:\"\".concat(type,\" node\")}};break;case'output':// noeud sortie\nnewNode={id:\"S0\",type:type,position:position,data:{label:\"\".concat(type,\" node\"),message:data.Message?data.Message:null}};break;case'critereNode':// noeud critere\nif(data){newNode={id:data.ID_Critere,type:type,position:position,data:{label:data.Libelle,informations:data.Informations?data.Informations:null}};if(data.ID_Critere>getId()){setNextId((parseInt(data.ID_Critere)+1).toString());}}else{newNode={id:getId(),type:type,position:position,data:{label:\"\".concat(type,\" node\")}};setNextId((parseInt(nextId)+1).toString());}break;case'default':// noeud methode\nif(data){newNode={id:\"M\"+data.ID_Methode,type:type,position:position,data:{label:data.Libelle,description:data.Description,productedData:data.Donnees_produites,workforce:data.Effectif_preconise,method:data.Type_methode,analysis:data.Type_analyse,exemple:data.Exemple}};if(parseInt(data.ID_Methode)>getMethodId().slice(1)){setNextMethodId(\"M\"+(parseInt(data.ID_Methode)+1).toString());}}else{newNode={id:getMethodId(),type:type,position:position,data:{label:\"\".concat(type,\" node\")}};setNextMethodId(\"M\"+(parseInt(getMethodId().slice(1))+1).toString());}break;}// insertion du noeud dans les elements react flow render\nsetElements(function(es){return es.concat(newNode);});}// crée un lien entre 2 noeuds\nfunction createEdge(id,id_source,id_target,label,color){var newEdge={id:id,source:id_source,target:id_target,type:'smoothstep',arrowHeadType:'arrowclosed',label:label,style:{stroke:color}};setElements(function(es){return es.concat(newEdge);});if(id.substring(0,2)!=\"DM\"){if(parseInt(id.slice(1))>getEdgeId().slice(1)){setNextEdgeId(\"D\"+(parseInt(id.slice(1))+1).toString());}}}// check if a node type already exists\nfunction checkExist(type){if(elements){for(var i=0;i<elements.length;i++){if(elements[i].type==type){return true;}}return false;}else{return true;}}// gestion de la supression\nfunction deleteMode(){remove?setRemove(false):setRemove(true);}function deleteElement(element){var selectedElement=elements.find(function(el){return el.id===element.id;});var index=elements.indexOf(selectedElement);setElements(elements.filter(function(item){return elements.indexOf(item)!==index;}));}useEffect(function(){if(remove){$(\".canvas\").css(\"border\",\"2px solid #f54748\");}else{$(\".canvas\").css(\"border\",\"1px solid var(--light-grey)\");}},[remove]);// INIT TREE\n// initialise le noeud de debut et le premier critere pour commencer\nfunction initTree(){var startNode=initialTree.entree[0];createNode('input',{x:parseInt(startNode.x),y:parseInt(startNode.y)});var firstNode=initialTree.criteres.find(function(el){return el.ID_Critere===initialTree.entree[0].ID_Critere;});//console.log(firstNode);\ncreateNode('critereNode',{x:parseInt(firstNode.x),y:parseInt(firstNode.y)},firstNode);createEdge('D0','0',firstNode.ID_Critere,null);var endNode=initialTree.sortie[0];createNode('output',{x:parseInt(endNode.x),y:parseInt(endNode.y)},endNode);initNodes(initialTree.entree[0].ID_Critere);}// initilialise critère, méthodes et décisiosn depuis le premier critère\nfunction initNodes(start){initialTree.criteres.forEach(function(node){var color=colors[0];colors.splice(0,1);if(node.ID_Critere!==start){createNode('critereNode',{x:parseInt(node.x),y:parseInt(node.y)},node);}// on récupère les décisions attaché au critère et on regarde si un méthode est attaché\nvar decisions=getDecisions(node.ID_Critere);decisions.forEach(function(decision){var method=getMethod(decision);if(method){createNode('default',{x:parseInt(method.x),y:parseInt(method.y)},method);createEdge(\"D\"+decision.ID_Decision,node.ID_Critere,\"M\"+method.ID_Methode,decision.Libelle,color);createEdge(\"DM\"+decision.ID_Decision,\"M\"+method.ID_Methode,decision.ID_Critere_sortant,null,color);}else{if(decision.ID_Critere_sortant){createEdge(\"D\"+decision.ID_Decision,decision.ID_Critere_entrant,decision.ID_Critere_sortant,decision.Libelle,color);}else{createEdge(\"D\"+decision.ID_Decision,decision.ID_Critere_entrant,\"S0\",decision.Libelle,color);}}});});}// retourne les décisions d'un noeud\nfunction getDecisions(nodeId){var decisions=initialTree.decisions.filter(function(decision){return decision.ID_Critere_entrant===nodeId;});return decisions;}// retourne la méthode d'un décision si elle existe\nfunction getMethod(decision){var method=initialTree.methodes.find(function(method){return method.ID_Decision===decision.ID_Decision;});return method;}function initResources(){var resources=[];initialTree.methodesRessources.forEach(function(element){var resource=initialTree.ressources.filter(function(item){return item.ID_Ressource===element.ID_Ressource;});var method=initialTree.methodes.find(function(item){return item.ID_Methode===element.ID_Methode;});resources[method.ID_Methode]?resources[method.ID_Methode].push(resource[0]):resources[method.ID_Methode]=[resource[0]];});setResources(resources);}// récupère l'arbre a l'initialisation du composant\nuseEffect(function(){if(!initialTree){var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;axios.get(url+'/API/Controllers/lireArbre.php').then(function(response){setInitialTree(response.data);}).catch(function(error){return console.log(error);});}},[]);// quand l'arbre et chargé et si il possède une entree on lance la création de l'arbre visuel\nuseEffect(function(){if(initialTree&&initialTree.entree.length){initTree();initResources();}},[initialTree]);// RECONSTRUCTION DE L'ARBRE\nuseEffect(function(){if(errorMessage){alert(errorMessage);}},[errorMessage]);/*\r\n    types :\r\n        - input (start node)\r\n        - output (end node)\r\n        - default (node)\r\n        - smoothstep (edge)\r\n    */function printNodes(){var flow=reactFlowInstance.toObject();var finalTree={criteres:[],methodes:[],decisions:[],entree:[],sortie:[]};flow.elements.forEach(function(element){var transformedElement;switch(element.type){case'critereNode':transformedElement=transformToCritere(element);finalTree.criteres.push(transformedElement);break;case'default':transformedElement=transformToMethod(element,flow);finalTree.methodes.push(transformedElement);break;case'smoothstep':if(element.label){transformedElement=transformToDecision(element,flow);finalTree.decisions.push(transformedElement);}break;case'input':transformedElement=transformToEntree(element,flow);finalTree.entree.push(transformedElement);break;case'output':transformedElement=transformToSortie(element);finalTree.sortie.push(transformedElement);break;}});var error=checkTree(finalTree);if(!error){var protocol=window.location.protocol;var host=window.location.hostname;var url=protocol+'//'+host;axios.post(url+'/API/Controllers/creerArbre.php',finalTree).then(function(response){console.log(response.data);}).catch(function(error){return console.log(error);});}}function transformToCritere(element){var critere={ID_Critere:element.id,Libelle:element.data.label,Informations:element.data.informations?element.data.informations:null,x:element.position.x,y:element.position.y};return critere;}function transformToMethod(element,flow){var decision=flow.elements.find(function(el){return el.type===\"smoothstep\"&&el.target===element.id;});var method={ID_Method:element.id.slice(1),ID_Decision:decision?decision.id.slice(1):null,Libelle:element.data.label,Description:element.data.description,Donnees_produites:element.data.productedData,Effectif_preconise:element.data.workforce,Exemple:element.data.exemple,Type_analyse:element.data.analysis,Type_methode:element.data.method,x:element.position.x,y:element.position.y};return method;}function transformToDecision(element,flow){var outDecision;if(element.target.includes(\"M\")){outDecision=flow.elements.find(function(el){return el.type===\"smoothstep\"&&el.source===element.target;});// if(!outDecision){\n//     setErrorMessage(\"pb outdecision\");\n// }\n}var decision={ID_Decision:element.id.slice(1),ID_Critere_entrant:element.source,ID_Critere_sortant:outDecision?outDecision.target:element.target,Libelle:element.label};return decision;}function transformToEntree(element,flow){var outDecision=flow.elements.find(function(el){return el.type===\"smoothstep\"&&el.source===element.id;});var startNode={ID_Entree:element.id,ID_Critere:outDecision.target,x:element.position.x,y:element.position.y};return startNode;}function transformToSortie(element){var endNode={ID_Sortie:element.id.slice(1),message:element.data.message,x:element.position.x,y:element.position.y};return endNode;}/*\r\n    l'abre doit :\r\n        - posséder un noeud entree et sortie\r\n        - ne pas posséder d'élements flottant (non relié ou partiellement relié)\r\n        - ne pas posséder d'élements non labellisé excepté les noeud d'entree, sortie,\r\n            liens sortant des méthodes et le lien source du noeud d'entree\r\n    */function checkTree(finalTree){var error=false;if(finalTree.entree.length!=1){setErrorMessage(\"pb entree\");error=true;}else if(finalTree.sortie.length!=1){setErrorMessage(\"pb sortie\");error=true;}if(!error){var floatingNode=checkFloatingNode(finalTree);if(floatingNode){error=true;}}switch(error){case true:return true;case false:return false;}}function checkFloatingNode(finalTree){var condition=true;finalTree.criteres.forEach(function(critere){var outputEdge=null;var inputEdge=null;outputEdge=finalTree.decisions.filter(function(decision){return decision.ID_Critere_entrant===critere.ID_Critere;});inputEdge=finalTree.decisions.filter(function(decision){return decision.ID_Critere_sortant===critere.ID_Critere;});if(!inputEdge.length){if(finalTree.entree[0].ID_Critere===critere.ID_Critere){inputEdge.push(finalTree.entree[0]);}}if(!inputEdge.length||!outputEdge.length){condition=false;}outputEdge.forEach(function(element){if(element.ID_Critere_sortant.charAt(0)===\"M\"){condition=false;}});});if(!condition){setErrorMessage(\"noeud flottant, check si les edges ont un label et que chaque noeud est relié\");return true;}else{return false;}}// MODAL MANAGEMENT\n// edit critères\nvar _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),modalEditCritereOpen=_useState20[0],setModalEditCritereOpen=_useState20[1];var _useState21=useState(null),_useState22=_slicedToArray(_useState21,2),selectedCritere=_useState22[0],setSelectedCritere=_useState22[1];function openModalEditCritere(element){var critere=elements.find(function(el){return el.id===element.id;});setSelectedCritere(critere);setModalEditCritereOpen(true);}function closeModalEditCritere(){setModalEditCritereOpen(false);}function saveCritere(label,informations){// change les data dans l'instance react flow\nselectedCritere.data.label=label;if(informations){selectedCritere.data.informations=informations;}// force le rendu du noeud\n// l'instance ne se rerender pas si modification dans sous object donc on change position\nselectedCritere.position={x:selectedCritere.position.x,y:selectedCritere.position.y+1};rerenderFlow();}// edit edges\nvar _useState23=useState(false),_useState24=_slicedToArray(_useState23,2),modalEditEdgeOpen=_useState24[0],setModalEditEdgeOpen=_useState24[1];var _useState25=useState(null),_useState26=_slicedToArray(_useState25,2),selectedEdge=_useState26[0],setSelectedEdge=_useState26[1];function openModalEditEdge(element){var edge=elements.find(function(el){return el.id===element.id;});setSelectedEdge(edge);setModalEditEdgeOpen(true);}function closeModalEditEdge(){setModalEditEdgeOpen(false);}function saveEdge(label){selectedEdge.label=label;rerenderFlow();}// edit method\nvar _useState27=useState(false),_useState28=_slicedToArray(_useState27,2),modalEditMethodOpen=_useState28[0],setModalEditMethodOpen=_useState28[1];var _useState29=useState(null),_useState30=_slicedToArray(_useState29,2),selectedMethod=_useState30[0],setSelectedMethod=_useState30[1];function openModalEditMethod(element){var method=elements.find(function(el){return el.id===element.id;});setSelectedMethod(method);setModalEditMethodOpen(true);}function closeModalEditMethod(){setModalEditMethodOpen(false);}function saveMethod(newData){// change les data dans l'instance react flow\nselectedMethod.data.label=newData.label;selectedMethod.data.description=newData.description;selectedMethod.data.productedData=newData.productedData;selectedMethod.data.workforce=newData.workforce;selectedMethod.data.method=newData.method;selectedMethod.data.analysis=newData.analysis;selectedMethod.data.exemple=newData.exemple;// force le rendu du noeud\n// l'instance ne se rerender pas si modification dans sous object donc on change position\nselectedMethod.position={x:selectedMethod.position.x,y:selectedMethod.position.y+1};rerenderFlow();}// edit noeud de fin\nvar _useState31=useState(false),_useState32=_slicedToArray(_useState31,2),modalEditEndNodeOpen=_useState32[0],setModalEditEndNodeOpen=_useState32[1];var _useState33=useState(null),_useState34=_slicedToArray(_useState33,2),selectedEndNode=_useState34[0],setSelectedEndNode=_useState34[1];function openModalEditEndNode(element){var endNode=elements.find(function(el){return el.id===element.id;});setSelectedEndNode(endNode);setModalEditEndNodeOpen(true);}function closeModalEditEndNode(){setModalEditEndNodeOpen(false);}function saveEndNode(message){// change les data dans l'instance react flow\nselectedEndNode.data.message=message;// force le rendu du noeud\n// l'instance ne se rerender pas si modification dans sous object donc on change position\nselectedEndNode.position={x:selectedEndNode.position.x,y:selectedEndNode.position.y+1};rerenderFlow();}// FORCE RERENDER\nfunction rerenderFlow(){var cloneElements=_toConsumableArray(elements);setElements(cloneElements);}return/*#__PURE__*/_jsx(\"div\",{className:\"Tree\",children:elements?/*#__PURE__*/_jsxs(ReactFlowProvider,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"reactflow-wrapper\",ref:reactFlowWrapper,children:[/*#__PURE__*/_jsx(Toolbar,{className:\"tools\",save:printNodes}),/*#__PURE__*/_jsx(\"div\",{className:\"canvas\",children:/*#__PURE__*/_jsx(ReactFlow,{elements:elements,nodeTypes:nodeTypes,onElementsRemove:onElementsRemove,onConnect:onConnect,deleteKeyCode:46,onLoad:setReactFlowInstance,onDrop:onDrop,onDragOver:onDragOver,onElementClick:onElementClick,onPaneClick:onPaneClick})}),/*#__PURE__*/_jsx(FontAwesomeIcon,{onClick:function onClick(){return deleteMode();},className:\"icon delete\",icon:faTrashAlt})]}),/*#__PURE__*/_jsx(ModalEditCritere,{title:\"Edit critere\",open:modalEditCritereOpen,close:closeModalEditCritere,mainAction:saveCritere,selectedCritere:selectedCritere}),/*#__PURE__*/_jsx(ModalEditEdge,{title:\"Edit Edge\",open:modalEditEdgeOpen,close:closeModalEditEdge,mainAction:saveEdge,selectedEdge:selectedEdge}),/*#__PURE__*/_jsx(ModalEditMethod,{title:\"Edit Method\",open:modalEditMethodOpen,close:closeModalEditMethod,mainAction:saveMethod,selectedMethod:selectedMethod,resources:resources}),/*#__PURE__*/_jsx(ModalEditEndNode,{title:\"Edit End node\",open:modalEditEndNodeOpen,close:closeModalEditEndNode,mainAction:saveEndNode,selectedEndNode:selectedEndNode})]}):/*#__PURE__*/_jsx(Loader,{})});}export default Tree;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Tree.js"],"names":["React","useRef","useState","useEffect","$","get","axios","ReactFlow","addEdge","ReactFlowProvider","removeElements","FontAwesomeIcon","faTrashAlt","Loader","Toolbar","CustomNode","DebugNode","ModalEditCritere","ModalEditEdge","ModalEditMethod","ModalEditEndNode","Tree","nodeTypes","critereNode","debugNode","colors","initialTree","setInitialTree","resources","setResources","nextId","setNextId","nextEdgeId","setNextEdgeId","nextMethodId","setNextMethodId","elements","setElements","remove","setRemove","errorMessage","setErrorMessage","reactFlowWrapper","reactFlowInstance","setReactFlowInstance","onElementsRemove","elementsToRemove","els","onConnect","params","id","getEdgeId","arrowHeadType","label","type","parseInt","slice","toString","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","getData","checkExist","alert","reactFlowBounds","current","getBoundingClientRect","toolbarWidth","width","position","project","x","clientX","y","clientY","top","createNode","onElementClick","element","openModalEditCritere","openModalEditMethod","openModalEditEdge","openModalEditEndNode","edges","filter","item","attachedEdges","source","target","length","deleteElement","onPaneClick","getId","getMethodId","data","newNode","message","Message","ID_Critere","Libelle","informations","Informations","ID_Methode","description","Description","productedData","Donnees_produites","workforce","Effectif_preconise","method","Type_methode","analysis","Type_analyse","exemple","Exemple","es","concat","createEdge","id_source","id_target","color","newEdge","style","stroke","substring","i","deleteMode","selectedElement","find","el","index","indexOf","css","initTree","startNode","entree","firstNode","criteres","endNode","sortie","initNodes","start","forEach","node","splice","decisions","getDecisions","decision","getMethod","ID_Decision","ID_Critere_sortant","ID_Critere_entrant","nodeId","methodes","initResources","methodesRessources","resource","ressources","ID_Ressource","push","protocol","window","location","host","hostname","url","then","response","catch","error","console","log","printNodes","flow","toObject","finalTree","transformedElement","transformToCritere","transformToMethod","transformToDecision","transformToEntree","transformToSortie","checkTree","post","critere","ID_Method","outDecision","includes","ID_Entree","ID_Sortie","floatingNode","checkFloatingNode","condition","outputEdge","inputEdge","charAt","modalEditCritereOpen","setModalEditCritereOpen","selectedCritere","setSelectedCritere","closeModalEditCritere","saveCritere","rerenderFlow","modalEditEdgeOpen","setModalEditEdgeOpen","selectedEdge","setSelectedEdge","edge","closeModalEditEdge","saveEdge","modalEditMethodOpen","setModalEditMethodOpen","selectedMethod","setSelectedMethod","closeModalEditMethod","saveMethod","newData","modalEditEndNodeOpen","setModalEditEndNodeOpen","selectedEndNode","setSelectedEndNode","closeModalEditEndNode","saveEndNode","cloneElements"],"mappings":"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","sourcesContent":["import React, {useRef, useState, useEffect} from 'react';\r\nimport $, { get } from 'jquery';\r\nimport axios from 'axios';\r\nimport ReactFlow, {addEdge, ReactFlowProvider, removeElements} from 'react-flow-renderer';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Loader from '../components/Loader';\r\nimport Toolbar from '../components/Toolbar';\r\nimport CustomNode from '../components/tree/CustomNode';\r\nimport DebugNode from '../components/tree/DebugNode';\r\n\r\nimport ModalEditCritere from '../components/modal/tree/ModalEditCritere';\r\nimport ModalEditEdge from '../components/modal/tree/ModalEditEdge';\r\nimport ModalEditMethod from '../components/modal/tree/ModalEditMethod';\r\nimport ModalEditEndNode from '../components/modal/tree/ModalEditEndNode';\r\n\r\nfunction Tree() {\r\n    const nodeTypes = {\r\n        critereNode: CustomNode,\r\n        debugNode: DebugNode\r\n    };\r\n\r\n    const colors = ['black', 'marron', 'blue', 'red', 'purple', 'fushia', 'green', 'lime', 'yellow',\r\n'navy', 'aqua', 'aquamarine', 'chocolate', 'coral', 'crimson', 'darkcyan', 'darkgreen', 'darkorange', 'darkseagreen',\r\n'deeppink', 'gold', 'indgo', 'lightcoral'];\r\n\r\n    const [initialTree, setInitialTree] = useState(null);\r\n    const [resources, setResources] = useState(null);\r\n    const [nextId, setNextId] = useState(\"1\");\r\n    const [nextEdgeId, setNextEdgeId] = useState(\"D1\");\r\n    const [nextMethodId, setNextMethodId] = useState(\"M1\");\r\n    const [elements, setElements] = useState([]);\r\n    const [remove, setRemove] = useState(false);\r\n\r\n    const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n    const reactFlowWrapper = useRef(null);\r\n    const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n    const onElementsRemove = (elementsToRemove) => setElements((els) => removeElements(elementsToRemove, els));\r\n    const onConnect = (params) => setElements((els) => addEdge({\r\n        ...params,\r\n        id: getEdgeId(), arrowHeadType: 'arrowclosed', label: '', type: 'smoothstep',\r\n    }, els, setNextEdgeId(\"D\" + (parseInt(nextEdgeId.slice(1)) + 1).toString())));\r\n\r\n    // HOOKS REACT-FLOW\r\n\r\n    const onDragOver = (event) => {\r\n        event.preventDefault();\r\n        event.dataTransfer.dropEffect = 'move';\r\n    };\r\n\r\n    const onDrop = (event) => {\r\n        event.preventDefault();\r\n\r\n        //check if input/output already exists\r\n        const type = event.dataTransfer.getData('application/reactflow');\r\n        if (type!= null && type == \"input\" || type == \"output\") {\r\n            if (checkExist(type)) {\r\n                return alert(\"Désolé, il ne peut y avoir qu'un seul noeud de type \" + type)\r\n            }\r\n        }\r\n\r\n        const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n        let toolbarWidth = $('aside').width();\r\n        const position = reactFlowInstance.project({\r\n            x: event.clientX - toolbarWidth,\r\n            y: event.clientY - reactFlowBounds.top,\r\n        });\r\n        createNode(type, position);\r\n    };\r\n\r\n    const onElementClick = (event, element) => {\r\n        if(!remove){\r\n            switch (element.type) {\r\n                case 'critereNode':\r\n                    openModalEditCritere(element);\r\n                    break;\r\n                case 'default':\r\n                    openModalEditMethod(element);\r\n                    break;\r\n                case 'smoothstep':\r\n                    openModalEditEdge(element);\r\n                    break;\r\n                case 'input':\r\n                    alert(\"Cannot modify start node\")\r\n                    break;\r\n                case 'output':\r\n                    openModalEditEndNode(element);\r\n                    break;\r\n            }\r\n        } else {\r\n            if(element.type != \"smoothstep\"){\r\n                let edges = elements.filter(item => item.type === \"smoothstep\");\r\n                let attachedEdges = edges.filter(item => item.source === element.id || item.target === element.id );\r\n                if(attachedEdges.length > 0){\r\n                    alert(\"You must remove all edges from this element\")\r\n                } else {\r\n                    deleteElement(element); \r\n                }\r\n            } else {\r\n                deleteElement(element); \r\n            }\r\n        }\r\n    }\r\n\r\n    const onPaneClick = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    // FUNCTIONS\r\n\r\n    // return les prochains ID utilisable\r\n    function getId() {\r\n        return nextId;\r\n    }\r\n\r\n    function getEdgeId() {\r\n        return nextEdgeId;\r\n    }\r\n\r\n    function getMethodId() {\r\n        return nextMethodId;\r\n    }\r\n\r\n    /*\r\n    crée un noeud de type :\r\n        - input\r\n        - output\r\n        - default (method)\r\n        - critereNode (critere)\r\n\r\n    parametres :\r\n        - type : type du noeud\r\n        - position : position du client si noeud créer via toolbar ou position x et y stocké en bd\r\n        - data : toutes les data du noeud de la BD, si noeud créer via toolbar le label et générer par défault\r\n    */\r\n    function createNode(type, position, data) {\r\n        let newNode;\r\n        switch (type) {\r\n            case 'input':\r\n                // noeud entree\r\n                newNode = {\r\n                    id: \"0\",\r\n                    type,\r\n                    position,\r\n                    data: {label: `${type} node`},\r\n                };\r\n                break;\r\n            case 'output':\r\n                // noeud sortie\r\n                newNode = {\r\n                    id: \"S0\",\r\n                    type,\r\n                    position,\r\n                    data: {\r\n                        label: `${type} node`,\r\n                        message: (data.Message ? data.Message : null)\r\n                    },\r\n                };\r\n                break;\r\n            case 'critereNode':\r\n                // noeud critere\r\n                if(data){\r\n                    newNode = {\r\n                        id: data.ID_Critere,\r\n                        type,\r\n                        position,\r\n                        data: {\r\n                            label: data.Libelle,\r\n                            informations: (data.Informations ? data.Informations : null)\r\n                        },\r\n                    };\r\n                    if(data.ID_Critere > getId()){\r\n                        setNextId((parseInt(data.ID_Critere) + 1).toString());\r\n                    }      \r\n                } else {\r\n                    newNode = {\r\n                        id: getId(),\r\n                        type,\r\n                        position,\r\n                        data: {label: `${type} node`},\r\n                    };\r\n                    setNextId((parseInt(nextId) + 1).toString());\r\n                }\r\n                break;\r\n            case 'default':\r\n                // noeud methode\r\n                if(data){\r\n                    newNode = {\r\n                        id: \"M\" + data.ID_Methode,\r\n                        type,\r\n                        position,\r\n                        data: {\r\n                            label: data.Libelle,\r\n                            description: data.Description,\r\n                            productedData: data.Donnees_produites,\r\n                            workforce: data.Effectif_preconise,\r\n                            method: data.Type_methode,\r\n                            analysis: data.Type_analyse,\r\n                            exemple: data.Exemple\r\n                        },\r\n                    };\r\n                    if(parseInt(data.ID_Methode) > getMethodId().slice(1)){\r\n                        setNextMethodId(\"M\" + (parseInt(data.ID_Methode) + 1).toString());\r\n                    }               \r\n                } else {\r\n                    newNode = {\r\n                        id: getMethodId(),\r\n                        type,\r\n                        position,\r\n                        data: {label: `${type} node`},\r\n                    };\r\n                    setNextMethodId(\"M\" + (parseInt(getMethodId().slice(1)) + 1).toString());\r\n                }\r\n                break;\r\n        }\r\n        // insertion du noeud dans les elements react flow render\r\n        setElements((es) => es.concat(newNode));\r\n    }\r\n    \r\n    // crée un lien entre 2 noeuds\r\n    function createEdge(id, id_source, id_target, label, color){\r\n        let newEdge = {\r\n            id: id,\r\n            source: id_source,\r\n            target: id_target,\r\n            type: 'smoothstep',\r\n            arrowHeadType: 'arrowclosed',\r\n            label: label,\r\n            style: { stroke: color },\r\n        }\r\n        setElements((es) => es.concat(newEdge));\r\n        if(id.substring(0, 2) != \"DM\"){\r\n            if(parseInt(id.slice(1)) > getEdgeId().slice(1)){\r\n                setNextEdgeId(\"D\" + (parseInt(id.slice(1)) + 1).toString());\r\n            }\r\n        }    \r\n    }\r\n\r\n    // check if a node type already exists\r\n    function checkExist(type) {\r\n        if(elements){\r\n            for (let i = 0; i < elements.length; i++) {\r\n                if (elements[i].type == type) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    // gestion de la supression\r\n    function deleteMode(){\r\n        remove ? setRemove(false) : setRemove(true);\r\n    }\r\n\r\n    function deleteElement(element){\r\n            let selectedElement = elements.find(el => el.id === element.id);\r\n            let index = elements.indexOf(selectedElement);\r\n            setElements(elements.filter(item => elements.indexOf(item) !== index))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(remove){\r\n            $(\".canvas\").css(\"border\", \"2px solid #f54748\");\r\n        } else {\r\n            $(\".canvas\").css(\"border\", \"1px solid var(--light-grey)\");\r\n        }\r\n    },[remove]);\r\n\r\n    // INIT TREE\r\n\r\n    // initialise le noeud de debut et le premier critere pour commencer\r\n    function initTree(){\r\n        let startNode = initialTree.entree[0];\r\n        createNode('input', {x: parseInt(startNode.x), y: parseInt(startNode.y)});\r\n        let firstNode = initialTree.criteres.find(el => el.ID_Critere === initialTree.entree[0].ID_Critere);\r\n        //console.log(firstNode);\r\n        createNode('critereNode', {x: parseInt(firstNode.x), y: parseInt(firstNode.y)}, firstNode);\r\n        createEdge('D0' ,'0', firstNode.ID_Critere, null);\r\n\r\n        let endNode = initialTree.sortie[0];\r\n        createNode('output',  {x: parseInt(endNode.x), y: parseInt(endNode.y)}, endNode);\r\n\r\n        initNodes(initialTree.entree[0].ID_Critere);\r\n    }\r\n\r\n    // initilialise critère, méthodes et décisiosn depuis le premier critère\r\n    function initNodes(start){\r\n        initialTree.criteres.forEach(node => {\r\n            let color = colors[0]\r\n            colors.splice(0, 1);\r\n            if(node.ID_Critere !== start){\r\n                createNode('critereNode',  {x: parseInt(node.x), y: parseInt(node.y)}, node)\r\n            }\r\n            // on récupère les décisions attaché au critère et on regarde si un méthode est attaché\r\n            let decisions = getDecisions(node.ID_Critere);\r\n            decisions.forEach(decision => {\r\n                let method = getMethod(decision);\r\n                if(method){\r\n                    createNode('default',  {x: parseInt(method.x), y: parseInt(method.y)}, method);\r\n                    createEdge(\"D\" + decision.ID_Decision ,node.ID_Critere, \"M\" + method.ID_Methode, decision.Libelle, color);\r\n                    createEdge(\"DM\" + decision.ID_Decision, \"M\" + method.ID_Methode, decision.ID_Critere_sortant, null, color);\r\n                } else {\r\n                    if(decision.ID_Critere_sortant){\r\n                        createEdge(\"D\" + decision.ID_Decision, decision.ID_Critere_entrant, decision.ID_Critere_sortant, decision.Libelle, color);\r\n                    } else {\r\n                        createEdge(\"D\" + decision.ID_Decision, decision.ID_Critere_entrant, \"S0\", decision.Libelle, color);\r\n                    }\r\n                }\r\n            })                \r\n        });\r\n    }\r\n\r\n    // retourne les décisions d'un noeud\r\n    function getDecisions(nodeId){\r\n        let decisions =  initialTree.decisions.filter(decision => decision.ID_Critere_entrant === nodeId);\r\n        return decisions;\r\n    }\r\n\r\n    // retourne la méthode d'un décision si elle existe\r\n    function getMethod(decision){\r\n        let method =  initialTree.methodes.find(method => method.ID_Decision === decision.ID_Decision);\r\n        return method;\r\n    }\r\n\r\n    function initResources(){\r\n        let resources = [];\r\n        initialTree.methodesRessources.forEach(element => {\r\n            let resource = initialTree.ressources.filter(item => item.ID_Ressource === element.ID_Ressource);\r\n            let method = initialTree.methodes.find(item => item.ID_Methode === element.ID_Methode);\r\n            resources[method.ID_Methode] ? resources[method.ID_Methode].push(resource[0]): resources[method.ID_Methode] = [resource[0]]; \r\n        })\r\n        setResources(resources);\r\n    }\r\n\r\n    // récupère l'arbre a l'initialisation du composant\r\n    useEffect(() => {\r\n        if(!initialTree){\r\n            let protocol = window.location.protocol;\r\n            let host = window.location.hostname;\r\n            let url = protocol + '//' + host;\r\n                axios.get(url + '/API/Controllers/lireArbre.php')\r\n                .then(response => {\r\n                    setInitialTree(response.data)\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    },[]);\r\n\r\n    // quand l'arbre et chargé et si il possède une entree on lance la création de l'arbre visuel\r\n    useEffect(() => {\r\n        if(initialTree && initialTree.entree.length){\r\n            initTree();\r\n            initResources();\r\n        }\r\n    }, [initialTree]);\r\n\r\n    // RECONSTRUCTION DE L'ARBRE\r\n\r\n    useEffect(() => {\r\n        if(errorMessage){\r\n            alert(errorMessage);\r\n        }\r\n    }, [errorMessage]);\r\n\r\n    /*\r\n    types :\r\n        - input (start node)\r\n        - output (end node)\r\n        - default (node)\r\n        - smoothstep (edge)\r\n    */\r\n    function printNodes() {\r\n        let flow = reactFlowInstance.toObject();\r\n        let finalTree = {\r\n\r\n            criteres: [],\r\n            methodes: [],\r\n            decisions: [],\r\n            entree: [],\r\n            sortie: [],\r\n        };\r\n        flow.elements.forEach(element => {\r\n            let transformedElement;\r\n            switch (element.type) {\r\n                case 'critereNode':\r\n                    transformedElement = transformToCritere(element);\r\n                    finalTree.criteres.push(transformedElement)\r\n                    break;\r\n                case 'default':\r\n                    transformedElement = transformToMethod(element, flow);\r\n                    finalTree.methodes.push(transformedElement)\r\n                    break;\r\n                case 'smoothstep':\r\n                    if(element.label){\r\n                        transformedElement = transformToDecision(element, flow);\r\n                        finalTree.decisions.push(transformedElement)\r\n                    }\r\n                        break;\r\n                case 'input':\r\n                    transformedElement = transformToEntree(element,flow);\r\n                    finalTree.entree.push(transformedElement)\r\n                    break;\r\n                case 'output':\r\n                    transformedElement = transformToSortie(element);\r\n                    finalTree.sortie.push(transformedElement)\r\n                    break;\r\n            }\r\n        })\r\n        \r\n        let error = checkTree(finalTree);\r\n        if(!error){\r\n            let protocol = window.location.protocol;\r\n            let host = window.location.hostname;\r\n            let url = protocol + '//' + host;\r\n                axios.post(url + '/API/Controllers/creerArbre.php', finalTree)\r\n                .then(response => {\r\n                    console.log(response.data)\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    \r\n    function transformToCritere(element){\r\n        let critere = {\r\n            ID_Critere: element.id,\r\n            Libelle: element.data.label,\r\n            Informations: (element.data.informations ? element.data.informations : null),\r\n            x: element.position.x,\r\n            y: element.position.y\r\n        }\r\n        return critere;\r\n    }\r\n\r\n    function transformToMethod(element, flow){\r\n        let decision = flow.elements.find(el => el.type === \"smoothstep\" && el.target === element.id);\r\n        let method = {\r\n            ID_Method: element.id.slice(1),\r\n            ID_Decision: (decision ? decision.id.slice(1) : null),\r\n            Libelle: element.data.label,\r\n            Description: element.data.description,\r\n            Donnees_produites: element.data.productedData,\r\n            Effectif_preconise: element.data.workforce,\r\n            Exemple: element.data.exemple,\r\n            Type_analyse: element.data.analysis,\r\n            Type_methode: element.data.method,\r\n            x: element.position.x,\r\n            y: element.position.y\r\n        }\r\n        return method;\r\n    }\r\n\r\n    function transformToDecision(element, flow){\r\n        let outDecision;\r\n        if(element.target.includes(\"M\")){\r\n            outDecision = flow.elements.find(el => el.type === \"smoothstep\" && el.source === element.target);\r\n            // if(!outDecision){\r\n            //     setErrorMessage(\"pb outdecision\");\r\n            // }\r\n        }\r\n\r\n        let decision = {\r\n            ID_Decision: element.id.slice(1),\r\n            ID_Critere_entrant: element.source,\r\n            ID_Critere_sortant: (outDecision ? outDecision.target : element.target),\r\n            Libelle: element.label,\r\n        }\r\n        return decision;\r\n    }\r\n\r\n    function transformToEntree(element, flow){\r\n        let outDecision = flow.elements.find(el => el.type === \"smoothstep\" && el.source === element.id);\r\n\r\n        let startNode = {\r\n            ID_Entree: element.id,\r\n            ID_Critere: outDecision.target,\r\n            x: element.position.x,\r\n            y: element.position.y\r\n        }\r\n        return startNode;\r\n    }\r\n\r\n    function transformToSortie(element){\r\n        let endNode = {\r\n            ID_Sortie: element.id.slice(1),\r\n            message: element.data.message,\r\n            x: element.position.x,\r\n            y: element.position.y\r\n        }\r\n        return endNode;\r\n    }\r\n\r\n    /*\r\n    l'abre doit :\r\n        - posséder un noeud entree et sortie\r\n        - ne pas posséder d'élements flottant (non relié ou partiellement relié)\r\n        - ne pas posséder d'élements non labellisé excepté les noeud d'entree, sortie,\r\n            liens sortant des méthodes et le lien source du noeud d'entree\r\n    */\r\n    function checkTree(finalTree){\r\n        let error = false;\r\n        if(finalTree.entree.length != 1){\r\n            setErrorMessage(\"pb entree\");\r\n            error = true;\r\n        } else if (finalTree.sortie.length != 1){\r\n            setErrorMessage(\"pb sortie\");\r\n            error = true;\r\n        } \r\n        if(!error){\r\n            let floatingNode = checkFloatingNode(finalTree);\r\n            if(floatingNode){\r\n                error = true;\r\n            }\r\n        }\r\n        \r\n        switch(error){\r\n            case true:\r\n                return true;\r\n            case false:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    function checkFloatingNode(finalTree){\r\n        let condition = true;\r\n        finalTree.criteres.forEach(critere => {\r\n            let outputEdge = null;\r\n            let inputEdge = null;\r\n            outputEdge = finalTree.decisions.filter(decision => decision.ID_Critere_entrant === critere.ID_Critere);\r\n            inputEdge = finalTree.decisions.filter(decision => decision.ID_Critere_sortant === critere.ID_Critere);\r\n\r\n            if(!inputEdge.length){\r\n                if(finalTree.entree[0].ID_Critere === critere.ID_Critere){\r\n                    inputEdge.push(finalTree.entree[0]);\r\n                }\r\n            }\r\n\r\n            if(!inputEdge.length || !outputEdge.length){\r\n                condition = false;\r\n            }\r\n\r\n            outputEdge.forEach(element =>{\r\n                if(element.ID_Critere_sortant.charAt(0) === \"M\"){\r\n                    condition = false;\r\n                }\r\n            })\r\n        })\r\n        if(!condition){\r\n            setErrorMessage(\"noeud flottant, check si les edges ont un label et que chaque noeud est relié\");\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    \r\n    // MODAL MANAGEMENT\r\n\r\n    // edit critères\r\n\r\n    const [modalEditCritereOpen, setModalEditCritereOpen] = useState(false);\r\n    const [selectedCritere, setSelectedCritere] = useState(null);\r\n\r\n    function openModalEditCritere(element) {\r\n        let critere = elements.find(el => el.id === element.id);\r\n        setSelectedCritere(critere);\r\n        setModalEditCritereOpen(true);\r\n    }\r\n\r\n    function closeModalEditCritere(){\r\n        setModalEditCritereOpen(false);\r\n    }\r\n\r\n    function saveCritere(label, informations){\r\n        // change les data dans l'instance react flow\r\n        selectedCritere.data.label = label;\r\n        if(informations){selectedCritere.data.informations = informations;}\r\n\r\n        // force le rendu du noeud\r\n        // l'instance ne se rerender pas si modification dans sous object donc on change position\r\n        selectedCritere.position = {x: selectedCritere.position.x, y: selectedCritere.position.y + 1}\r\n        rerenderFlow();\r\n    }\r\n\r\n    // edit edges\r\n    const [modalEditEdgeOpen, setModalEditEdgeOpen] = useState(false);\r\n    const [selectedEdge, setSelectedEdge] = useState(null);\r\n\r\n    function openModalEditEdge(element) {\r\n        let edge = elements.find(el => el.id === element.id);\r\n        setSelectedEdge(edge);\r\n        setModalEditEdgeOpen(true);\r\n    }\r\n\r\n    function closeModalEditEdge(){\r\n        setModalEditEdgeOpen(false);\r\n    }\r\n\r\n    function saveEdge(label){\r\n        selectedEdge.label = label;\r\n        rerenderFlow();\r\n    }\r\n\r\n    // edit method\r\n\r\n    const [modalEditMethodOpen, setModalEditMethodOpen] = useState(false);\r\n    const [selectedMethod, setSelectedMethod] = useState(null);\r\n\r\n    function openModalEditMethod(element) {\r\n        let method = elements.find(el => el.id === element.id);\r\n        setSelectedMethod(method);\r\n        setModalEditMethodOpen(true);\r\n    }\r\n\r\n    function closeModalEditMethod(){\r\n        setModalEditMethodOpen(false);\r\n    }\r\n\r\n    function saveMethod(newData){\r\n        // change les data dans l'instance react flow\r\n        selectedMethod.data.label = newData.label;\r\n        selectedMethod.data.description = newData.description;\r\n        selectedMethod.data.productedData = newData.productedData;\r\n        selectedMethod.data.workforce = newData.workforce;\r\n        selectedMethod.data.method = newData.method;\r\n        selectedMethod.data.analysis = newData.analysis;\r\n        selectedMethod.data.exemple = newData.exemple;\r\n\r\n        // force le rendu du noeud\r\n        // l'instance ne se rerender pas si modification dans sous object donc on change position\r\n        selectedMethod.position = {x: selectedMethod.position.x, y: selectedMethod.position.y + 1}\r\n        rerenderFlow();\r\n    }\r\n\r\n    // edit noeud de fin\r\n\r\n    const [modalEditEndNodeOpen, setModalEditEndNodeOpen] = useState(false);\r\n    const [selectedEndNode, setSelectedEndNode] = useState(null);\r\n\r\n    function openModalEditEndNode(element) {\r\n        let endNode = elements.find(el => el.id === element.id);\r\n        setSelectedEndNode(endNode);\r\n        setModalEditEndNodeOpen(true);\r\n    }\r\n\r\n    function closeModalEditEndNode(){\r\n        setModalEditEndNodeOpen(false);\r\n    }\r\n\r\n    function saveEndNode(message){\r\n        // change les data dans l'instance react flow\r\n        selectedEndNode.data.message = message;\r\n\r\n        // force le rendu du noeud\r\n        // l'instance ne se rerender pas si modification dans sous object donc on change position\r\n        selectedEndNode.position = {x: selectedEndNode.position.x, y: selectedEndNode.position.y + 1}\r\n        rerenderFlow();\r\n    }\r\n\r\n    // FORCE RERENDER\r\n\r\n    function rerenderFlow(){\r\n        let cloneElements = [...elements];\r\n        setElements(cloneElements);     \r\n    }\r\n\r\n    return (\r\n        <div className=\"Tree\">\r\n            {elements ?\r\n                <ReactFlowProvider>\r\n                    <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n                        <Toolbar className=\"tools\"\r\n                            save={printNodes}\r\n                        />\r\n                        <div className=\"canvas\">\r\n                            <ReactFlow\r\n                                elements={elements}\r\n                                nodeTypes={nodeTypes}\r\n                                onElementsRemove={onElementsRemove}\r\n                                onConnect={onConnect}\r\n                                deleteKeyCode={46}\r\n                                onLoad={setReactFlowInstance}\r\n                                onDrop={onDrop}\r\n                                onDragOver={onDragOver}\r\n                                onElementClick={onElementClick}\r\n                                onPaneClick={onPaneClick}/>\r\n                        </div>\r\n                        <FontAwesomeIcon onClick={() => deleteMode()} className=\"icon delete\" icon={faTrashAlt} />\r\n                    </div>\r\n\r\n                    <ModalEditCritere\r\n                        title=\"Edit critere\"\r\n                        open={modalEditCritereOpen}  \r\n                        close={closeModalEditCritere}\r\n                        mainAction={saveCritere}\r\n                        selectedCritere={selectedCritere}\r\n                    />\r\n\r\n                    <ModalEditEdge\r\n                        title=\"Edit Edge\"\r\n                        open={modalEditEdgeOpen}  \r\n                        close={closeModalEditEdge}\r\n                        mainAction={saveEdge}\r\n                        selectedEdge={selectedEdge}\r\n                    />\r\n\r\n                    <ModalEditMethod\r\n                        title=\"Edit Method\"\r\n                        open={modalEditMethodOpen}  \r\n                        close={closeModalEditMethod}\r\n                        mainAction={saveMethod}\r\n                        selectedMethod={selectedMethod}\r\n                        resources={resources}\r\n                    />\r\n\r\n                    <ModalEditEndNode\r\n                        title=\"Edit End node\"\r\n                        open={modalEditEndNodeOpen}  \r\n                        close={closeModalEditEndNode}\r\n                        mainAction={saveEndNode}\r\n                        selectedEndNode={selectedEndNode}\r\n                    />\r\n                </ReactFlowProvider>\r\n            : <Loader/> \r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tree;\r\n"]},"metadata":{},"sourceType":"module"}