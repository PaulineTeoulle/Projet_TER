{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\views\\\\FileUpload.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FileUpload extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        id_methode: {\n          \"id_methode\": event.target.value\n        }\n      });\n      console.log(this.state.id_methode);\n      this.getDatasForOneMethod();\n    };\n\n    this.open = () => {\n      let protocol = window.location.protocol;\n      let host = window.location.hostname;\n      let url = protocol + '//' + host;\n      let dynamicPdf = 'ExamenIHM_CorentinRoy.pdf';\n      window.open(url + '/Projet_TER/src/public/documentsRessources/' + dynamicPdf);\n    };\n\n    this.state = {\n      file: null,\n      datas: null,\n      id_methode: {\n        \"id_methode\": 1\n      },\n      staticLink: 'http://localhost/reactTest/MATUI/src/public/documentsRessources/ExamenIHM_CorentinRoy.pdf'\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.uploadFile = this.uploadFile.bind(this);\n  }\n\n  async onSubmit(e) {\n    e.preventDefault();\n    let res = await this.uploadFile(this.state.file);\n    console.log(res.data);\n  }\n\n  onChange(e) {\n    this.setState({\n      file: e.target.files[0]\n    });\n  }\n\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    return await axios.post('http://localhost/reactTest/MATUI/API/Controllers/uploadFile.php', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n  }\n\n  //\n  //\n  // componentDidMount() {\n  //     let protocol = window.location.protocol;\n  //     let host = window.location.hostname;\n  //     let url = protocol + '//' + host;\n  //     if (this.state.datas === null) {\n  //         const json = JSON.stringify(this.state.id_methode);\n  //         axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\n  //             .then(response => {\n  //                 this.setState({datas: response.data});\n  //             })\n  //             .catch(error => console.log(error))\n  //     }\n  // };\n  getDatasForOneMethod() {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n\n    if (this.state.datas === null) {\n      const json = JSON.stringify(this.state.id_methode);\n      console.log(json);\n      axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json).then(response => {\n        this.setState({\n          datas: response.data\n        }, function () {\n          console.log(this.state.datas);\n        });\n      }).catch(error => console.log(error));\n    }\n  }\n\n  render() {\n    if (this.state.datas !== null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.onSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Upload File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Upload File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Read File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: this.state.staticLink,\n          children: \"open pdf (statick link)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: this.open,\n          children: \"open pdf (function dynamic link)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Change Methode id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onChange: this.handleChange.bind(this),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              id: \"name\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", this.state.datas.map(data => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.Nom\n            }, data.ID_Ressource, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 57\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this);\n    } else return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"  \", /*#__PURE__*/_jsxDEV(\"form\", {\n        onChange: this.handleChange.bind(this),\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          id: \"name\",\n          name: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }, this);\n  }\n\n}\n\nexport default FileUpload;","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/FileUpload.js"],"names":["React","axios","FileUpload","Component","constructor","props","handleChange","event","setState","id_methode","target","value","console","log","state","getDatasForOneMethod","open","protocol","window","location","host","hostname","url","dynamicPdf","file","datas","staticLink","onSubmit","bind","onChange","uploadFile","e","preventDefault","res","data","files","formData","FormData","append","post","headers","json","JSON","stringify","then","response","catch","error","render","map","Nom","ID_Ressource"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport axios from 'axios';\r\n\r\nclass FileUpload extends React.Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            datas: null,\r\n            id_methode: {\"id_methode\": 1},\r\n            staticLink: 'http://localhost/reactTest/MATUI/src/public/documentsRessources/ExamenIHM_CorentinRoy.pdf'\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onChange = this.onChange.bind(this)\r\n        this.uploadFile = this.uploadFile.bind(this)\r\n    }\r\n\r\n    async onSubmit(e) {\r\n        e.preventDefault()\r\n        let res = await this.uploadFile(this.state.file);\r\n        console.log(res.data);\r\n    }\r\n\r\n    onChange(e) {\r\n        this.setState({file: e.target.files[0]})\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({id_methode: {\"id_methode\": event.target.value}});\r\n        console.log(this.state.id_methode);\r\n        this.getDatasForOneMethod();\r\n    };\r\n\r\n    async uploadFile(file) {\r\n        const formData = new FormData();\r\n        formData.append('file', file)\r\n        return await axios.post('http://localhost/reactTest/MATUI/API/Controllers/uploadFile.php', formData, {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        });\r\n    }\r\n\r\n    open = () => {\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        let dynamicPdf = 'ExamenIHM_CorentinRoy.pdf';\r\n        window.open(url + '/Projet_TER/src/public/documentsRessources/' + dynamicPdf);\r\n    }\r\n    //\r\n    //\r\n    // componentDidMount() {\r\n    //     let protocol = window.location.protocol;\r\n    //     let host = window.location.hostname;\r\n    //     let url = protocol + '//' + host;\r\n    //     if (this.state.datas === null) {\r\n    //         const json = JSON.stringify(this.state.id_methode);\r\n    //         axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\r\n    //             .then(response => {\r\n    //                 this.setState({datas: response.data});\r\n    //             })\r\n    //             .catch(error => console.log(error))\r\n    //     }\r\n    // };\r\n\r\n    getDatasForOneMethod(){\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n        if (this.state.datas === null) {\r\n            const json = JSON.stringify(this.state.id_methode);\r\n            console.log(json);\r\n            axios.post(url + '/Projet_TER/API/Controllers/ressource/lireRessourcesMethode.php', json)\r\n                .then(response => {\r\n                    this.setState({datas: response.data}, function(){\r\n                        console.log(this.state.datas);\r\n                    });\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        if(this.state.datas !== null){\r\n        return (<div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <h1>Upload File</h1>\r\n                    <input type=\"file\" onChange={this.onChange}/>\r\n                    <button type=\"submit\">Upload File</button>\r\n                </form>\r\n\r\n                <br/>\r\n                <h1>Read File</h1>\r\n                <a href={this.state.staticLink}>open pdf (statick link)</a>\r\n                <br/>\r\n                <p onClick={this.open}>open pdf (function dynamic link)</p>\r\n                <br/><br/><br/>\r\n                <div><h1>Change Methode id</h1>\r\n                    <form onChange={this.handleChange.bind(this)}>\r\n                        <input type=\"number\" id=\"name\" name=\"name\"/>\r\n                    </form>\r\n                    <br/>\r\n\r\n                    <div> {this.state.datas.map(data => <p key={data.ID_Ressource}>{data.Nom}</p>)}</div>\r\n                </div>\r\n            </div>\r\n        )}\r\n        else return(<div>  <form onChange={this.handleChange.bind(this)}>\r\n            <input type=\"number\" id=\"name\" name=\"name\"/>\r\n        </form></div>);\r\n    }\r\n}\r\n\r\nexport default FileUpload;"]},"metadata":{},"sourceType":"module"}