{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\views\\\\Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [mail, setMail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\n  const [errorPseudo, setErrorPseudo] = useState(null);\n  const [errorMail, setErrorMail] = useState(null);\n  const history = useHistory();\n\n  function register() {\n    let protocol = window.location.protocol;\n    let host = window.location.hostname;\n    let url = protocol + '//' + host;\n\n    if (username !== \"\" && mail !== \"\" && password !== \"\" && passwordConfirmation !== \"\" && password === passwordConfirmation) {\n      const json = JSON.stringify({\n        mail: mail,\n        pseudo: username,\n        mot_de_passe: password\n      });\n      axios.post(url + '/API/Controllers/utilisateur/creerUtilisateur.php', json) // axios.post(url + '/API/Controllers/connexion.php', json)\n      .then(response => {\n        if (response.data.ErrorPseudo) {\n          setErrorPseudo(response.data.ErrorPseudo);\n        } else if (response.data.ErrorMail) {\n          setErrorMail(response.data.ErrorMail);\n        } else {\n          history.push({\n            pathname: \"/login\"\n          });\n        }\n      }).catch(error => console.log(error));\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"LoginRegister\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"InputItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"username\",\n            name: \"username\",\n            required: true,\n            placeholder: \"\\uF007     Username\",\n            onChange: e => setUsername(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), errorPseudo && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errorPseudo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"mail\",\n            id: \"mail\",\n            name: \"mail\",\n            required: true,\n            placeholder: \"\\uF0E0     Mail\",\n            onChange: e => setMail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), errorMail && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"error\",\n            children: errorMail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 39\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            required: true,\n            placeholder: \"\\uF023     Password\",\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"passwordConfirmation\",\n            name: \"passwordConfirmation\",\n            required: true,\n            placeholder: \"ï€£     Confirm password\",\n            onChange: e => setPasswordConfirmation(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"action\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button filled\",\n          onClick: register,\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"u850+kQ1BWLSez5+muXMPh3KSlc=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/views/Register.js"],"names":["React","useEffect","useState","axios","useHistory","Register","username","setUsername","mail","setMail","password","setPassword","passwordConfirmation","setPasswordConfirmation","errorPseudo","setErrorPseudo","errorMail","setErrorMail","history","register","protocol","window","location","host","hostname","url","json","JSON","stringify","pseudo","mot_de_passe","post","then","response","data","ErrorPseudo","ErrorMail","push","pathname","catch","error","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from \"react-router\";\r\n\r\nfunction Register() {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [mail, setMail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [passwordConfirmation, setPasswordConfirmation] = useState(\"\");\r\n    const [errorPseudo, setErrorPseudo] =useState(null);\r\n    const [errorMail, setErrorMail] =useState(null);\r\n    const history = useHistory();\r\n\r\n     function register() {\r\n        let protocol = window.location.protocol;\r\n        let host = window.location.hostname;\r\n        let url = protocol + '//' + host;\r\n\r\n        if (username !== \"\" && mail !== \"\" && password !== \"\" && passwordConfirmation !== \"\" && password === passwordConfirmation) {\r\n            const json = JSON.stringify({mail: mail, pseudo: username, mot_de_passe: password});\r\n            axios.post(url + '/API/Controllers/utilisateur/creerUtilisateur.php', json)\r\n                // axios.post(url + '/API/Controllers/connexion.php', json)\r\n                .then(response => {\r\n                    if(response.data.ErrorPseudo){\r\n                        setErrorPseudo(response.data.ErrorPseudo);\r\n                    }\r\n                    else if(response.data.ErrorMail){\r\n                        setErrorMail(response.data.ErrorMail);\r\n                    }\r\n                    else {\r\n                        history.push({\r\n                            pathname:  \"/login\",\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => console.log(error))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"LoginRegister\">\r\n            <div>\r\n                <h3>Sign up</h3>\r\n                <div className=\"InputItems\">\r\n                    <div>\r\n                        <input type=\"text\" id=\"username\" name=\"username\" required placeholder=\"ï€‡     Username\"\r\n                               onChange={e => setUsername(e.target.value)}/>\r\n                        {errorPseudo &&(<p className=\"error\">{errorPseudo}</p>)}\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"mail\" id=\"mail\" name=\"mail\" required placeholder=\"ïƒ      Mail\"\r\n                               onChange={e => setMail(e.target.value)}/>\r\n                        {errorMail &&(<p className=\"error\">{errorMail}</p>)}\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"password\" id=\"password\" name=\"password\" required placeholder=\"ï€£     Password\"\r\n                               onChange={e => setPassword(e.target.value)}/>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <input type=\"password\" id=\"passwordConfirmation\" name=\"passwordConfirmation\" required\r\n                               placeholder={\"ï€£     Confirm password\"}\r\n                               onChange={e => setPasswordConfirmation(e.target.value)}/>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"action\">\r\n                    <button className=\"button filled\" onClick={register}>Sign up</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}