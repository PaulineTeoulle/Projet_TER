{"ast":null,"code":"var _jsxFileName = \"C:\\\\wamp64\\\\www\\\\Projet_TER\\\\src\\\\components\\\\AuthenticatedRoute.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport Auth from \"../contexts/Auth\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthenticatedRoute = ({\n  path,\n  component\n}) => {\n  _s();\n\n  const {\n    isAuthenticated\n  } = useContext(Auth);\n  return isAuthenticated ? /*#__PURE__*/_jsxDEV(Route, {\n    path: path,\n    component: component\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 56\n  }, this);\n};\n\n_s(AuthenticatedRoute, \"GtrAsE+c3H8n3wulM7SYqbWjm6I=\");\n\n_c = AuthenticatedRoute;\nexport default AuthenticatedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthenticatedRoute\");","map":{"version":3,"sources":["C:/wamp64/www/Projet_TER/src/components/AuthenticatedRoute.js"],"names":["React","useContext","Auth","Redirect","Route","AuthenticatedRoute","path","component","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,SAAQC,QAAR,EAAkBC,KAAlB,QAA8B,kBAA9B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOC,EAAAA;AAAP,CAAD,KAAuB;AAAA;;AAC9C,QAAM;AAACC,IAAAA;AAAD,MAAoBP,UAAU,CAACC,IAAD,CAApC;AACA,SAAOM,eAAe,gBAClB,QAAC,KAAD;AAAO,IAAA,IAAI,EAAEF,IAAb;AAAmB,IAAA,SAAS,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,UADkB,gBAC6B,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,UADnD;AAEH,CAJD;;GAAMF,kB;;KAAAA,kB;AAKN,eAAeA,kBAAf","sourcesContent":["import React, {useContext} from 'react';\r\nimport Auth from \"../contexts/Auth\";\r\nimport {Redirect, Route} from \"react-router-dom\";\r\n\r\nconst AuthenticatedRoute = ({path, component}) => {\r\n    const {isAuthenticated} = useContext(Auth);\r\n    return isAuthenticated ?(\r\n        <Route path={path} component={component}/> ):( <Redirect to=\"/login\"/>)\r\n}\r\nexport default AuthenticatedRoute;"]},"metadata":{},"sourceType":"module"}